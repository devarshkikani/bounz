androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.window.embedding.SplitPlaceholderRule
com.spikeapi.model.SpikeBreathingDataType
com.moengage.pushbase.internal.MoEPushWorker
com.moe.pushlibrary.activities.MoEActivity$onCreate$6
com.spikeapi.healthconnect.HealthConnectAvailability
com.android.installreferrer.api.ReferrerDetails
com.spikeapi.network.response.MuscleMassData
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1
com.spikeapi.SpikeExceptions$SpikePermissionsNotGrantedException
com.google.android.gms.common.SupportErrorDialogFragment
com.google.android.gms.common.api.Scope
com.spikeapi.network.response.BMIData
com.moengage.pushbase.internal.fragments.DatePickerFragment
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
com.google.android.gms.common.util.DynamiteApi
com.google.android.gms.common.GooglePlayServicesManifestException
com.spikeapi.network.request.HeightStats
androidx.activity.ComponentActivity$4
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.window.layout.EmptyDecorator
androidx.appcompat.widget.ButtonBarLayout
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
com.google.firebase.provider.FirebaseInitProvider
com.moengage.pushbase.activities.PushClickDialogTracker$onDateSelected$2
com.spikeapi.network.request.SessionsRequest
com.moengage.pushbase.activities.PushClickDialogTracker$onItemSelected$1
com.spikeapi.network.request.SleepRawData
com.moengage.pushbase.activities.PushTracker$onCreate$3
com.spikeapi.network.request.CoreTemperatureStats
com.spikeapi.network.response.SpikeSourceWebhook
androidx.media.AudioAttributesImpl
com.moengage.core.internal.push.pushamp.PushAmpHandler
androidx.window.layout.HardwareFoldingFeature$Type
com.moengage.core.internal.push.fcm.FcmHandler
androidx.fragment.app.FragmentManager$6
com.moengage.pushbase.internal.fragments.LaterDialogFragment
androidx.window.layout.WindowMetricsCalculator$Companion
com.facebook.login.LoginFragment
com.spikeapi.network.response.Level
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
com.spikeapi.network.response.IntradayGlucoseData
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
androidx.window.layout.SidecarAdapter
kotlin.internal.jdk7.JDK7PlatformImplementations
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.activity.result.ActivityResultRegistry$1
com.moengage.pushbase.activities.PushClickDialogTracker$onCreate$1
androidx.window.R
com.spikeapi.model.SpikeBreathingData
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
com.yalantis.ucrop.view.OverlayView
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
com.spikeapi.model.SpikeStepsDataType
com.spikeapi.SpikeLogger
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.window.layout.FoldingFeature$Orientation
com.vernost.BounzAppUAT.BounzApplication
androidx.appcompat.widget.ActionBarOverlayLayout
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType
com.spikeapi.network.request.WaterPercentageValue
com.facebook.messenger.Messenger
androidx.media.AudioAttributesImplApi21Parcelizer
com.spikeapi.network.response.OxygenSaturationIntradayData
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
com.spikeapi.SpikeExceptions
androidx.window.layout.WindowLayoutInfo
com.spikeapi.network.request.WaterPercentage
androidx.window.layout.FoldingFeature$OcclusionType
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
com.spikeapi.network.request.GlucoseRecord
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
androidx.window.embedding.EmbeddingCompat
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.media.AudioAttributesCompatParcelizer
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.google.android.gms.common.api.internal.zzd
androidx.window.layout.WindowMetricsCalculatorCompat
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
androidx.window.embedding.EmbeddingBackend
androidx.appcompat.widget.Toolbar
android.support.v4.app.RemoteActionCompatParcelizer
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
com.spikeapi.network.response.HrZone
com.spikeapi.model.SpikeSleepDataType
android.support.v4.media.RatingCompat
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
androidx.window.embedding.SplitPairRule
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.window.layout.FoldingFeature$State
com.spikeapi.SpikeDataTypes
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface
io.flutter.plugins.imagepicker.ImagePickerFileProvider
com.google.firebase.analytics.FirebaseAnalytics
com.spikeapi.SpikeConnection$Companion
com.moengage.pushbase.activities.PushClickDialogTracker$onItemSelected$2
io.flutter.view.FlutterCallbackInformation
com.spikeapi.network.response.SpikeHRVIntradayData
kotlin.jvm.internal.DefaultConstructorMarker
android.support.v4.media.MediaBrowserCompat$MediaItem
com.moengage.pushbase.activities.PushClickDialogTracker$onCreate$2
androidx.emoji2.text.EmojiCompatInitializer$1
com.moengage.firebase.MoEFireBaseMessagingService
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
com.google.firebase.iid.FirebaseInstanceId
com.google.firebase.iid.FirebaseInstanceIdReceiver
com.spikeapi.network.request.DistanceRecord
com.google.android.gms.common.api.Status
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
kotlin.reflect.jvm.internal.ReflectionFactoryImpl
androidx.window.embedding.EmbeddingAdapter
androidx.savedstate.Recreator
com.spikeapi.network.request.BodyFatPercentageValue
com.spikeapi.model.SpikeWebhookJob
com.lyokone.location.FlutterLocationService
com.spikeapi.network.request.BreathingRawData
com.spikeapi.network.response.StepsResponseData
androidx.browser.browseractions.BrowserActionsFallbackMenuView
androidx.startup.InitializationProvider
com.google.firebase.sessions.FirebaseSessionsRegistrar
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView
androidx.window.layout.HardwareFoldingFeature
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1
com.spikeapi.network.request.HeartRateRawData
com.moengage.pushbase.internal.activity.PermissionActivity
androidx.core.graphics.drawable.IconCompat
com.spikeapi.network.request.ActiveCaloriesRecord
com.spikeapi.model.SpikeSleepData
com.spikeapi.network.request.HeightValue
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
kotlin.coroutines.jvm.internal.BaseContinuationImpl
androidx.window.layout.SidecarWindowBackend$Companion
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
com.spikeapi.network.response.OxygenSaturationResponseData
com.spikeapi.network.response.ActivitiesStreamResponseData
kotlinx.coroutines.internal.StackTraceRecoveryKt
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants$ProcessGlobalConfigMapKey
com.spikeapi.network.request.TotalCaloriesBurned
com.spikeapi.network.request.HeartRateVariabilitySummary
com.spikeapi.network.response.TimeSeriesData
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.lifecycle.LifecycleCoroutineScopeImpl
android.support.v4.media.session.PlaybackStateCompat$CustomAction
androidx.window.core.Version$bigInteger$2
androidx.window.embedding.EmbeddingTranslatingCallback
com.spikeapi.network.request.SkinTemperatureValue
com.google.android.gms.common.annotation.KeepName
androidx.window.embedding.SplitPairFilter
com.spikeapi.model.SpikeActivitiesStreamData
androidx.health.platform.client.impl.sdkservice.HealthDataSdkService
androidx.window.layout.WindowInfoTrackerDecorator
com.spikeapi.SpikeProcessedDataType
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
com.spikeapi.model.SpikeCaloriesData
androidx.appcompat.app.AlertController$RecycleListView
com.spikeapi.network.response.SpikeSource
com.spikeapi.model.SpikeDataType
android.support.v4.media.MediaDescriptionCompat
androidx.window.embedding.ActivityRule
androidx.window.layout.ExtensionWindowLayoutInfoBackend
android.support.v4.media.MediaBrowserCompat$ItemReceiver
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.profileinstaller.ProfileInstallerInitializer
androidx.appcompat.widget.ViewStubCompat
com.moengage.android.Constants
com.moengage.core.internal.data.reports.DataSyncJob
com.facebook.internal.FacebookDialogFragment
com.spikeapi.model.SpikeStepsData
com.facebook.share.Share
com.google.firebase.datatransport.TransportRegistrar
androidx.window.embedding.SplitController$Companion
androidx.media.AudioAttributesImplApi21
com.google.android.gms.auth.TokenData
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface
e.b
com.spikeapi.SpikeExceptions$SpikeConnectionIsClosedException
com.spikeapi.network.response.SpikeResponseData$DefaultImpls
androidx.window.embedding.SplitInfo
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
androidx.window.R$attr
com.spikeapi.network.response.Lap
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
com.spikeapi.network.request.StepsSummary
com.facebook.CustomTabActivity
com.google.firebase.messaging.FirebaseMessaging
com.android.installreferrer.api.InstallReferrerStateListener
com.facebook.login.Login
com.spikeapi.network.response.BodyFatPercentageData
androidx.cardview.widget.CardView
com.google.firebase.messaging.FirebaseMessagingService
com.google.android.gms.location.LocationAvailability
com.spikeapi.SpikeExceptions$SpikeInvalidDateRangeException
com.spikeapi.SpikeEnvironment
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.window.embedding.EmbeddingRule
androidx.window.layout.HardwareFoldingFeature$Companion
com.moe.pushlibrary.activities.MoEActivity$onCreate$5
androidx.window.embedding.ActivityStack
androidx.webkit.WebViewClientCompat
io.flutter.embedding.android.FlutterSplashView$SavedState
com.moe.pushlibrary.activities.MoEActivity$onCreate$4
com.spikeapi.network.request.SkinTemperature
androidx.window.layout.WindowInfoTracker$Companion
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.window.embedding.ActivityFilter
dev.spike.flutter_health_connect.model.SpikeLoggingData
com.spikeapi.network.response.BreathingResponseData
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
com.spikeapi.model.SpikeOxygenSaturationDataType
com.spikeapi.network.response.IntradayDistanceData
androidx.core.app.CoreComponentFactory
com.spikeapi.network.request.BloodPressureStats
com.spikeapi.network.request.WeightValue
com.google.android.gms.measurement.AppMeasurementJobService
com.moengage.inapp.internal.InAppHandlerImpl
io.flutter.plugins.firebase.dynamiclinks.FlutterFirebaseAppRegistrar
com.moengage.pushbase.internal.MoETimePickerDialog
com.moengage.pushbase.activities.PushTracker$onCreate$2
com.google.firebase.concurrent.ExecutorsRegistrar
io.flutter.plugins.urllauncher.WebViewActivity
androidx.window.embedding.SplitRule
androidx.lifecycle.SingleGeneratedAdapterObserver
com.moengage.pushbase.activities.PushTracker$onCreate$1
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.google.android.gms.measurement.AppMeasurementService
androidx.activity.ImmLeaksCleaner
androidx.transition.FragmentTransitionSupport
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.google.firebase.components.ComponentRegistrar
com.google.android.gms.auth.api.signin.GoogleSignInOptions
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
kotlin.internal.jdk8.JDK8PlatformImplementations
com.spikeapi.network.request.Level
androidx.window.layout.FoldingFeature$Orientation$Companion
com.spikeapi.network.request.HeartRateVariability
com.spikeapi.network.request.OxygenSaturationRawData
com.spikeapi.network.request.BloodPressureValue
com.yalantis.ucrop.view.UCropView
dev.fluttercommunity.plus.share.ShareFileProvider
androidx.lifecycle.ProcessLifecycleInitializer
com.spikeapi.model.SpikeBodyData
com.moengage.core.internal.lifecycle.GlobalApplicationLifecycleObserver
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1
com.baseflow.geolocator.GeolocatorLocationService
com.spikeapi.network.response.BoneMassData
androidx.health.platform.client.permission.Permission
com.moengage.pushbase.internal.PushBaseHandlerImpl
androidx.lifecycle.SavedStateHandleController
com.spikeapi.network.response.IntradayStepsData
com.spikeapi.network.response.DiffFromBaselineTemperatureData
androidx.window.layout.FoldingFeature$State$Companion
com.spikeapi.network.response.CaloriesResponseData
androidx.appcompat.widget.SearchView
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$2
com.spikeapi.model.SpikeActivitiesStreamDataType
com.spikeapi.network.request.OxygenSaturationSummary
com.spikeapi.network.request.BreathingRecord
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
com.spikeapi.network.response.WaterPercentageData
androidx.window.java.R
com.facebook.FacebookActivity
com.facebook.CustomTabMainActivity
com.spikeapi.SpikeExceptions$SpikeInvalidCredentialsException
androidx.appcompat.view.menu.ExpandedMenuView
androidx.window.embedding.SplitRule$LayoutDir
com.spikeapi.network.request.Lap
androidx.window.layout.ActivityCompatHelperApi30
androidx.activity.ComponentActivity$3
com.moengage.pushbase.activities.PushClickDialogTracker
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
com.moengage.core.internal.push.mipush.MiPushHandler
com.google.android.gms.common.api.internal.BasePendingResult
com.spikeapi.network.request.HeartRateVariabilityValue
com.spikeapi.network.request.RestingHeartRateSummary
com.facebook.gamingservices.GamingServices
com.spikeapi.network.response.BreathingIntradayData
androidx.core.app.RemoteActionCompatParcelizer
androidx.window.layout.WindowInfoTracker
com.spikeapi.network.request.BMI
androidx.lifecycle.DefaultLifecycleObserver
com.spikeapi.network.request.MuscleMassStats
kotlinx.coroutines.android.AndroidDispatcherFactory
io.flutter.plugins.firebase.crashlytics.FirebaseCrashlyticsTestCrash
com.moengage.pushbase.push.PushMessageListener
com.spikeapi.network.response.IntradayCaloriesData
com.spikeapi.network.request.GlucoseSummary
com.spikeapi.network.request.WeightStats
com.spikeapi.network.request.HeartRate
androidx.window.layout.WindowMetrics
androidx.core.widget.NestedScrollView
androidx.appcompat.widget.ActionMenuView
com.spikeapi.model.SpikeHeartRateData
io.flutter.view.AccessibilityViewEmbedder
androidx.window.layout.WindowMetricsCalculatorDecorator
com.spikeapi.network.request.SkinTemperatureStats
dev.spike.flutter_health_connect.model.SpikeOperationResult
com.spikeapi.network.response.SpikeWebhookJobResponse
com.spikeapi.network.request.OxygenSaturationRecord
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
com.spikeapi.network.response.BloodPressureData
com.moengage.pushbase.internal.fragments.TimePickerFragment
com.spikeapi.network.request.DistanceRawData
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.appcompat.widget.ActionBarContainer
com.spikeapi.network.response.SpikeHRIntradayData
com.spikeapi.network.response.WeightData
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseAppRegistrar
com.facebook.internal.FacebookInitProvider
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.facebook.core.Core
com.spikeapi.network.request.BoneMassValue
com.spikeapi.network.response.SpikeHRVIntradayValueData
com.spikeapi.network.response.GlucoseResponseData
com.moengage.pushbase.activities.PushTracker
io.flutter.plugins.firebase.crashlytics.FlutterError
com.moengage.pushbase.activities.PushClickDialogTracker$onDateDialogCancelled$1
androidx.window.layout.DisplayCompatHelperApi28
com.spikeapi.network.request.ActivitiesSummaryRawData
io.flutter.plugin.platform.SingleViewPresentation
com.moengage.core.internal.security.SecurityHandler
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
androidx.appcompat.view.menu.ActionMenuItemView
androidx.window.layout.WindowMetricsCalculator
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.spikeapi.network.request.StepsRawData
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.window.embedding.EmbeddingCompat$Companion
com.spikeapi.network.request.RestingHeartRate
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData
com.spikeapi.SpikeExceptions$SpikeServerException
androidx.core.app.RemoteActionCompat
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.embedding.SplitRuleParser
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
com.moengage.pushbase.activities.PushClickDialogTracker$onTimeSelected$2
com.moengage.pushbase.activities.PushClickDialogTracker$onTimeSelected$4
com.facebook.CurrentAccessTokenExpirationBroadcastReceiver
com.spikeapi.model.SpikeGlucoseData
androidx.window.embedding.EmptyEmbeddingComponent
com.facebook.login.DeviceAuthDialog
com.spikeapi.model.SpikeData
com.spikeapi.network.request.ActivitiesStreamRawData
com.yalantis.ucrop.view.widget.AspectRatioTextView
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
androidx.fragment.app.DialogFragment
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
androidx.window.core.Version$Companion
com.spikeapi.model.SpikeActivitiesSummaryData
com.moe.pushlibrary.activities.MoEActivity$onCreate$2
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.spikeapi.network.request.MuscleMass
androidx.appcompat.widget.AppCompatImageView
com.moengage.core.internal.push.PushManager
com.spikeapi.network.request.BMIValue
com.spikeapi.network.request.TotalCaloriesSummary
com.spikeapi.network.response.SpikeResponseData
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
com.moengage.pushbase.activities.PushClickDialogTracker$onTimeDialogCancelled$1
com.spikeapi.network.request.ActiveCaloriesBurned
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$1
com.google.android.gms.measurement.AppMeasurementReceiver
com.google.android.gms.measurement.AppMeasurement
com.google.android.play.core.common.PlayCoreDialogWrapperActivity
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
com.facebook.AuthenticationTokenManager$CurrentAuthenticationTokenChangedBroadcastReceiver
androidx.window.layout.SidecarCompat$Companion
com.facebook.common.Common
com.spikeapi.network.request.CoreTemperatureValue
com.moengage.core.internal.storage.encrypted.EncryptedStorageHandler
androidx.window.layout.FoldingFeature$OcclusionType$Companion
com.spikeapi.network.request.CoreTemperature
com.spikeapi.network.request.BodyFatPercentage
com.spikeapi.network.request.HeartRateSummary
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
androidx.window.core.Version
androidx.window.layout.SidecarCompat
androidx.window.layout.WindowBackend
com.google.firebase.iid.Registrar
com.moengage.core.internal.push.pushkit.PushKitHandler
com.spikeapi.network.response.SpikeHRVData
androidx.versionedparcelable.CustomVersionedParcelable
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.facebook.applinks.AppLinks
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.spikeapi.network.request.BMIStats
com.spikeapi.network.request.StepsRecord
com.spikeapi.network.response.TemperatureData
com.spikeapi.network.request.Weight
com.spikeapi.network.request.BoneMassStats
com.spikeapi.network.request.SleepSummary
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.spikeapi.network.request.SpikeRequest
com.moengage.core.internal.push.base.PushBaseHandler
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
com.spikeapi.network.response.BodyData
androidx.window.embedding.ExtensionEmbeddingBackend
com.spikeapi.network.request.BreathingSummary
com.yalantis.ucrop.view.GestureCropImageView
com.spikeapi.network.response.HeightData
com.spikeapi.SpikeExceptions$SpikeInvalidCallbackUrlException
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.appcompat.view.menu.ListMenuItemView
com.spikeapi.network.response.SessionsResponse
androidx.appcompat.widget.ContentFrameLayout
com.vernost.BounzAppUAT.MainActivity
com.spikeapi.network.request.RestingHeartRateValue
com.spikeapi.network.request.BoneMass
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.layout.SidecarWindowBackend
com.spikeapi.network.request.HeartRateValue
com.moengage.firebase.internal.FcmHandlerImpl
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar
com.spikeapi.network.request.ActiveCaloriesSummary
com.spikeapi.model.SpikeBodyDataType
com.spikeapi.network.request.RawHealthData
androidx.emoji2.text.EmojiCompatInitializer
androidx.window.layout.HardwareFoldingFeature$Type$Companion
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
androidx.appcompat.widget.AlertDialogLayout
com.google.android.datatransport.cct.CctBackendFactory
com.spikeapi.network.request.CaloriesRawData
androidx.window.layout.ExtensionInterfaceCompat
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
io.flutter.embedding.engine.FlutterJNI
com.moengage.core.internal.lifecycle.ApplicationLifecycleObserver
androidx.media.AudioAttributesImplBase
androidx.window.layout.WindowInfoTrackerImpl
okhttp3.internal.publicsuffix.PublicSuffixDatabase
androidx.window.layout.DisplayFeature
com.spikeapi.ConnectionState
com.spikeapi.network.request.DistanceSummary
androidx.appcompat.widget.ActionBarContextView
androidx.window.embedding.MatcherUtils
androidx.lifecycle.SavedStateHandleAttacher
androidx.annotation.Keep
android.support.v4.media.session.MediaSessionCompat$Token
com.spikeapi.network.response.ActivitySummaryResponseData
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
android.support.v4.media.session.ParcelableVolumeInfo
androidx.activity.ComponentActivity$5
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.appcompat.widget.DialogTitle
org.chromium.support_lib_boundary.StaticsBoundaryInterface
com.spikeapi.model.SpikeDistanceDataType
androidx.media.AudioAttributesCompat
com.android.installreferrer.api.InstallReferrerClient
com.yalantis.ucrop.UCropActivity
com.moengage.widgets.MoERatingBar
com.moengage.inbox.core.internal.InboxHandlerImpl
com.spikeapi.SpikeConnection
com.spikeapi.network.response.HeartRateResponseData
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
com.spikeapi.network.request.TotalCaloriesRecord
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
com.spikeapi.network.request.BodyRawData
com.spikeapi.network.response.DistanceResponseData
com.moe.pushlibrary.activities.MoEActivity
com.google.firebase.components.ComponentDiscoveryService
com.spikeapi.SpikeRawDataType
androidx.fragment.app.Fragment$5
androidx.window.R$id
android.support.v4.media.MediaMetadataCompat
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.window.embedding.SplitRule$Api30Impl
kotlin.Metadata
com.spikeapi.model.SpikeCaloriesDataType
com.spikeapi.network.request.MuscleMassValue
com.moengage.pushbase.activities.PushClickDialogTracker$onDateSelected$1
com.moengage.core.MoEngage
com.spikeapi.network.response.SleepResponseData
androidx.window.embedding.SplitController
androidx.lifecycle.DefaultLifecycleObserverAdapter
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
com.facebook.all.All
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
com.spikeapi.network.response.SpikeResponse
com.google.firebase.FirebaseCommonRegistrar
com.spikeapi.network.response.Sample
androidx.window.R$styleable
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.spikeapi.network.request.BloodPressure
com.google.firebase.messaging.FirebaseMessagingRegistrar
com.spikeapi.network.request.RawHealthData$DefaultImpls
com.google.firebase.crashlytics.CrashlyticsRegistrar
com.google.android.gms.location.LocationRequest
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.versionedparcelable.ParcelImpl
com.moe.pushlibrary.activities.MoEActivity$onCreate$3
com.google.android.gms.common.api.GoogleApiActivity
io.flutter.plugins.GeneratedPluginRegistrant
com.spikeapi.network.response.BodyResponseData
android.support.v4.media.session.PlaybackStateCompat
org.chromium.support_lib_boundary.WebAuthnCallbackBoundaryInterface
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
com.google.android.gms.auth.UserRecoverableAuthException
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface
com.spikeapi.model.SpikeHeartRateDataType
com.google.android.gms.common.api.internal.LifecycleCallback
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData
com.spikeapi.network.request.GlucoseRawData
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
com.google.android.gms.auth.api.signin.SignInAccount
com.google.android.gms.auth.api.signin.RevocationBoundService
com.spikeapi.network.request.Height
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants
com.spikeapi.network.response.TemperatureTimeSeriesData
androidx.window.core.Bounds
com.google.android.gms.auth.api.signin.internal.SignInConfiguration
com.moengage.pushbase.internal.MoEPushReceiver
com.spikeapi.network.request.BodyFatPercentageStats
androidx.media.AudioAttributesImplBaseParcelizer
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar
androidx.profileinstaller.ProfileInstallReceiver
com.google.android.gms.location.LocationResult
com.spikeapi.network.response.DetailedTemperatureData
com.moengage.widgets.NudgeView
com.spikeapi.model.SpikeOxygenSaturationData
com.google.firebase.installations.FirebaseInstallationsRegistrar
com.spikeapi.network.request.WaterPercentageStats
androidx.window.core.ExperimentalWindowApi
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface
com.spikeapi.model.SpikeGlucoseDataType
androidx.window.layout.FoldingFeature
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
com.google.android.gms.common.internal.ReflectedParcelable
com.spikeapi.model.SpikeActivitiesSummaryDataType
com.moengage.pushbase.activities.PushClickDialogTracker$onTimeSelected$1
com.moe.pushlibrary.activities.MoEActivity$onCreate$1
androidx.window.embedding.EmbeddingInterfaceCompat
com.spikeapi.SpikeExceptions$SpikeException
androidx.window.layout.SidecarAdapter$Companion
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.window.layout.SidecarCompat$FirstAttachAdapter
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.spikeapi.model.SpikeDistanceData
androidx.window.layout.ActivityCompatHelperApi24
com.moengage.widgets.MoERatingBar: int colorFillPressedOff
com.google.crypto.tink.proto.RegistryConfig: int ENTRY_FIELD_NUMBER
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
com.spikeapi.network.response.Sample: java.lang.Double speed
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
io.flutter.plugin.mouse.MouseCursorPlugin$2: long serialVersionUID
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.spikeapi.network.request.BoneMassStats: java.lang.Double avg
androidx.window.R$attr: int finishPrimaryWithSecondary
com.spikeapi.network.response.WeightData: java.lang.Double value
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer maxHr
com.google.android.gms.internal.measurement.zzgd: int zzI
androidx.health.platform.client.proto.ByteString$BoundedByteString: long serialVersionUID
com.google.crypto.tink.proto.EncryptedKeyset: int KEYSET_INFO_FIELD_NUMBER
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
dev.spike.flutter_health_connect.model.SpikeLoggingData: java.lang.String message
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer maxStressLevel
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
com.google.android.gms.internal.measurement.zzgy: int zze
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType CALORIES
com.google.gson.JsonParseException: long serialVersionUID
com.google.crypto.tink.proto.KeyTypeEntry: int keyManagerVersion_
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int TYPE_URL_FIELD_NUMBER
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
com.spikeapi.network.request.BreathingSummary: java.lang.Double avg
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
com.google.android.gms.internal.measurement.zzfx: int zzd
com.spikeapi.network.request.HeartRateSummary: java.lang.Integer count
com.spikeapi.network.response.TemperatureTimeSeriesData: java.lang.Double temperatureCelsius
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
com.spikeapi.model.SpikeDistanceData: java.util.List entries
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzli zzf
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double maxSpeed
com.moengage.pushbase.internal.MoETimePickerDialog: int maxHour
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.google.crypto.tink.proto.AesGcmKey: int version_
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.health.platform.client.proto.ErrorProto$ErrorStatus: androidx.health.platform.client.proto.Internal$ProtobufList permission_
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType STEPS
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: long serialVersionUID
com.spikeapi.network.request.SleepRawData: java.lang.String bedtimeStart
com.spikeapi.network.request.HeightStats: java.lang.Integer count
com.moe.pushlibrary.activities.MoEActivity$onCreate$3: boolean $isEmbedded
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double hf
androidx.health.platform.client.error.ErrorCode: int NO_PERMISSION
androidx.window.R$attr: int placeholderActivityName
com.spikeapi.network.response.SleepResponseData: java.lang.Double efficiency
com.google.android.gms.internal.measurement.zzgm: long zze
com.facebook.login.DeviceAuthDialog$RequestState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
com.facebook.appevents.PersistedEvents: long serialVersionUID
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.google.android.gms.internal.measurement.zzfp: int zzd
androidx.health.platform.client.proto.DataProto$DataPoint: androidx.health.platform.client.proto.Parser PARSER
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.shaded.protobuf.ByteString value_
androidx.health.platform.client.proto.DataProto$Device: java.lang.String manufacturer_
com.google.crypto.tink.proto.AesCtrKeyFormat: int PARAMS_FIELD_NUMBER
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.fragment.app.Fragment: boolean mHiddenChanged
com.spikeapi.network.response.DetailedTemperatureData: java.lang.Double temperatureCelsius
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double elevLow
com.spikeapi.network.request.TotalCaloriesRecord: java.lang.Double value
androidx.health.platform.client.proto.DataProto$AggregateDataRow: int END_TIME_EPOCH_MS_FIELD_NUMBER
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.proto.HmacParams params_
com.google.android.gms.internal.measurement.zzgd: long zzl
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeBreathingDataType BREATHING
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.spikeapi.network.request.Level: java.lang.String endTime
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer dailyMovement
androidx.fragment.app.Fragment: java.util.ArrayList mOnPreAttachedListeners
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: int DEK_TEMPLATE_FIELD_NUMBER
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
com.spikeapi.network.request.WaterPercentage: com.spikeapi.network.request.WaterPercentageStats stats
com.spikeapi.ConnectionState: java.lang.String applicationId
com.facebook.FacebookServiceException: long serialVersionUID
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer weightedAverageWatts
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse: androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse DEFAULT_INSTANCE
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer high
com.spikeapi.network.response.Sample: java.lang.Integer movingTime
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType[] $VALUES
com.spikeapi.network.request.BloodPressureStats: java.lang.Double avgSystolic
com.google.android.gms.internal.measurement.zzgd: long zzj
com.google.crypto.tink.proto.Keyset$Key: int outputPrefixType_
androidx.datastore.preferences.PreferencesProto$Value: int bitField0_
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BMIData bmi
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
com.spikeapi.network.request.BreathingRawData: com.spikeapi.network.request.BreathingSummary summary
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest DEFAULT_INSTANCE
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.google.crypto.tink.proto.AesEaxParams: int IV_SIZE_FIELD_NUMBER
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int version_
androidx.window.embedding.ActivityStack: boolean isEmpty
androidx.health.platform.client.proto.DataProto$DataPoint: int UPDATE_TIME_MILLIS_FIELD_NUMBER
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
com.spikeapi.network.response.IntradayCaloriesData: java.lang.String time
com.spikeapi.network.request.BoneMassValue: java.lang.Double value
androidx.health.platform.client.error.ErrorCode: int INVALID_OWNERSHIP
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.Weight weight
com.spikeapi.network.request.BreathingRawData: java.lang.String date
androidx.health.platform.client.proto.DataProto$DataType: java.lang.String name_
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzgk zza
androidx.health.platform.client.proto.DataProto$DataPoint: androidx.health.platform.client.proto.DataProto$DataType dataType_
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
com.moengage.pushbase.internal.MoETimePickerDialog: int minMinute
com.google.android.gms.internal.measurement.zzer: java.lang.String zzg
com.moe.pushlibrary.activities.MoEActivity$onCreate$1: com.moe.pushlibrary.activities.MoEActivity this$0
com.spikeapi.network.response.IntradayGlucoseData: java.lang.String status
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.Integer level
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: androidx.health.platform.client.proto.Parser PARSER
com.google.crypto.tink.proto.AesCmacParams: int TAG_SIZE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzei: int zzd
androidx.fragment.app.Fragment: int INITIALIZING
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: int ASC_ORDERING_FIELD_NUMBER
kotlinx.coroutines.channels.BufferedChannel: long receivers
androidx.fragment.app.DialogFragment: int STYLE_NORMAL
com.spikeapi.network.request.BodyRawData: com.spikeapi.SpikeRawDataType type
androidx.fragment.app.DialogFragment: boolean mCancelable
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
kotlin.jvm.internal.CallableReference: java.lang.String signature
com.google.crypto.tink.proto.Keyset: int primaryKeyId_
com.spikeapi.network.request.WaterPercentageValue: java.lang.String time
com.spikeapi.network.request.Level: java.lang.String level
com.google.android.gms.internal.measurement.zzfz: java.lang.String zzf
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzX
com.spikeapi.network.request.BloodPressureValue: java.lang.Double valueSystolic
androidx.health.platform.client.proto.RequestProto$AggregateMetricSpec: int DATA_TYPE_NAME_FIELD_NUMBER
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int APP
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter mFullyDrawnReporter
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.AesGcmSivKey: int VERSION_FIELD_NUMBER
androidx.window.R$attr: int splitMinSmallestWidth
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.HeartRateVariability heartRateVariability
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
com.spikeapi.model.SpikeStepsData: java.util.List entries
androidx.health.platform.client.proto.DataProto$AggregateDataRow: long endTimeEpochMs_
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.location.zzd: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzlb: int zzd
com.spikeapi.network.response.SpikeSource: java.lang.String message
androidx.health.platform.client.proto.ErrorProto$ErrorStatus: int CODE_FIELD_NUMBER
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
androidx.fragment.app.DialogFragment: int mTheme
kotlinx.coroutines.CancelledContinuation: int _resumed
com.google.crypto.tink.proto.AesGcmKeyFormat: int keySize_
com.facebook.AccessToken: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String providerUserId
com.google.android.gms.internal.measurement.zzfd: int zzh
com.spikeapi.network.request.BodyFatPercentageStats: java.lang.Integer count
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Double distance
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
androidx.window.R$attr: int activityAction
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.String dataType
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer movingTime
com.spikeapi.network.request.BreathingRecord: java.lang.String startTime
com.google.android.gms.internal.measurement.zzgd: long zzx
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
androidx.datastore.preferences.protobuf.AbstractMessageLite: int memoizedHashCode
androidx.health.platform.client.proto.DataProto$DataPoint: androidx.health.platform.client.proto.DataProto$DataOrigin dataOrigin_
com.google.android.gms.internal.measurement.zzfh: com.google.android.gms.internal.measurement.zzfh zza
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.proto.RegistryConfig DEFAULT_INSTANCE
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.measurement.internal.zzau: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.proto.DataProto$DataPoint: java.lang.String uid_
androidx.fragment.app.Fragment: java.lang.String mTargetWho
androidx.health.platform.client.proto.TimeProto$TimeSpec: androidx.health.platform.client.proto.Parser PARSER
com.google.crypto.tink.proto.AesCtrKey: int VERSION_FIELD_NUMBER
com.spikeapi.network.response.OxygenSaturationIntradayData: java.lang.Double value
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String source
com.spikeapi.network.response.SpikeResponse: java.util.List sources
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: int bitField0_
androidx.health.platform.client.error.ErrorCode: int INVALID_PERMISSION_RATIONALE_DECLARATION
androidx.datastore.preferences.PreferencesProto$Value: int DOUBLE_FIELD_NUMBER
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.health.platform.client.proto.ErrorProto$ErrorStatus: java.lang.String message_
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Boolean manual
com.google.crypto.tink.proto.HmacParams: com.google.crypto.tink.proto.HmacParams DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzey: int zze
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String timeZoneOffset
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer minHr
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzR
androidx.window.embedding.ActivityRule: boolean alwaysExpand
com.spikeapi.network.response.HeartRateResponseData: com.spikeapi.network.response.SpikeHRVData heartRateVariability
androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse: int ROWS_FIELD_NUMBER
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.google.android.gms.internal.measurement.zzfv: com.google.android.gms.internal.measurement.zzfv zza
com.spikeapi.network.request.TotalCaloriesSummary: java.lang.Double sum
com.google.crypto.tink.shaded.protobuf.AbstractMessageLite: int memoizedHashCode
com.facebook.login.GetTokenLoginMethodHandler: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.CoreTemperature coreTemperature
androidx.window.R$styleable: int[] ActivityRule
com.moengage.widgets.MoERatingBar: android.graphics.Path path
com.spikeapi.network.request.BreathingRawData: com.spikeapi.SpikeRawDataType type
androidx.window.R$styleable: int[] SplitPairRule
com.spikeapi.network.response.BodyResponseData: java.lang.String source
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.proto.Keyset DEFAULT_INSTANCE
com.google.gson.JsonIOException: long serialVersionUID
com.spikeapi.network.request.StepsRawData: com.spikeapi.network.request.StepsSummary summary
com.google.crypto.tink.proto.AesEaxKey: int PARAMS_FIELD_NUMBER
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double restingHeartRate
com.google.crypto.tink.proto.AesCtrParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
com.google.android.gms.internal.measurement.zzgm: float zzi
com.spikeapi.SpikeDataTypes: com.spikeapi.SpikeDataTypes INSTANCE
androidx.activity.ComponentActivity: int mContentLayoutId
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzj
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.SleepSummary: java.lang.Long light
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_STRING
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String applicationId
androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper
androidx.health.platform.client.proto.GeneratedMessageLite: int MUTABLE_FLAG_MASK
com.google.crypto.tink.proto.KeyData: int VALUE_FIELD_NUMBER
com.google.crypto.tink.proto.AesCmacKeyFormat: int PARAMS_FIELD_NUMBER
com.google.crypto.tink.proto.Keyset$Key: int STATUS_FIELD_NUMBER
com.spikeapi.network.response.SessionsResponse: java.lang.String endUserSessionId
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzfb: java.lang.String zze
com.google.android.gms.common.internal.safeparcel.SafeParcelable: java.lang.String NULL
androidx.datastore.preferences.PreferencesProto$Value: int INTEGER_FIELD_NUMBER
com.moengage.widgets.MoERatingBar: float interiorAngleModifier
com.google.android.gms.internal.measurement.zzfv: long zzf
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double avgSpeed
androidx.window.layout.FoldingFeature$State: java.lang.String description
com.google.android.gms.internal.measurement.zzet: boolean zzi
com.google.android.gms.internal.measurement.zzft: int zzd
androidx.window.core.Bounds: int top
com.google.android.gms.internal.measurement.zzfx: double zzi
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String map
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzet: boolean zzj
com.spikeapi.network.request.BreathingRawData: java.lang.String timeZoneOffset
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.HmacKeyFormat hmacKeyFormat_
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.android.gms.common.internal.zzk: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String timeStart
androidx.health.platform.client.error.ErrorCode: int PERMISSION_NOT_DECLARED
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
androidx.health.platform.client.proto.DataProto$DataOrigin: java.lang.String applicationId_
com.facebook.appevents.PersistedEvents$SerializationProxyV1: long serialVersionUID
com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl$WarningImpl: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
com.spikeapi.network.request.Weight: com.spikeapi.network.request.WeightStats stats
androidx.health.platform.client.proto.DataProto$Device: int TYPE_FIELD_NUMBER
com.spikeapi.model.SpikeWebhookJob: java.lang.String callbackUrl
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
com.google.android.gms.internal.auth.zzhr: com.google.android.gms.internal.auth.zzhr zzb
com.spikeapi.network.request.HeartRateVariabilitySummary: java.lang.Double dayAvg
com.google.android.gms.internal.measurement.zzky: com.google.android.gms.internal.measurement.zzks zza
androidx.health.platform.client.error.ErrorCode: int PROVIDER_NOT_INSTALLED
com.spikeapi.network.request.BMIStats: java.lang.Double avg
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.health.platform.client.error.ErrorCode: int INTERNAL_ERROR
com.spikeapi.network.request.SleepSummary: java.lang.Float sleepScore
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double maxPaceInMinutesPerKilometer
com.moengage.widgets.MoERatingBar: android.graphics.Bitmap colorsJoined
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: int VERSION_FIELD_NUMBER
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
androidx.health.platform.client.proto.TimeProto$TimeSpec: int START_TIME_EPOCH_MS_FIELD_NUMBER
androidx.health.platform.client.proto.PermissionProto$Permission: int DATA_TYPE_FIELD_NUMBER
com.spikeapi.network.response.Level: java.lang.String dateTime
com.spikeapi.network.response.IntradayGlucoseData: java.lang.String time
com.google.crypto.tink.proto.KeyTemplate: int VALUE_FIELD_NUMBER
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
androidx.health.platform.client.proto.DataProto$Device: java.lang.String model_
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType SLEEP
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.fragment.app.Fragment: boolean mCalled
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String endUserId
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: long serialVersionUID
com.moengage.pushbase.internal.MoETimePickerDialog: int currentHour
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners
androidx.health.platform.client.proto.PermissionProto$Permission: java.lang.String permission_
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzgr: java.lang.String zze
androidx.fragment.app.Fragment: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
com.spikeapi.network.response.SpikeHRVIntradayData: com.spikeapi.network.response.SpikeHRVIntradayValueData value
androidx.health.platform.client.proto.DataProto$Value: androidx.health.platform.client.proto.Parser PARSER
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType BODY
com.google.android.gms.internal.measurement.zzgt: int zzd
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzfx zza
androidx.health.platform.client.proto.DataProto$AggregateDataRow: int END_LOCAL_DATE_TIME_FIELD_NUMBER
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
com.spikeapi.network.request.BreathingRawData: java.util.List values
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double trendRate
androidx.fragment.app.FragmentActivity: boolean mStopped
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.health.platform.client.proto.ErrorProto$ErrorStatus: int code_
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType DISTANCE
com.spikeapi.network.response.SleepResponseData: java.lang.Integer awake
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.proto.HmacKeyFormat DEFAULT_INSTANCE
com.spikeapi.network.response.Lap: java.lang.String timeStart
com.spikeapi.network.response.SessionsResponse: java.lang.Boolean endUserCreated
com.google.crypto.tink.proto.Keyset: int PRIMARY_KEY_ID_FIELD_NUMBER
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer caloriesBmr
com.google.crypto.tink.proto.AesEaxKey: int VERSION_FIELD_NUMBER
com.moengage.pushbase.internal.MoEPushReceiver: java.lang.String tag
com.spikeapi.network.request.CaloriesRawData: java.lang.String date
com.spikeapi.network.request.SleepSummary: java.lang.Long totalSleep
com.facebook.FacebookOperationCanceledException: long serialVersionUID
com.spikeapi.network.response.BreathingResponseData: java.lang.String dataType
com.spikeapi.network.request.ActivitiesStreamRawData: com.spikeapi.SpikeRawDataType type
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BodyFatPercentageData bodyFatPercentage
com.google.android.gms.internal.measurement.zzer: int zze
androidx.health.platform.client.proto.TimeProto$TimeSpec: long startTimeEpochMs_
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double rmssd
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DetailedTemperatureData skinTemperature
androidx.fragment.app.Fragment: boolean mDeferStart
androidx.fragment.app.DialogFragment: boolean mDismissed
com.spikeapi.network.request.MuscleMass: java.util.List values
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
com.google.android.gms.internal.measurement.zzer: java.lang.String zzi
androidx.health.platform.client.proto.TimeProto$TimeSpec: int bitField0_
com.spikeapi.network.request.RestingHeartRateSummary: java.lang.Integer count
okio.ByteString: byte[] data
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.crypto.tink.proto.AesEaxKey: int version_
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String dataType
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzH
androidx.fragment.app.DialogFragment: int STYLE_NO_INPUT
androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse: androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse DEFAULT_INSTANCE
com.google.crypto.tink.proto.Keyset$Key: int KEY_ID_FIELD_NUMBER
com.spikeapi.network.request.SpikeRequest: java.lang.String dataType
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.spikeapi.network.response.IntradayCaloriesData: java.lang.Integer mets
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.request.AggregateDataRequest: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesCmacKey: int PARAMS_FIELD_NUMBER
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
com.google.android.gms.internal.measurement.zzfh: java.lang.String zzf
com.spikeapi.network.response.SleepResponseData: java.lang.Double temperatureDelta
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double realtimeValue
androidx.health.platform.client.proto.DataProto$AggregatedValue: androidx.health.platform.client.proto.DataProto$AggregatedValue DEFAULT_INSTANCE
com.spikeapi.SpikeConnection: kotlin.Lazy storageManager$delegate
com.spikeapi.network.response.Sample: java.lang.Double distance
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzh
com.spikeapi.network.request.StepsRawData: com.spikeapi.SpikeRawDataType type
com.spikeapi.network.response.BMIData: java.util.List timeseries
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat DEFAULT_INSTANCE
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
com.spikeapi.network.request.StepsRecord: java.lang.String source
com.spikeapi.network.request.OxygenSaturationRawData: java.util.List values
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
androidx.health.platform.client.error.ErrorCode: int DATABASE_ERROR
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer medium
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzq
com.google.crypto.tink.proto.KeyTemplate: java.lang.String typeUrl_
androidx.health.platform.client.response.AggregateDataResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.internal.zzlk: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.proto.DataProto$AggregateDataRow: java.lang.String endLocalDateTime_
com.moengage.pushbase.internal.fragments.DatePickerFragment: java.lang.String TAG
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.spikeapi.network.request.DistanceRawData: java.util.List values
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: androidx.health.platform.client.proto.TimeProto$TimeSpec timeSpec_
com.spikeapi.healthconnect.HealthConnectAvailability: com.spikeapi.healthconnect.HealthConnectAvailability INSTALLED
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzr
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$1: java.lang.String $url
com.google.crypto.tink.proto.AesSivKeyFormat: com.google.crypto.tink.proto.AesSivKeyFormat DEFAULT_INSTANCE
androidx.health.platform.client.proto.RequestProto$RequestContext: int SDK_VERSION_FIELD_NUMBER
androidx.health.platform.client.proto.InvalidProtocolBufferException$InvalidWireTypeException: long serialVersionUID
androidx.health.platform.client.error.ErrorCode: int CHANGES_TOKEN_OUTDATED
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.google.crypto.tink.proto.KeyTemplate: int TYPE_URL_FIELD_NUMBER
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String providerActivityName
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DetailedTemperatureData coreTemperature
com.spikeapi.network.response.BodyResponseData: java.util.List bloodPressureData
androidx.health.platform.client.proto.DataProto$DataPoint: int MIN_FIELD_NUMBER
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.spikeapi.network.response.Sample: java.lang.Object swimCadenceStrokesPerMinute
androidx.health.platform.client.proto.DataProto$DataPoint: int START_TIME_MILLIS_FIELD_NUMBER
com.spikeapi.network.request.DistanceRawData: com.spikeapi.SpikeRawDataType type
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String dataType
com.spikeapi.network.response.SpikeWebhookJobResponse: long payloadSize
androidx.fragment.app.DialogFragment: java.lang.String SAVED_SHOWS_DIALOG
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
com.moengage.pushbase.internal.fragments.DatePickerFragment: com.moengage.pushbase.internal.listener.DateSelectionListener dateSelectedListener
androidx.health.platform.client.proto.DataProto$DataPoint: int VALUES_FIELD_NUMBER
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
com.google.crypto.tink.proto.AesCmacParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
kotlin.jvm.internal.FunctionReference: int arity
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
com.google.android.gms.internal.measurement.zzgy: boolean zzi
com.spikeapi.network.request.BodyFatPercentage: com.spikeapi.network.request.BodyFatPercentageStats stats
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer elevation
androidx.health.platform.client.proto.DataProto$AggregateDataRow: int ZONE_OFFSET_SECONDS_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgd: long zzag
androidx.health.platform.client.proto.DataProto$DataPoint: androidx.health.platform.client.proto.DataProto$DataPoint DEFAULT_INSTANCE
com.spikeapi.network.response.GlucoseResponseData: java.lang.String unit
com.spikeapi.network.request.StepsSummary: java.lang.Long avg
kotlinx.coroutines.CompletedExceptionally: int _handled
com.spikeapi.network.request.SleepSummary: java.lang.Float temperatureDelta
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
com.google.android.gms.internal.auth.zzeu: java.util.Map zzb
com.spikeapi.network.response.HrZone: java.lang.Double min
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.String startTime
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified blockingDispatcher
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzE
androidx.datastore.preferences.PreferencesProto$Value: int STRING_SET_FIELD_NUMBER
com.google.crypto.tink.proto.AesGcmKey: int KEY_VALUE_FIELD_NUMBER
androidx.window.R$styleable: int ActivityFilter_activityName
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzu
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer floors
com.spikeapi.network.request.SkinTemperature: com.spikeapi.network.request.SkinTemperatureStats stats
com.spikeapi.network.request.OxygenSaturationRecord: java.lang.Double value
androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse: int DATA_POINT_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
com.spikeapi.network.response.BloodPressureData: java.lang.Integer diastolicBloodPressure
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType GLUCOSE
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.proto.KeysetInfo DEFAULT_INSTANCE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
com.spikeapi.network.response.SessionsResponse: java.lang.String endUserId
androidx.health.platform.client.error.ErrorCode: int EMPTY_PERMISSION_LIST
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String source
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
com.spikeapi.network.request.HeartRateSummary: java.lang.Long avg
com.spikeapi.network.response.SpikeSourceWebhook: java.lang.String name
com.google.android.gms.internal.measurement.zzet: int zzd
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType ACTIVITIES_STREAM
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgg zzS
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.proto.ChaCha20Poly1305Key DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzer zzf
androidx.datastore.preferences.PreferencesProto$Value: int valueCase_
androidx.health.platform.client.proto.DataProto$DataType: int NAME_FIELD_NUMBER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.crypto.tink.proto.Keyset$Key: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer steps
androidx.window.R$attr: int activityName
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener mOnDismissListener
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long movingTime
com.google.android.gms.internal.auth.zzet: com.google.android.gms.internal.auth.zzep zzb
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: int TIME_SPEC_FIELD_NUMBER
androidx.health.platform.client.proto.DataProto$DataPoint: int END_ZONE_OFFSET_SECONDS_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.spikeapi.network.request.TotalCaloriesBurned: com.spikeapi.network.request.TotalCaloriesSummary summary
com.spikeapi.network.response.SleepResponseData: java.lang.String date
com.moengage.firebase.internal.FcmHandlerImpl: java.lang.String tag
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int keySize_
com.spikeapi.network.response.BreathingIntradayData: java.lang.String time
com.spikeapi.network.response.SleepResponseData: java.lang.Integer standardizedSleepScore
androidx.fragment.app.Fragment: boolean mRemoving
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzff zza
com.google.crypto.tink.proto.AesSivKeyFormat: int version_
com.spikeapi.network.request.ActivitiesStreamRawData: java.util.List laps
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.fragment.app.Fragment: boolean mIsCreated
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.spikeapi.network.request.ActiveCaloriesSummary: java.lang.Double avg
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer lowStressDuration
com.moe.pushlibrary.activities.MoEActivity$onCreate$4: boolean $isEmbedded
com.spikeapi.network.request.BMI: com.spikeapi.network.request.BMIStats stats
com.spikeapi.network.request.GlucoseRawData: java.lang.String date
androidx.datastore.preferences.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
androidx.fragment.app.DialogFragment: int mBackStackId
com.google.android.gms.internal.auth.zzbw: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: int mTargetRequestCode
com.spikeapi.network.request.BloodPressureStats: java.lang.Integer count
com.google.android.gms.internal.measurement.zzek: boolean zzh
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfz zza
com.google.firebase.sessions.FirebaseSessionsRegistrar: java.lang.String LIBRARY_NAME
com.moengage.pushbase.internal.MoETimePickerDialog: int currentMinute
com.spikeapi.network.request.RestingHeartRateValue: java.lang.String startTime
androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged
com.spikeapi.network.response.SpikeSource: java.lang.String name
com.spikeapi.network.response.SpikeSourceWebhook: boolean isSuccess
com.spikeapi.model.SpikeActivitiesStreamData: java.util.List entries
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzli zzh
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.health.platform.client.proto.DataProto$DataPoint: androidx.health.platform.client.proto.Internal$ProtobufList seriesValues_
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String timeEnd
com.spikeapi.network.response.CaloriesResponseData: java.lang.Integer value
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.google.android.gms.internal.measurement.zzet: java.lang.String zzf
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.proto.AesEaxKey DEFAULT_INSTANCE
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double if
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Boolean deviceWatts
com.moengage.widgets.MoERatingBar: int color
com.spikeapi.network.request.DistanceSummary: java.lang.Double sum
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.proto.AesGcmSivKey DEFAULT_INSTANCE
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.proto.EncryptedKeyset DEFAULT_INSTANCE
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter waiters
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzft zza
androidx.health.platform.client.proto.DataProto$DataPoint: int startZoneOffsetSeconds_
androidx.window.R$id: int ltr
androidx.health.platform.client.proto.GeneratedMessageLite$ExtendableMessage: androidx.health.platform.client.proto.FieldSet extensions
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int clearTop
com.google.crypto.tink.proto.AesCtrParams: int ivSize_
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.health.platform.client.proto.DataProto$DataPoint: int END_TIME_MILLIS_FIELD_NUMBER
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: int pageSize_
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType[] $VALUES
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.spikeapi.healthconnect.HealthConnectAvailability: com.spikeapi.healthconnect.HealthConnectAvailability NOT_INSTALLED
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
com.google.crypto.tink.proto.KmsAeadKey: int version_
androidx.health.platform.client.proto.DataProto$DataPoint: int CLIENT_ID_FIELD_NUMBER
com.moengage.widgets.MoERatingBar: android.graphics.RectF rectangle
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
com.facebook.login.LoginClient$Result: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.CombinedContext$Serialized: long serialVersionUID
androidx.health.platform.client.proto.DataProto$AggregateDataRow: androidx.health.platform.client.proto.MapFieldLite doubleValues_
com.spikeapi.network.request.MuscleMassStats: java.lang.Double avg
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.KeyData: int TYPE_URL_FIELD_NUMBER
com.spikeapi.network.request.WeightValue: java.lang.String time
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzp
androidx.health.platform.client.proto.DataProto$DataPoint: androidx.health.platform.client.proto.DataProto$AggregatedValue min_
com.spikeapi.network.response.Level: java.lang.String level
androidx.window.core.Version: androidx.window.core.Version CURRENT
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.facebook.appevents.AccessTokenAppIdPair$SerializationProxyV1: long serialVersionUID
androidx.window.R$id: int androidx_window_activity_scope
androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse: androidx.health.platform.client.proto.Internal$ProtobufList rows_
com.moengage.pushbase.internal.fragments.TimePickerFragment: java.lang.String TAG
com.yalantis.ucrop.model.AspectRatio: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.response.SpikeWebhookJobResponse: java.util.List sources
com.spikeapi.network.request.GlucoseRawData: com.spikeapi.network.request.GlucoseSummary summary
kotlin.collections.builders.SerializedMap: long serialVersionUID
androidx.fragment.app.DialogFragment: boolean mDialogCreated
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
com.spikeapi.model.SpikeData: java.time.OffsetDateTime collectedAt
com.spikeapi.network.response.SpikeResponse: java.lang.String dateFrom
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzg
androidx.fragment.app.DialogFragment: boolean mCreatingDialog
androidx.health.platform.client.proto.DataProto$Device: java.lang.String type_
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeBodyDataType BODY
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
com.google.android.gms.internal.measurement.zzff: java.lang.String zzr
androidx.health.platform.client.proto.DataProto$DataPoint: int ZONE_OFFSET_SECONDS_FIELD_NUMBER
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double smoothedValue
com.facebook.login.LoginClient: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.proto.CodedOutputStream$OutOfSpaceException: long serialVersionUID
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Integer count
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
com.spikeapi.network.request.SleepSummary: java.lang.Integer latency
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
androidx.health.platform.client.proto.DataProto$Value: int valueCase_
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.FirebaseSessionsRegistrar$Companion Companion
com.moengage.widgets.MoERatingBar: float dp
com.google.android.gms.internal.measurement.zzgd: int zzf
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.spikeapi.network.request.RestingHeartRateValue: java.lang.String endTime
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: java.lang.String message
com.moengage.pushbase.activities.PushClickDialogTracker: java.lang.String tag
androidx.window.R$styleable: int[] SplitPairFilter
androidx.fragment.app.Fragment: float mPostponedAlpha
com.spikeapi.network.request.GlucoseSummary: java.lang.Double sum
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType SLEEP
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.DialogFragment: java.lang.String SAVED_DIALOG_STATE_TAG
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzet zza
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzem zza
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.response.SleepResponseData: java.lang.Integer latency
com.spikeapi.network.request.GlucoseRecord: java.lang.String startTime
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double minHeartRate
com.spikeapi.network.request.SpikeRequest: java.lang.String submittedAt
androidx.health.platform.client.proto.DataProto$Device: int MANUFACTURER_FIELD_NUMBER
androidx.health.platform.client.proto.ErrorProto$ErrorStatus: int bitField0_
com.spikeapi.model.SpikeOxygenSaturationData: java.util.List entries
com.spikeapi.network.response.StepsResponseData: java.util.List intradayData
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzP
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String typeUrl_
com.google.android.gms.internal.measurement.zzgd: boolean zzab
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzft: java.lang.String zzf
androidx.window.core.Bounds: int left
com.google.android.gms.measurement.internal.zzac: android.os.Parcelable$Creator CREATOR
com.spikeapi.healthconnect.HealthConnectAvailability: com.spikeapi.healthconnect.HealthConnectAvailability[] $VALUES
com.spikeapi.network.response.DistanceResponseData: java.lang.String dataType
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
com.spikeapi.network.response.GlucoseResponseData: java.lang.String source
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
com.google.android.gms.internal.measurement.zzgd: int zzJ
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
com.google.android.gms.internal.measurement.zzfx: float zzh
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.PreferencesProto$Value DEFAULT_INSTANCE
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int STATUS_FIELD_NUMBER
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
androidx.fragment.app.Fragment: boolean mRestored
kotlin.jvm.internal.FunctionReference: int flags
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int HMAC_KEY_FIELD_NUMBER
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.proto.AesCtrParams params_
com.spikeapi.network.response.GlucoseResponseData: java.lang.String date
com.google.android.gms.internal.measurement.zzfx: long zzg
com.spikeapi.network.request.RestingHeartRate: java.util.List values
com.google.android.gms.internal.measurement.zzfv: int zzd
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Double avg
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer avgHr
androidx.health.platform.client.proto.DataProto$DataPoint: androidx.health.platform.client.proto.DataProto$Device device_
com.google.android.gms.internal.measurement.zzcl: android.os.Parcelable$Creator CREATOR
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry
com.google.android.gms.internal.measurement.zzlb: com.google.android.gms.internal.measurement.zznl zzc
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
com.spikeapi.network.request.BloodPressureStats: java.lang.Double avgDiastolic
androidx.health.platform.client.proto.RequestProto$AggregateMetricSpec: int AGGREGATION_TYPE_FIELD_NUMBER
androidx.health.platform.client.proto.DataProto$AggregateDataRow: int DOUBLE_VALUES_FIELD_NUMBER
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double elevLow
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.SpikeRawDataType type
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Integer activityTypeId
com.google.android.gms.internal.measurement.zzgk: int zzd
androidx.health.platform.client.proto.RequestProto$AggregateMetricSpec: androidx.health.platform.client.proto.Parser PARSER
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_ARRAY_BUFFER
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_BASE_PATH
kotlin.jvm.internal.CallableReference: java.lang.String name
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Internal$ProtobufList strings_
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzlh zzd
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzh
com.moengage.widgets.MoERatingBar: int polygonVertices
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.proto.KmsEnvelopeAeadKey DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzm
com.google.android.gms.internal.measurement.zzfr: int zze
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int version_
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double totalElevationLoss
androidx.fragment.app.Fragment: boolean mAdded
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.spikeapi.network.request.Lap: java.lang.Integer startTime
androidx.health.platform.client.proto.DataProto$Value: androidx.health.platform.client.proto.DataProto$Value DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzgg zza
com.google.crypto.tink.shaded.protobuf.ByteString$LiteralByteString: long serialVersionUID
androidx.fragment.app.DialogFragment: boolean mShowsDialog
androidx.health.platform.client.proto.PermissionProto$Permission: int PERMISSION_FIELD_NUMBER
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat params_
com.moengage.pushbase.model.action.NavigationAction: android.os.Parcelable$Creator CREATOR
com.spikeapi.model.SpikeData: java.time.OffsetDateTime dateTo
androidx.window.R$attr: int primaryActivityName
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzey zze
com.spikeapi.SpikeConnection: android.content.Context context
com.spikeapi.network.response.GlucoseResponseData: java.lang.String dataType
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
com.facebook.FacebookDialogException: long serialVersionUID
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.KeyTypeEntry: int TYPE_URL_FIELD_NUMBER
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long minHr
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: int DATA_ORIGIN_FIELD_NUMBER
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: int SLICE_DURATION_MILLIS_FIELD_NUMBER
androidx.window.core.Bounds: int right
androidx.health.platform.client.proto.DataProto$DataPoint: androidx.health.platform.client.proto.DataProto$AggregatedValue avg_
com.spikeapi.network.request.CoreTemperatureValue: java.lang.String time
com.spikeapi.network.request.SleepSummary: java.lang.Long avgHr
com.facebook.FacebookException: long serialVersionUID
com.google.crypto.tink.proto.HmacParams: int hash_
com.spikeapi.network.request.OxygenSaturationRawData: com.spikeapi.network.request.OxygenSaturationSummary summary
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.HmacKey hmacKey_
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long minHr
androidx.health.platform.client.proto.DataProto$DataPoint: int endZoneOffsetSeconds_
com.google.crypto.tink.proto.KeyTypeEntry: boolean newKeyAllowed_
com.spikeapi.network.request.SleepSummary: java.lang.Long deep
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.RestingHeartRate restingHeartRate
androidx.fragment.app.DialogFragment: int STYLE_NO_FRAME
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzek zza
androidx.health.platform.client.proto.DataProto$SeriesValue: androidx.health.platform.client.proto.MapFieldLite values_
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzg
kotlin.text.Regex$Serialized: long serialVersionUID
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BloodPressure bloodPressure
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType BREATHING
com.google.android.gms.internal.measurement.zzgd: int zzC
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType BODY
com.spikeapi.network.response.Sample: java.lang.Double stepsPerMinute
androidx.health.platform.client.proto.RequestProto$RequestContext: int CALLING_PACKAGE_FIELD_NUMBER
androidx.health.platform.client.error.ErrorCode: int PROVIDER_NOT_ENABLED
androidx.health.platform.client.proto.DataProto$AggregatedValue: androidx.health.platform.client.proto.Parser PARSER
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String providerTimestamp
androidx.fragment.app.DialogFragment: java.lang.String SAVED_CANCELABLE
com.spikeapi.model.SpikeWebhookJob: com.spikeapi.model.SpikeDataType dataType
com.google.android.gms.internal.measurement.zzff: boolean zzl
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
androidx.health.platform.client.proto.RequestProto$RequestContext: boolean isInForeground_
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.WaterPercentage waterPercentage
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
androidx.health.platform.client.proto.DataProto$AggregatedValue: int VALUES_FIELD_NUMBER
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BoneMassData boneMassG
androidx.health.platform.client.proto.DataProto$DataPoint: int ORIGIN_SERIES_UID_FIELD_NUMBER
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int KEY_ID_FIELD_NUMBER
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzg
androidx.window.R$styleable: int SplitPairRule_splitRatio
com.google.android.gms.internal.measurement.zzgm: long zzh
com.spikeapi.network.request.GlucoseRawData: java.util.List values
com.spikeapi.network.response.HeartRateResponseData: java.lang.Integer timezoneOffset
androidx.health.platform.client.proto.DataProto$AggregateDataRow: androidx.health.platform.client.proto.Parser PARSER
com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat: com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat DEFAULT_INSTANCE
androidx.health.platform.client.response.ReadDataRangeResponse: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
com.spikeapi.network.request.CaloriesRawData: com.spikeapi.SpikeRawDataType type
androidx.window.embedding.SplitRule: int minWidth
com.spikeapi.network.request.SpikeRequest: java.lang.String osVersion
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.StepsRawData: java.util.List values
com.google.android.gms.internal.measurement.zzfj: java.lang.String zze
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
com.spikeapi.network.response.HeartRateResponseData: java.lang.String source
com.spikeapi.network.response.CaloriesResponseData: java.util.List intradayData
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.proto.AesEaxParams params_
com.google.crypto.tink.proto.HmacKeyFormat: int VERSION_FIELD_NUMBER
androidx.window.R$id: int locale
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType GLUCOSE
com.spikeapi.network.request.HeartRateVariabilitySummary: java.lang.Integer count
com.spikeapi.network.request.BodyRawData: java.lang.String date
androidx.health.platform.client.proto.RequestProto$AggregateMetricSpec: androidx.health.platform.client.proto.RequestProto$AggregateMetricSpec DEFAULT_INSTANCE
com.spikeapi.network.request.Level: java.lang.String startTime
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: androidx.health.platform.client.proto.RequestProto$AggregateDataRequest DEFAULT_INSTANCE
androidx.health.platform.client.proto.DataProto$Value: int STRING_VAL_FIELD_NUMBER
com.moengage.pushbase.internal.MoETimePickerDialog: int minHour
com.google.android.gms.internal.measurement.zzey: boolean zzg
com.facebook.AuthenticationTokenHeader: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.CoreTemperatureStats: java.lang.Integer count
com.spikeapi.network.request.BoneMass: java.util.List values
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double coverage
com.spikeapi.network.request.TotalCaloriesSummary: java.lang.Double avg
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int KEY_VALUE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgm: double zzj
androidx.window.R$styleable: int SplitPairRule_clearTop
com.spikeapi.network.request.SkinTemperatureValue: java.lang.Double value
com.spikeapi.network.request.CoreTemperature: com.spikeapi.network.request.CoreTemperatureStats stats
com.facebook.Profile: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.protobuf.InvalidProtocolBufferException: long serialVersionUID
androidx.datastore.preferences.protobuf.InvalidProtocolBufferException$InvalidWireTypeException: long serialVersionUID
androidx.health.platform.client.proto.TimeProto$TimeSpec: int END_LOCAL_DATE_TIME_FIELD_NUMBER
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified transportFactory
com.google.android.gms.location.LocationSettingsStates: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesSivKey: int version_
com.spikeapi.network.response.SleepResponseData: java.util.List levels
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.WeightData weightKg
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzgy zza
androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse: androidx.health.platform.client.proto.Internal$ProtobufList dataPoint_
com.google.android.gms.internal.measurement.zzem: int zzd
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners
com.google.android.gms.internal.auth.zzhr: com.google.android.gms.internal.auth.zzey zzd
androidx.window.R$attr: int splitRatio
com.spikeapi.network.response.BodyResponseData: com.spikeapi.network.response.TemperatureData temperatureData
androidx.datastore.preferences.protobuf.ByteString$LiteralByteString: long serialVersionUID
androidx.window.embedding.SplitController: boolean sDebug
com.spikeapi.network.request.GlucoseRawData: com.spikeapi.SpikeRawDataType type
com.google.android.gms.internal.measurement.zzek: java.lang.String zzf
com.spikeapi.network.request.BloodPressureValue: java.lang.Double valueDiastolic
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: java.lang.String typeUrl_
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.spikeapi.network.response.StepsResponseData: java.lang.Integer value
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzli zzd
com.spikeapi.network.request.ActiveCaloriesBurned: com.spikeapi.network.request.ActiveCaloriesSummary summary
androidx.health.platform.client.proto.DataProto$DataPoint: long endTimeMillis_
com.google.crypto.tink.proto.KeysetInfo: int KEY_INFO_FIELD_NUMBER
com.spikeapi.model.SpikeData: java.util.List sources
androidx.health.platform.client.proto.DataProto$AggregateDataRow: java.lang.String startLocalDateTime_
com.spikeapi.network.request.BloodPressureValue: java.lang.String time
com.spikeapi.network.response.BreathingResponseData: java.lang.Integer avgValue
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: com.google.crypto.tink.proto.KeysetInfo$KeyInfo DEFAULT_INSTANCE
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.proto.AesCmacParams params_
androidx.health.platform.client.proto.ErrorProto$ErrorStatus: int MESSAGE_FIELD_NUMBER
androidx.window.R$attr: int splitLayoutDirection
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
androidx.window.core.Version: int minor
androidx.window.embedding.SplitRule: int layoutDirection
com.google.crypto.tink.proto.HmacKeyFormat: int PARAMS_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzae
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String providerActivityTypeId
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.health.platform.client.proto.PermissionProto$Permission: androidx.health.platform.client.proto.Parser PARSER
androidx.fragment.app.Fragment: int ATTACHED
com.spikeapi.network.response.OxygenSaturationIntradayData: java.lang.String time
com.spikeapi.network.response.SleepResponseData: java.lang.String bedtimeEnd
com.spikeapi.network.request.WeightValue: java.lang.Double value
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
com.google.crypto.tink.proto.KeyTypeEntry: int CATALOGUE_NAME_FIELD_NUMBER
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.proto.AesEaxKeyFormat DEFAULT_INSTANCE
com.google.crypto.tink.proto.KmsAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double maxHeartRate
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeGlucoseDataType GLUCOSE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
com.facebook.FacebookSdkNotInitializedException: long serialVersionUID
androidx.datastore.preferences.protobuf.GeneratedMessageLite$ExtendableMessage: androidx.datastore.preferences.protobuf.FieldSet extensions
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
androidx.window.embedding.SplitRule: int minSmallestWidth
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int keyId_
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Integer hrZones
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaa
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
com.google.crypto.tink.proto.HmacKeyFormat: int KEY_SIZE_FIELD_NUMBER
androidx.health.platform.client.proto.DataProto$DataPoint: int UID_FIELD_NUMBER
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: androidx.health.platform.client.proto.DataProto$DataType dataType_
com.google.crypto.tink.proto.ChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.HmacParams: int HASH_FIELD_NUMBER
com.spikeapi.network.request.SleepSummary: java.lang.Long awake
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: int PAGE_SIZE_FIELD_NUMBER
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.AesCtrKeyFormat aesCtrKeyFormat_
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: androidx.health.platform.client.proto.Parser PARSER
com.spikeapi.SpikeConnection: com.spikeapi.SpikeConnection$Companion Companion
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: androidx.health.platform.client.proto.Internal$ProtobufList dataOrigin_
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
com.spikeapi.network.response.DiffFromBaselineTemperatureData: java.util.List timeseries
androidx.window.R$styleable: int ActivityFilter_activityAction
androidx.health.platform.client.proto.DataProto$DataPoint: int AVG_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzek: int zzd
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: java.lang.Double diffTemperatureCelsius
com.spikeapi.network.request.ActiveCaloriesBurned: java.util.List values
com.spikeapi.network.request.HeartRateRawData: java.lang.String date
com.spikeapi.network.response.SleepResponseData: java.lang.Integer light
kotlin.collections.EmptySet: long serialVersionUID
androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse: androidx.health.platform.client.proto.Parser PARSER
androidx.health.platform.client.proto.DataProto$AggregateDataRow: int bitField0_
com.spikeapi.network.response.HeightData: java.util.List timeseries
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzA
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.spikeapi.network.response.HeightData: java.lang.Double value
com.spikeapi.network.request.SessionsRequest: java.lang.String osVersion
androidx.health.platform.client.proto.DataProto$Device: int MODEL_FIELD_NUMBER
com.spikeapi.SpikeConnection: kotlin.Lazy healthConnectManager$delegate
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzy
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer maxWatts
com.google.crypto.tink.proto.RegistryConfig: int CONFIG_NAME_FIELD_NUMBER
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer minHr
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
androidx.fragment.app.DialogFragment: android.os.Handler mHandler
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double weighedAvgWatts
androidx.health.platform.client.proto.GeneratedMessageLite: int UNINITIALIZED_SERIALIZED_SIZE
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.window.embedding.SplitPairRule: java.util.Set filters
androidx.health.platform.client.proto.DataProto$DataPoint: androidx.health.platform.client.proto.MapFieldLite values_
androidx.health.platform.client.proto.RequestProto$RequestContext: java.lang.String callingPackage_
com.google.crypto.tink.proto.HmacParams: int tagSize_
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzL
com.facebook.login.DeviceAuthMethodHandler: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.crypto.tink.proto.AesEaxParams: int ivSize_
com.spikeapi.network.request.SleepSummary: java.lang.Integer count
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.moe.pushlibrary.activities.MoEActivity$onCreate$4: com.moe.pushlibrary.activities.MoEActivity this$0
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzG
androidx.fragment.app.DialogFragment: java.lang.String SAVED_BACK_STACK_ID
com.moengage.widgets.MoERatingBar: int strokeWidth
com.google.android.gms.internal.measurement.zzfh: java.lang.String zze
com.spikeapi.network.response.SleepResponseData: java.lang.Integer sourceSpecificSleepScore
androidx.fragment.app.DialogFragment: java.lang.String SAVED_INTERNAL_DIALOG_SHOWING
androidx.datastore.preferences.PreferencesProto$Value: int STRING_FIELD_NUMBER
com.google.crypto.tink.proto.KeyData: int keyMaterialType_
androidx.fragment.app.Fragment: int AWAITING_EXIT_EFFECTS
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long restingHr
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int VERSION_FIELD_NUMBER
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: java.lang.String timestamp
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.Keyset$Key DEFAULT_INSTANCE
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: int DATA_TYPE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgg: int zzd
com.spikeapi.network.request.OxygenSaturationRawData: com.spikeapi.SpikeRawDataType type
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String primitiveName_
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.google.common.util.concurrent.AbstractFuture: java.lang.Object value
com.spikeapi.ConnectionState: java.lang.Boolean endUserCreated
kotlin.random.Random$Default$Serialized: long serialVersionUID
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int outputPrefixType_
com.google.android.gms.internal.auth.zzdp: int zza
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.spikeapi.network.request.BMI: java.util.List values
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.String endTime
com.google.android.gms.location.LocationSettingsRequest: android.os.Parcelable$Creator CREATOR
com.spikeapi.model.SpikeWebhookJob: java.lang.String notificationId
com.google.android.gms.internal.measurement.zzfx: java.lang.String zze
androidx.health.platform.client.proto.DataProto$Value: int bitField0_
com.moengage.widgets.MoERatingBar: android.graphics.Paint paintOutline
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
androidx.health.platform.client.proto.DataProto$DataPoint: long updateTimeMillis_
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List laps
androidx.window.R$attr: int secondaryActivityAction
com.spikeapi.network.response.BodyFatPercentageData: java.lang.Double value
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.HeartRate heartRate
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer avgHr
com.google.android.gms.internal.measurement.zzfd: com.google.android.gms.internal.measurement.zzfd zza
com.spikeapi.network.response.StepsResponseData: java.lang.String source
androidx.health.platform.client.proto.DataProto$DataPoint: int START_ZONE_OFFSET_SECONDS_FIELD_NUMBER
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.facebook.appevents.AccessTokenAppIdPair: long serialVersionUID
androidx.health.platform.client.proto.DataProto$AggregateDataRow: androidx.health.platform.client.proto.MapFieldLite longValues_
com.google.android.gms.auth.TokenData: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String activityName
com.spikeapi.network.response.Sample: java.lang.Double airTemperature
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double coverage
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnCancelListener mOnCancelListener
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int memoizedSerializedSize
androidx.health.platform.client.proto.DataProto$DataPoint: long clientVersion_
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double maxWatts
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.WaterPercentageStats: java.lang.Double avg
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat DEFAULT_INSTANCE
dev.spike.flutter_health_connect.model.SpikeLoggingData: java.lang.String eventName
com.spikeapi.network.request.Lap: java.lang.Integer endTime
com.google.crypto.tink.proto.AesCtrKey: com.google.crypto.tink.proto.AesCtrKey DEFAULT_INSTANCE
androidx.health.platform.client.proto.DataProto$DataOrigin: int bitField0_
com.google.android.gms.internal.measurement.zzgd: long zzB
androidx.datastore.preferences.PreferencesProto$StringSet: int STRINGS_FIELD_NUMBER
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String activityTypeId
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzgi zza
com.facebook.AuthenticationToken: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BMI bmi
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.moengage.pushbase.activities.PushClickDialogTracker: int day
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.protobuf.Parser PARSER
com.spikeapi.network.request.CaloriesRawData: java.lang.String timeZoneOffset
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.spikeapi.network.response.HrZone: java.lang.Double minutes
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Integer elevation
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzli zze
com.google.android.gms.internal.measurement.zzfj: java.lang.String zzf
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.proto.KmsAeadKey DEFAULT_INSTANCE
com.google.crypto.tink.proto.KeysetInfo: int primaryKeyId_
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String accountId
androidx.window.R$styleable: int[] SplitPlaceholderRule
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer caloriesActive
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long avgHr
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.spikeapi.network.request.HeartRateVariability: com.spikeapi.network.request.HeartRateVariabilitySummary summary
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzfp zza
com.google.android.gms.internal.measurement.zzgd: long zzN
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzei zza
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzli zze
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: int limit_
com.google.android.gms.internal.measurement.zzey: int zzd
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer sedentaryMinutes
com.google.crypto.tink.proto.AesEaxKeyFormat: int keySize_
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.SkinTemperature: java.util.List values
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzgp zza
androidx.health.platform.client.proto.PermissionProto$Permission: androidx.health.platform.client.proto.DataProto$DataType dataType_
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzO
com.google.crypto.tink.proto.KeyTemplate: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
com.google.crypto.tink.proto.KeyData: int KEY_MATERIAL_TYPE_FIELD_NUMBER
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: com.google.crypto.tink.shaded.protobuf.UnknownFieldSetLite unknownFields
com.facebook.login.WebViewLoginMethodHandler: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.AesGcmKeyFormat: int KEY_SIZE_FIELD_NUMBER
androidx.health.platform.client.proto.DataProto$DataPoint: java.lang.String originSampleUid_
androidx.health.platform.client.proto.ErrorProto$ErrorStatus: int PERMISSION_FIELD_NUMBER
com.google.crypto.tink.proto.AesGcmSivKey: int version_
androidx.health.platform.client.proto.DataProto$Value: java.lang.Object value_
com.google.android.gms.internal.measurement.zzgd: int zzY
com.spikeapi.network.request.HeightValue: java.lang.String time
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.proto.AesCmacParams params_
com.moe.pushlibrary.activities.MoEActivity$onCreate$3: com.moe.pushlibrary.activities.MoEActivity this$0
androidx.window.embedding.ActivityStack: java.util.List activities
com.google.android.gms.internal.measurement.zzgd: long zzw
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: int SLICE_PERIOD_FIELD_NUMBER
com.spikeapi.model.SpikeData: java.lang.String endUserId
com.google.crypto.tink.proto.AesCmacKey: int KEY_VALUE_FIELD_NUMBER
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double distance
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeCaloriesDataType CALORIES
com.spikeapi.network.response.GlucoseResponseData: java.util.List intradayData
com.google.crypto.tink.proto.AesCmacKeyFormat: int keySize_
com.spikeapi.SpikeConnection: kotlinx.coroutines.CoroutineDispatcher ioDispatcher
com.spikeapi.network.request.HeartRateVariabilitySummary: java.lang.Double sleep
com.google.android.gms.internal.measurement.zzem: boolean zzg
com.spikeapi.network.request.HeightStats: java.lang.Double avg
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double calories
com.spikeapi.network.request.SkinTemperatureStats: java.lang.Double avg
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int OUTPUT_PREFIX_TYPE_FIELD_NUMBER
androidx.health.platform.client.proto.DataProto$DataPoint: long startTimeMillis_
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
androidx.health.platform.client.proto.PermissionProto$Permission: int ACCESS_TYPE_FIELD_NUMBER
androidx.datastore.preferences.protobuf.CodedOutputStream$OutOfSpaceException: long serialVersionUID
com.spikeapi.network.response.SleepResponseData: java.lang.Integer averageHrv
com.google.crypto.tink.proto.HmacKey: int KEY_VALUE_FIELD_NUMBER
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DetailedTemperatureData baselineCoreTemperature
androidx.health.platform.client.proto.TimeProto$TimeSpec: int END_TIME_EPOCH_MS_FIELD_NUMBER
com.google.crypto.tink.proto.AesSivKeyFormat: int keySize_
com.google.crypto.tink.proto.KeyTypeEntry: int PRIMITIVE_NAME_FIELD_NUMBER
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DiffFromBaselineTemperatureData diffFromBaselineTemperature
com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException: long serialVersionUID
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.MuscleMassData muscleMassG
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long maxHr
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
com.spikeapi.network.response.SleepResponseData: java.lang.Integer deep
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzf
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer calories
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.Double max
com.google.android.gms.internal.measurement.zzff: java.lang.String zzk
com.spikeapi.network.response.MuscleMassData: java.util.List timeseries
com.google.crypto.tink.proto.AesCmacParams: com.google.crypto.tink.proto.AesCmacParams DEFAULT_INSTANCE
com.spikeapi.network.request.CoreTemperatureValue: java.lang.Double value
com.spikeapi.network.response.SpikeResponse: java.lang.String dateTo
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double totalElevationGain
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double value
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType HEART
com.google.crypto.tink.proto.AesGcmKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.spikeapi.network.request.OxygenSaturationRecord: java.lang.String startTime
androidx.health.platform.client.proto.GeneratedMessageLite: androidx.health.platform.client.proto.UnknownFieldSetLite unknownFields
com.google.android.gms.internal.measurement.zzfr: long zzf
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
androidx.health.platform.client.proto.RequestProto$AggregateMetricSpec: int bitField0_
androidx.fragment.app.DialogFragment: java.lang.String SAVED_THEME
com.google.android.gms.internal.measurement.zzgd: int zze
com.google.android.gms.internal.measurement.zzff: int zzg
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeStepsDataType STEPS
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: boolean ascOrdering_
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double caloriesActive
com.google.android.gms.internal.measurement.zzff: java.lang.String zzq
androidx.datastore.preferences.PreferencesProto$PreferenceMap: int PREFERENCES_FIELD_NUMBER
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer avgStressLevel
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.PreferencesProto$PreferenceMap DEFAULT_INSTANCE
com.google.android.gms.internal.location.zzg: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.GlucoseSummary: java.lang.Double avg
androidx.health.platform.client.proto.RequestProto$RequestContext: int IS_IN_FOREGROUND_FIELD_NUMBER
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType OXYGEN_SATURATION
androidx.fragment.app.Fragment: int mState
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.shaded.protobuf.ByteString value_
androidx.window.core.Version: int major
androidx.health.platform.client.proto.DataProto$DataPoint: int zoneOffsetSeconds_
com.spikeapi.network.response.SpikeHRVIntradayData: java.lang.String time
dev.spike.flutter_health_connect.model.SpikeLoggingData: java.lang.String connectionId
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.internal.measurement.zzfj: com.google.android.gms.internal.measurement.zzfj zza
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
com.moe.pushlibrary.activities.MoEActivity$onCreate$5: com.moe.pushlibrary.activities.MoEActivity this$0
com.google.android.gms.internal.measurement.zzft: int zzi
androidx.fragment.app.Fragment: boolean mMenuVisible
com.spikeapi.network.response.HeartRateResponseData: java.util.List intradayHRV
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzli zzf
com.spikeapi.network.response.IntradayCaloriesData: java.lang.Integer level
com.facebook.login.LoginClient$Request: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.response.DistanceResponseData: java.lang.String source
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int VERSION_FIELD_NUMBER
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String providerActivityId
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String dateFrom
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzh
androidx.health.platform.client.error.ErrorCode: androidx.health.platform.client.error.ErrorCode$Companion Companion
com.spikeapi.network.request.TotalCaloriesRecord: java.lang.String endTime
com.spikeapi.network.request.WaterPercentageStats: java.lang.Integer count
com.spikeapi.network.request.DistanceSummary: java.lang.Double avg
com.spikeapi.model.SpikeGlucoseData: java.util.List entries
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzer: java.lang.String zzh
androidx.health.platform.client.proto.DataProto$AggregateDataRow: int LONG_VALUES_FIELD_NUMBER
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int VERSION_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfd: java.lang.String zze
com.spikeapi.network.request.HeartRateRawData: java.lang.String timeZoneOffset
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzg
androidx.health.platform.client.proto.RequestProto$RequestContext: int bitField0_
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
com.spikeapi.network.request.BoneMassValue: java.lang.String time
androidx.health.platform.client.proto.TimeProto$TimeSpec: long endTimeEpochMs_
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.BreathingRecord: java.lang.Double value
com.moengage.pushbase.activities.PushClickDialogTracker: int month
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeSleepDataType SLEEP
com.spikeapi.network.request.DistanceSummary: java.lang.Integer count
androidx.fragment.app.Fragment: boolean mFromLayout
com.spikeapi.network.response.SleepResponseData: java.lang.String source
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.android.gms.internal.location.zzdb: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
androidx.fragment.app.DialogFragment: java.lang.String SAVED_STYLE
com.google.android.gms.internal.measurement.zzet: boolean zzh
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType DISTANCE
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: androidx.health.platform.client.proto.Internal$ProtobufList metricSpec_
com.google.crypto.tink.proto.AesCmacParams: int tagSize_
com.google.android.gms.internal.measurement.zzfp: boolean zzh
androidx.datastore.preferences.protobuf.GeneratedMessageLite: androidx.datastore.preferences.protobuf.UnknownFieldSetLite unknownFields
com.google.crypto.tink.proto.AesSivKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfp: int zze
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzv
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified backgroundDispatcher
com.spikeapi.network.request.SleepSummary: java.lang.Double avgHrv
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.google.android.gms.internal.measurement.zzey: java.lang.String zzf
com.google.crypto.tink.proto.Keyset$Key: com.google.crypto.tink.proto.KeyData keyData_
com.spikeapi.network.response.SleepResponseData: java.lang.Integer bedtimeDuration
com.google.android.gms.internal.measurement.zzff: java.lang.String zzp
com.moengage.pushbase.activities.PushClickDialogTracker: int year
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer low
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.facebook.GraphRequest$ParcelableResourceWithMimeType: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
com.spikeapi.network.request.BreathingRecord: java.lang.String endTime
androidx.window.layout.SidecarCompat: java.lang.String TAG
androidx.fragment.app.FragmentActivity: java.lang.String FRAGMENTS_TAG
com.spikeapi.network.response.StepsResponseData: java.lang.String date
com.spikeapi.network.response.CaloriesResponseData: java.lang.String source
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$2: com.moe.pushlibrary.activities.MoEActivity this$0
com.spikeapi.network.request.RestingHeartRateSummary: java.lang.Long avg
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType ACTIVITIES_SUMMARY
androidx.fragment.app.Fragment: java.lang.String mWho
com.google.crypto.tink.proto.AesCmacKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzo
com.facebook.login.InstagramAppLoginMethodHandler: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: android.view.View mView
com.spikeapi.network.response.DistanceResponseData: java.lang.String date
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.spikeapi.network.request.MuscleMassValue: java.lang.Double value
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List originalSource
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
androidx.health.platform.client.error.ErrorStatus: android.os.Parcelable$Creator CREATOR
com.spikeapi.SpikeEnvironment: com.spikeapi.SpikeEnvironment DEV
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double deviceWatts
com.spikeapi.network.response.Sample: java.lang.Object powerInWatts
com.moengage.pushbase.internal.MoEPushWorker: java.lang.String tag
com.spikeapi.network.request.BoneMass: com.spikeapi.network.request.BoneMassStats stats
com.google.crypto.tink.proto.AesEaxKey: int KEY_VALUE_FIELD_NUMBER
com.spikeapi.network.request.OxygenSaturationRawData: java.lang.String date
com.google.crypto.tink.proto.KeyTypeEntry: java.lang.String catalogueName_
com.google.android.gms.internal.measurement.zzff: java.lang.String zzo
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.google.android.gms.internal.measurement.zzfn: java.lang.String zze
com.spikeapi.SpikeConnection: com.squareup.moshi.JsonAdapter connectionStateAdapter
com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzh
androidx.window.embedding.ActivityRule: java.util.Set filters
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
com.google.crypto.tink.proto.AesSivKey: int VERSION_FIELD_NUMBER
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Double min
com.google.crypto.tink.proto.KeyData: com.google.crypto.tink.proto.KeyData DEFAULT_INSTANCE
com.spikeapi.network.response.Sample: java.lang.Double longitudeInDegree
com.google.crypto.tink.proto.AesCtrKey: int version_
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
androidx.window.R$attr: int alwaysExpand
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.spikeapi.network.request.HeartRateSummary: java.lang.Long max
com.spikeapi.ConnectionState: java.lang.String callbackUrl
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_SUFFIX
com.google.android.gms.internal.measurement.zzfd: boolean zzg
com.google.crypto.tink.proto.AesCtrKey: int PARAMS_FIELD_NUMBER
com.spikeapi.network.request.HeartRate: java.util.List values
androidx.health.platform.client.proto.DataProto$Device: androidx.health.platform.client.proto.Parser PARSER
com.spikeapi.network.response.CaloriesResponseData: java.lang.String date
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
androidx.health.platform.client.proto.RequestProto$AggregateMetricSpec: java.lang.String aggregationType_
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String dataType
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.spikeapi.network.request.CaloriesRawData: com.spikeapi.network.request.ActiveCaloriesBurned activeCaloriesBurned
androidx.health.platform.client.proto.GeneratedMessageLite: java.util.Map defaultInstanceMap
com.spikeapi.network.response.HrZone: java.lang.Double max
io.flutter.embedding.engine.FlutterJNI: float displayDensity
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
com.google.crypto.tink.proto.AesGcmSivKey: int KEY_VALUE_FIELD_NUMBER
com.spikeapi.network.request.CaloriesRawData: com.spikeapi.network.request.TotalCaloriesBurned totalCaloriesBurned
com.google.crypto.tink.proto.AesGcmSivKeyFormat: int version_
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
com.spikeapi.network.request.BodyFatPercentage: java.util.List values
androidx.health.platform.client.proto.RequestProto$AggregateMetricSpec: java.lang.String fieldName_
com.google.android.gms.internal.measurement.zzgd: int zzK
com.google.android.gms.internal.measurement.zzfb: int zzd
com.google.android.gms.internal.measurement.zzfn: int zzd
androidx.health.platform.client.proto.RequestProto$RequestContext: java.lang.String permissionToken_
androidx.fragment.app.Fragment: int mFragmentId
androidx.health.platform.client.error.ErrorCode: int PROVIDER_NEEDS_UPDATE
com.spikeapi.network.request.BodyFatPercentageValue: java.lang.Double value
androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse: int PAGE_TOKEN_FIELD_NUMBER
com.google.crypto.tink.proto.KeysetInfo: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList keyInfo_
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgp zzf
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
com.spikeapi.network.response.SleepResponseData: java.lang.String dataType
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.Double value
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
androidx.health.platform.client.proto.DataProto$DataPoint: long instantTimeMillis_
com.spikeapi.network.response.HeartRateResponseData: java.lang.String dataType
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
com.google.crypto.tink.proto.AesGcmSivKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.health.platform.client.proto.GeneratedMessageLite: int MEMOIZED_SERIALIZED_SIZE_MASK
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.spikeapi.network.request.DistanceRecord: java.lang.String endTime
com.spikeapi.network.request.TotalCaloriesRecord: java.lang.String startTime
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified firebaseApp
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
androidx.health.platform.client.proto.UninitializedMessageException: long serialVersionUID
com.spikeapi.model.SpikeData: java.time.OffsetDateTime dateFrom
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer steps
androidx.health.platform.client.proto.RequestProto$RequestContext: int PERMISSION_TOKEN_FIELD_NUMBER
com.spikeapi.network.response.HeartRateResponseData: java.util.List heartRateSamples
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
com.google.android.gms.internal.measurement.zzet: int zze
com.google.android.gms.internal.measurement.zzek: boolean zzj
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
androidx.fragment.app.Fragment: int AWAITING_ENTER_EFFECTS
com.spikeapi.network.request.HeartRateValue: java.lang.String startTime
androidx.health.platform.client.proto.DataProto$DataPoint: int DATA_TYPE_FIELD_NUMBER
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer avgHrVariability
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeActivitiesStreamDataType ACTIVITIES_STREAM
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
com.google.android.gms.internal.measurement.zzft: long zzh
com.moengage.pushbase.internal.MoETimePickerDialog: java.text.DateFormat dateFormat
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.google.android.gms.internal.measurement.zzek: boolean zzk
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.spikeapi.SpikeExceptions$SpikeInvalidCallbackUrlException: com.spikeapi.SpikeExceptions$SpikeInvalidCallbackUrlException INSTANCE
com.spikeapi.network.response.StepsResponseData: java.lang.String dataType
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzli zzg
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzli zzf
androidx.fragment.app.Fragment: android.os.Bundle mSavedViewRegistryState
com.google.android.gms.internal.measurement.zzfz: java.lang.String zze
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzf
androidx.health.platform.client.proto.DataProto$DataPoint: int DATA_ORIGIN_FIELD_NUMBER
androidx.health.platform.client.proto.DataProto$SeriesValue: int bitField0_
com.google.crypto.tink.proto.AesSivKey: int KEY_VALUE_FIELD_NUMBER
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.spikeapi.network.response.IntradayGlucoseData: java.lang.String trend
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener imeVisibleListener
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.spikeapi.SpikeRawDataType: java.lang.String typeName
com.google.crypto.tink.proto.AesSivKeyFormat: int VERSION_FIELD_NUMBER
com.spikeapi.network.response.SleepResponseData: java.lang.Integer timezoneOffset
com.spikeapi.network.request.RestingHeartRate: com.spikeapi.network.request.RestingHeartRateSummary summary
androidx.fragment.app.Fragment: boolean mUserVisibleHint
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.HeightData heightCm
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzli zzd
com.moengage.pushbase.activities.PushClickDialogTracker: android.os.Bundle extras
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double hf
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
androidx.fragment.app.Fragment: android.os.Bundle mArguments
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String collectedAt
com.spikeapi.SpikeEnvironment: com.spikeapi.SpikeEnvironment[] $VALUES
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.spikeapi.network.request.BoneMassStats: java.lang.Integer count
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzW
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int KEY_VALUE_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: float displayWidth
com.spikeapi.model.SpikeSleepData: java.util.List entries
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer averageWatts
androidx.health.platform.client.proto.DataProto$DataPoint: int SERIES_VALUES_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfz: int zzd
com.spikeapi.SpikeConnection: e.a spikeApi
androidx.health.platform.client.proto.PermissionProto$Permission: androidx.health.platform.client.proto.PermissionProto$Permission DEFAULT_INSTANCE
com.google.crypto.tink.proto.Keyset$Key: int keyId_
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
com.google.android.gms.internal.measurement.zzek: boolean zzl
com.google.android.gms.internal.measurement.zzfh: int zzd
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.spikeapi.SpikeEnvironment: com.spikeapi.SpikeEnvironment PROD
com.google.crypto.tink.proto.KeysetInfo$KeyInfo: int status_
com.spikeapi.network.response.BloodPressureData: java.lang.String timestamp
androidx.health.platform.client.proto.ResponseProto$AggregateDataResponse: androidx.health.platform.client.proto.Parser PARSER
androidx.fragment.app.FragmentActivity: boolean mCreated
com.spikeapi.network.response.IntradayStepsData: java.lang.String time
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime dateTo
com.google.android.play.core.review.ReviewInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.location.zzdf: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzj
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
com.spikeapi.network.request.BloodPressure: com.spikeapi.network.request.BloodPressureStats stats
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: int PAGE_TOKEN_FIELD_NUMBER
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BoneMass boneMass
androidx.health.platform.client.proto.DataProto$AggregateDataRow: int START_TIME_EPOCH_MS_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzer: int zzd
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.spikeapi.network.request.GlucoseRecord: java.lang.String endTime
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.android.gms.measurement.internal.zzq: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.HmacKeyFormat: int version_
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.String startTime
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.crypto.tink.proto.AesGcmKey: int VERSION_FIELD_NUMBER
com.google.crypto.tink.proto.KmsAeadKeyFormat: com.google.crypto.tink.proto.KmsAeadKeyFormat DEFAULT_INSTANCE
androidx.fragment.app.Fragment: int RESUMED
com.spikeapi.network.response.TimeSeriesData: java.lang.Double value
com.google.firebase.dynamiclinks.internal.DynamicLinkData: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.HmacKey: int version_
androidx.health.platform.client.proto.DataProto$DataPoint: int CLIENT_VERSION_FIELD_NUMBER
androidx.window.core.Version: int patch
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: int TIME_SPEC_FIELD_NUMBER
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String map
com.google.crypto.tink.proto.AesCtrKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.spikeapi.network.response.OxygenSaturationResponseData: java.util.List intradayData
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
com.google.crypto.tink.proto.ChaCha20Poly1305Key: int version_
androidx.health.platform.client.proto.PermissionProto$Permission: int accessType_
com.spikeapi.ConnectionState: java.lang.String endUserId
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int VERSION_FIELD_NUMBER
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List hrZones
com.spikeapi.network.response.DiffFromBaselineTemperatureData: java.lang.Double diffTemperatureCelsius
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
com.spikeapi.network.request.SpikeRequest: java.util.List entries
androidx.fragment.app.DialogFragment: int mStyle
com.google.crypto.tink.proto.AesEaxParams: com.google.crypto.tink.proto.AesEaxParams DEFAULT_INSTANCE
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.google.android.gms.internal.measurement.zzer: com.google.android.gms.internal.measurement.zzer zza
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
com.google.android.gms.measurement.internal.zzas: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.DistanceRawData: java.lang.String date
androidx.health.platform.client.proto.GeneratedMessageLite: int UNINITIALIZED_HASH_CODE
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: int KEK_URI_FIELD_NUMBER
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.String source
androidx.window.core.Bounds: int bottom
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeHeartRateDataType HEART_RATE
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.error.ErrorCode: int NOT_ALLOWED
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
kotlin.collections.EmptyMap: long serialVersionUID
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.moengage.pushbase.activities.PushTracker: java.lang.String tag
androidx.datastore.preferences.PreferencesProto$Value: int LONG_FIELD_NUMBER
com.moengage.widgets.MoERatingBar: android.graphics.Paint paintInside
com.google.android.gms.internal.measurement.zzgd: boolean zzZ
androidx.fragment.app.DialogFragment: boolean mViewDestroyed
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.spikeapi.network.request.StepsRawData: java.lang.String date
com.google.crypto.tink.proto.AesGcmKeyFormat: int VERSION_FIELD_NUMBER
androidx.health.platform.client.proto.DataProto$Value: int LONG_VAL_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzer: boolean zzf
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.PreferencesProto$StringSet DEFAULT_INSTANCE
com.facebook.login.KatanaProxyLoginMethodHandler: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.proto.TimeProto$TimeSpec: int START_LOCAL_DATE_TIME_FIELD_NUMBER
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
androidx.activity.ComponentActivity: java.lang.String ACTIVITY_RESULT_TAG
com.spikeapi.network.request.SkinTemperatureStats: java.lang.Integer count
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzgr zza
androidx.fragment.app.DialogFragment: int STYLE_NO_TITLE
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
androidx.window.R$attr: int splitMinWidth
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgt zza
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$1: com.moe.pushlibrary.activities.MoEActivity this$0
com.spikeapi.network.response.BodyResponseData: java.lang.Integer timezoneOffset
androidx.health.platform.client.proto.RequestProto$RequestContext: androidx.health.platform.client.proto.Parser PARSER
com.moengage.pushbase.internal.MoETimePickerDialog: java.util.Calendar calendar
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
com.spikeapi.network.response.WaterPercentageData: java.lang.Double value
androidx.health.platform.client.proto.DataProto$DataOrigin: int APPLICATION_ID_FIELD_NUMBER
com.moengage.pushbase.internal.MoETimePickerDialog: int maxMinute
com.google.android.gms.internal.measurement.zzff: java.lang.String zzf
com.spikeapi.network.request.SleepSummary: java.lang.Long rem
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException$InvalidWireTypeException: long serialVersionUID
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String activityName
com.spikeapi.network.request.WaterPercentageValue: java.lang.Double value
com.spikeapi.network.request.BodyFatPercentageStats: java.lang.Double avg
com.google.crypto.tink.proto.AesEaxKeyFormat: int PARAMS_FIELD_NUMBER
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String callbackUrl
io.flutter.embedding.engine.FlutterJNI: float displayHeight
com.spikeapi.network.response.Sample: java.lang.Double elevation
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: java.lang.String name
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
com.spikeapi.network.request.SleepRawData: java.lang.String bedtimeEnd
androidx.fragment.app.Fragment: int STARTED
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: int LIMIT_FIELD_NUMBER
androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged
androidx.health.platform.client.proto.ByteString$LiteralByteString: long serialVersionUID
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: java.lang.String pageToken_
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.SessionsRequest: java.lang.String spikeSdkVersion
androidx.health.platform.client.proto.DataProto$AggregateDataRow: int START_LOCAL_DATE_TIME_FIELD_NUMBER
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.response.SpikeHRVData: java.lang.Double sleepHRV
androidx.health.platform.client.proto.DataProto$DataOrigin: androidx.health.platform.client.proto.Parser PARSER
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.datastore.preferences.PreferencesProto$Value: java.lang.Object value_
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.SkinTemperature skinTemperature
androidx.fragment.app.Fragment: int VIEW_CREATED
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: int bitField0_
com.google.crypto.tink.proto.KeyTemplate: int outputPrefixType_
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
com.moengage.widgets.MoERatingBar: float starSize
com.spikeapi.network.request.SleepRawData: java.util.List levels
com.spikeapi.network.response.SpikeHRVData: java.lang.Double dayHRV
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: long sliceDurationMillis_
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.Parser PARSER
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeDistanceDataType DISTANCE
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
io.flutter.embedding.android.KeyboardMap$2: long serialVersionUID
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType STEPS
com.spikeapi.network.request.ActiveCaloriesSummary: java.lang.Double sum
androidx.fragment.app.Fragment: boolean mHasMenu
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.MapFieldLite preferences_
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzt
com.google.crypto.tink.shaded.protobuf.UninitializedMessageException: long serialVersionUID
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
com.spikeapi.network.response.BoneMassData: java.util.List timeseries
com.google.crypto.tink.proto.AesEaxKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.google.android.gms.internal.measurement.zzgk: int zze
androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse: java.lang.String pageToken_
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.AesCtrKey aesCtrKey_
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.common.base.Optional: long serialVersionUID
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int BROWSER
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.proto.AesGcmKey DEFAULT_INSTANCE
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
androidx.fragment.app.DialogFragment: android.app.Dialog mDialog
com.moe.pushlibrary.activities.MoEActivity$onCreate$6: com.moe.pushlibrary.activities.MoEActivity this$0
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.spikeapi.SpikeConnection: a.b logger
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Integer floors
com.google.crypto.tink.proto.XChaCha20Poly1305Key: com.google.crypto.tink.proto.XChaCha20Poly1305Key DEFAULT_INSTANCE
androidx.health.platform.client.proto.ErrorProto$ErrorStatus: androidx.health.platform.client.proto.Parser PARSER
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: java.lang.String kekUri_
androidx.health.platform.client.proto.RequestProto$RequestContext: androidx.health.platform.client.proto.RequestProto$RequestContext DEFAULT_INSTANCE
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
com.spikeapi.network.request.BMIValue: java.lang.String time
com.google.android.gms.internal.measurement.zzei: int zze
com.google.crypto.tink.proto.AesCtrHmacAeadKey: int AES_CTR_KEY_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double caloriesTotal
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.Double avg
com.spikeapi.network.request.SpikeRequest: java.lang.String collectedAt
com.google.crypto.tink.proto.AesGcmSivKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.health.platform.client.proto.DataProto$AggregateDataRow: androidx.health.platform.client.proto.Internal$ProtobufList dataOrigins_
com.spikeapi.network.response.BMIData: java.lang.Double value
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long steps
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.spikeapi.network.response.DistanceResponseData: java.util.List intradayData
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
com.spikeapi.model.SpikeCaloriesData: java.util.List entries
com.spikeapi.network.request.SpikeRequest: java.lang.String callbackUrl
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: int AES_CTR_KEY_FORMAT_FIELD_NUMBER
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.google.android.gms.location.zzac: android.os.Parcelable$Creator CREATOR
com.facebook.login.CustomTabLoginMethodHandler: android.os.Parcelable$Creator CREATOR
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType ACTIVITIES_STREAM
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType CALORIES
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String CACHE_DIRECTORY_BASE_PATH
com.google.crypto.tink.proto.KeyTypeEntry: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.AesCtrKey: int KEY_VALUE_FIELD_NUMBER
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer highStressDuration
androidx.health.platform.client.proto.DataProto$DataPoint: int bitField0_
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzfb zza
com.spikeapi.network.response.SleepResponseData: java.lang.Integer hrAverage
com.spikeapi.network.request.BMIStats: java.lang.Integer count
com.google.crypto.tink.proto.HmacKey: int VERSION_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzk
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
com.spikeapi.network.request.CoreTemperatureStats: java.lang.Double avg
androidx.datastore.preferences.protobuf.UninitializedMessageException: long serialVersionUID
androidx.health.platform.client.proto.DataProto$DataOrigin: androidx.health.platform.client.proto.DataProto$DataOrigin DEFAULT_INSTANCE
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: int HMAC_KEY_FORMAT_FIELD_NUMBER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
kotlin.collections.builders.SerializedCollection: long serialVersionUID
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object state
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List samples
com.google.crypto.tink.proto.XChaCha20Poly1305Key: int VERSION_FIELD_NUMBER
kotlinx.coroutines.DefaultExecutor: int debugStatus
androidx.health.platform.client.proto.DataProto$AggregateDataRow: long startTimeEpochMs_
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
com.spikeapi.network.response.SleepResponseData: java.lang.Integer rem
com.google.crypto.tink.proto.HmacKey: com.google.crypto.tink.proto.HmacKey DEFAULT_INSTANCE
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.spikeapi.network.response.BoneMassData: java.lang.Double value
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
com.spikeapi.model.SpikeActivitiesSummaryData: java.util.List entries
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime submittedAt
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener listeners
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double distance
com.spikeapi.network.response.Sample: java.lang.Object bikeCadenceRpm
com.google.android.gms.internal.measurement.zzgm: com.google.android.gms.internal.measurement.zzgm zza
com.spikeapi.network.request.HeartRateValue: java.lang.String endTime
com.google.crypto.tink.proto.Keyset$Key: int KEY_DATA_FIELD_NUMBER
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.crypto.tink.shaded.protobuf.FieldSet extensions
com.spikeapi.network.response.BodyResponseData: com.spikeapi.network.response.BodyData bodyData
com.google.crypto.tink.proto.KmsAeadKey: int VERSION_FIELD_NUMBER
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.google.android.gms.internal.measurement.zzek: int zze
com.google.android.gms.internal.measurement.zzei: boolean zzh
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzi
androidx.health.platform.client.proto.RequestProto$RequestContext: int sdkVersion_
com.spikeapi.network.request.SessionsRequest: java.lang.String os
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String notificationId
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified firebaseInstallationsApi
com.google.android.gms.internal.measurement.zzlb: java.util.Map zza
com.spikeapi.network.request.DistanceRawData: com.spikeapi.network.request.DistanceSummary summary
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzD
androidx.health.platform.client.request.RequestContext: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzem: java.lang.String zzh
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaf
com.google.crypto.tink.proto.AesGcmKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.spikeapi.model.SpikeHeartRateData: java.util.List entries
com.spikeapi.network.request.SpikeRequest: java.lang.String dateFrom
androidx.health.platform.client.error.ErrorCode: int INVALID_UID
com.google.crypto.tink.proto.KeyTypeEntry: int NEW_KEY_ALLOWED_FIELD_NUMBER
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.google.crypto.tink.proto.HmacParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.AesGcmSivKeyFormat: com.google.crypto.tink.proto.AesGcmSivKeyFormat DEFAULT_INSTANCE
com.spikeapi.network.response.SpikeSourceWebhook: java.lang.String message
com.spikeapi.network.response.Level: java.lang.Integer seconds
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: androidx.health.platform.client.proto.Internal$ProtobufList dataOriginFilters_
com.google.android.gms.internal.measurement.zzff: long zze
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
kotlin.jvm.internal.Lambda: int arity
com.spikeapi.network.response.SpikeSource: boolean isSuccess
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String dateTo
com.spikeapi.network.response.IntradayDistanceData: java.lang.Integer value
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.spikeapi.network.response.Sample: java.lang.Integer timerDuration
com.spikeapi.SpikeExceptions$SpikeInvalidCredentialsException: com.spikeapi.SpikeExceptions$SpikeInvalidCredentialsException INSTANCE
com.spikeapi.network.response.Sample: java.lang.String timeEnd
com.spikeapi.network.request.Height: com.spikeapi.network.request.HeightStats stats
com.spikeapi.network.request.WeightStats: java.lang.Integer count
androidx.health.platform.client.proto.DataProto$DataType: androidx.health.platform.client.proto.DataProto$DataType DEFAULT_INSTANCE
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double elevHigh
com.spikeapi.network.response.IntradayDistanceData: java.lang.String time
androidx.datastore.preferences.PreferencesProto$Value: int FLOAT_FIELD_NUMBER
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.spikeapi.model.SpikeBodyData: java.util.List entries
com.google.android.gms.internal.measurement.zzgm: int zzd
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzli zzf
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.spikeapi.network.response.SpikeResponse: java.util.List entries
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long maxHr
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeOxygenSaturationDataType OXYGEN_SATURATION
com.spikeapi.network.request.Height: java.util.List values
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
com.spikeapi.model.SpikeWebhookJob: long payloadSize
com.spikeapi.network.response.SpikeHRIntradayData: java.lang.String time
com.google.crypto.tink.proto.KmsAeadKeyFormat: int KEY_URI_FIELD_NUMBER
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double value
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime collectedAt
com.google.crypto.tink.proto.AesEaxKeyFormat: com.google.crypto.tink.proto.AesEaxParams params_
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat: int version_
androidx.health.platform.client.proto.DataProto$Device: int bitField0_
com.spikeapi.ConnectionState: java.lang.String endUserSessionId
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.health.platform.client.proto.DataProto$AggregateDataRow: int zoneOffsetSeconds_
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.String endTime
androidx.health.platform.client.proto.DataProto$Value: int DOUBLE_VAL_FIELD_NUMBER
com.google.android.gms.location.LastLocationRequest: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.spikeapi.network.request.TotalCaloriesSummary: java.lang.Integer count
kotlin.SafePublicationLazyImpl: java.lang.Object _value
androidx.window.R$styleable: int[] ActivityFilter
androidx.health.platform.client.proto.AbstractMessageLite: int memoizedHashCode
androidx.health.platform.client.proto.DataProto$DataPoint: int INSTANT_TIME_MILLIS_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzlg zzT
com.spikeapi.network.request.BloodPressure: java.util.List values
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.proto.AesSivKey DEFAULT_INSTANCE
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.MuscleMass muscleMass
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.spikeapi.network.response.TimeSeriesData: java.lang.String timestamp
androidx.fragment.app.Fragment: boolean mDetached
androidx.health.platform.client.proto.DataProto$DataPoint: androidx.health.platform.client.proto.DataProto$AggregatedValue max_
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.proto.AesCtrParams params_
com.spikeapi.network.request.HeartRateVariability: java.util.List values
com.spikeapi.network.response.BreathingResponseData: java.lang.String date
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.health.platform.client.proto.DataProto$Value: int ENUM_VAL_FIELD_NUMBER
com.spikeapi.SpikeExceptions$SpikeConnectionIsClosedException: com.spikeapi.SpikeExceptions$SpikeConnectionIsClosedException INSTANCE
androidx.window.embedding.SplitRule: float splitRatio
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer caloriesTotal
com.spikeapi.network.response.SpikeResponse: java.lang.String endUserId
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgd zzd
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.Height height
com.spikeapi.network.request.GlucoseRawData: java.lang.String timeZoneOffset
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: java.lang.String slicePeriod_
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double elevHigh
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor mReportFullyDrawnExecutor
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double caloriesBmr
androidx.health.platform.client.proto.GeneratedMessageLite: int memoizedSerializedSize
androidx.window.R$attr: int finishSecondaryWithPrimary
com.spikeapi.network.response.GlucoseResponseData: java.lang.Double avgValue
com.google.crypto.tink.proto.HmacKey: int PARAMS_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgg: int zze
com.google.crypto.tink.proto.HmacKeyFormat: com.google.crypto.tink.proto.HmacParams params_
com.google.crypto.tink.shaded.protobuf.CodedOutputStream$OutOfSpaceException: long serialVersionUID
com.spikeapi.network.request.WaterPercentage: java.util.List values
androidx.fragment.app.Fragment: int mBackStackNesting
com.google.android.gms.internal.measurement.zzgd: int zzQ
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzli zzj
com.spikeapi.network.request.HeartRateValue: java.lang.Long value
androidx.window.R$id: int rtl
com.spikeapi.ConnectionState: java.lang.String accountId
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
androidx.health.platform.client.proto.DataProto$Device: androidx.health.platform.client.proto.DataProto$Device DEFAULT_INSTANCE
com.google.crypto.tink.proto.Keyset$Key: int status_
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String timeEnd
com.spikeapi.network.request.MuscleMass: com.spikeapi.network.request.MuscleMassStats stats
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer stressDuration
com.google.android.gms.internal.measurement.zzfd: boolean zzf
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfn zzg
androidx.health.platform.client.proto.DataProto$SeriesValue: androidx.health.platform.client.proto.DataProto$SeriesValue DEFAULT_INSTANCE
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String timeStart
com.spikeapi.network.request.SleepSummary: java.lang.Float efficiency
com.spikeapi.network.request.BreathingSummary: java.lang.Double sum
com.google.crypto.tink.proto.AesCmacKey: int version_
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String submittedAt
com.spikeapi.network.request.SpikeRequest: java.lang.String spikeSdkVersion
com.google.android.gms.internal.measurement.zzgd: long zzU
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzf
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double totalElevationGain
com.spikeapi.network.request.HeartRateSummary: java.lang.Long min
com.spikeapi.network.request.StepsRecord: java.lang.String endTime
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.spikeapi.network.response.SleepResponseData: java.lang.Integer totalSleep
androidx.fragment.app.Fragment: boolean mPerformedCreateView
com.spikeapi.network.request.MuscleMassStats: java.lang.Integer count
com.spikeapi.network.request.GlucoseSummary: java.lang.Integer count
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
com.spikeapi.network.request.TotalCaloriesBurned: java.util.List values
com.google.crypto.tink.proto.AesCtrHmacAeadKey: com.google.crypto.tink.proto.AesCtrHmacAeadKey DEFAULT_INSTANCE
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.spikeapi.network.response.BreathingResponseData: java.util.List intradayData
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
com.spikeapi.network.response.IntradayCaloriesData: java.lang.Double value
com.moengage.pushbase.internal.fragments.LaterDialogFragment: com.moengage.pushbase.internal.listener.OptionSelectionListener itemSelected
com.spikeapi.network.response.SpikeHRIntradayData: java.lang.Double value
com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzgd: long zzk
com.google.crypto.tink.proto.AesEaxParams: com.google.crypto.tink.shaded.protobuf.Parser PARSER
com.google.crypto.tink.proto.EncryptedKeyset: int ENCRYPTED_KEYSET_FIELD_NUMBER
com.google.crypto.tink.proto.AesCtrParams: com.google.crypto.tink.proto.AesCtrParams DEFAULT_INSTANCE
com.spikeapi.network.response.SessionsResponse: java.lang.String accountId
com.spikeapi.ConnectionState: java.lang.String authToken
com.google.android.gms.internal.location.zzdd: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitInfo: float splitRatio
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: boolean hasException
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.String date
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long avgHr
com.spikeapi.network.request.BMIValue: java.lang.Double value
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.spikeapi.network.response.Sample: java.lang.String timeStart
com.google.android.gms.internal.measurement.zzfx: java.lang.String zzf
androidx.health.platform.client.proto.DataProto$SeriesValue: int INSTANT_TIME_MILLIS_FIELD_NUMBER
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType BREATHING
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
com.spikeapi.SpikeExceptions$SpikeInvalidDateRangeException: com.spikeapi.SpikeExceptions$SpikeInvalidDateRangeException INSTANCE
com.spikeapi.network.request.ActivitiesSummaryRawData: com.spikeapi.SpikeRawDataType type
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.spikeapi.network.request.SpikeRequest: java.lang.String dateTo
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.WaterPercentageData waterPercentage
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double avgHeartRate
com.spikeapi.network.response.HeartRateResponseData: java.lang.String date
com.spikeapi.network.response.WeightData: java.util.List timeseries
com.google.android.gms.internal.measurement.zzfv: java.lang.String zze
com.google.crypto.tink.proto.KeysetInfo: int PRIMARY_KEY_ID_FIELD_NUMBER
androidx.health.platform.client.proto.RequestProto$AggregateMetricSpec: int FIELD_NAME_FIELD_NUMBER
androidx.datastore.preferences.PreferencesProto$Value: int BOOLEAN_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzn
com.google.crypto.tink.proto.AesEaxKeyFormat: int KEY_SIZE_FIELD_NUMBER
com.spikeapi.network.response.BodyFatPercentageData: java.util.List timeseries
com.spikeapi.SpikeProcessedDataType: java.lang.String typeName
com.google.android.gms.internal.measurement.zzfr: com.google.android.gms.internal.measurement.zzfr zza
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.SleepRawData: com.spikeapi.network.request.SleepSummary summary
androidx.health.platform.client.proto.InvalidProtocolBufferException: long serialVersionUID
com.google.android.gms.internal.measurement.zzgd: long zzM
com.moengage.pushbase.internal.fragments.LaterDialogFragment: java.lang.String TAG
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.spikeapi.network.response.SleepResponseData: java.lang.String bedtimeStart
com.spikeapi.network.request.HeartRate: com.spikeapi.network.request.HeartRateSummary summary
androidx.fragment.app.DialogFragment: boolean mShownByMe
com.moengage.pushbase.internal.fragments.TimePickerFragment: com.moengage.pushbase.internal.listener.TimeSelectionListener timeSelectedListener
com.spikeapi.model.SpikeBreathingData: java.util.List entries
com.google.crypto.tink.proto.RegistryConfig: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList entry_
com.google.crypto.tink.proto.KmsAeadKeyFormat: java.lang.String keyUri_
androidx.health.platform.client.proto.ErrorProto$ErrorStatus: androidx.health.platform.client.proto.ErrorProto$ErrorStatus DEFAULT_INSTANCE
com.spikeapi.network.request.BreathingSummary: java.lang.Integer count
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
androidx.window.R$attr: int secondaryActivityName
com.spikeapi.network.request.StepsRecord: java.lang.Long value
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.android.gms.internal.auth.zzeu: com.google.android.gms.internal.auth.zzgz zzc
com.spikeapi.network.request.MuscleMassValue: java.lang.String time
okio.ByteString: long serialVersionUID
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzlh zze
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer mediumStressDuration
com.google.crypto.tink.proto.AesGcmKeyFormat: com.google.crypto.tink.proto.AesGcmKeyFormat DEFAULT_INSTANCE
com.spikeapi.network.response.BloodPressureData: java.lang.Integer systolicBloodPressure
com.google.crypto.tink.proto.AesCmacKey: int VERSION_FIELD_NUMBER
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.shaded.protobuf.ByteString encryptedKeyset_
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.health.platform.client.proto.PermissionProto$Permission: int bitField0_
com.spikeapi.SpikeConnection: a.a healthManager
com.spikeapi.network.request.SpikeRequest: java.lang.String os
com.spikeapi.network.response.BodyResponseData: java.lang.String dataType
com.google.android.gms.internal.measurement.zzgr: int zzd
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite: int memoizedSerializedSize
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double lf
com.spikeapi.network.response.TemperatureTimeSeriesData: java.lang.String timestamp
com.google.android.gms.internal.measurement.zzgd: int zzg
com.moe.pushlibrary.activities.MoEActivity: java.lang.String tag
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime dateFrom
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzli zzg
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzli zzf
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType OXYGEN_SATURATION
com.google.crypto.tink.proto.Keyset: int KEY_FIELD_NUMBER
androidx.health.platform.client.proto.DataProto$SeriesValue: long instantTimeMillis_
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: androidx.health.platform.client.proto.TimeProto$TimeSpec timeSpec_
com.facebook.appevents.AppEvent$SerializationProxyV2: long serialVersionUID
androidx.health.platform.client.proto.DataProto$DataPoint: int DEVICE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgy: double zzj
androidx.health.platform.client.proto.DataProto$Device: int IDENTIFIER_FIELD_NUMBER
com.google.crypto.tink.shaded.protobuf.ByteString$BoundedByteString: long serialVersionUID
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
com.spikeapi.network.response.WaterPercentageData: java.util.List timeseries
com.moengage.android.Constants: int SDK_VERSION
com.spikeapi.SpikeExceptions$SpikePermissionsNotGrantedException: com.spikeapi.SpikeExceptions$SpikePermissionsNotGrantedException INSTANCE
com.spikeapi.network.request.StepsRawData: java.lang.String timeZoneOffset
com.spikeapi.network.request.SleepSummary: java.lang.Long lowestHr
com.spikeapi.network.response.SleepResponseData: java.lang.Integer hrLowest
com.google.android.gms.internal.measurement.zzgd: long zzV
androidx.health.platform.client.proto.DataProto$DataPoint: int ORIGIN_SAMPLE_UID_FIELD_NUMBER
androidx.window.embedding.SplitPairRule: boolean clearTop
com.google.firebase.dynamiclinks.internal.ShortDynamicLinkImpl: android.os.Parcelable$Creator CREATOR
com.facebook.appevents.AppEvent: long serialVersionUID
com.google.crypto.tink.proto.HmacParams: int TAG_SIZE_FIELD_NUMBER
androidx.health.platform.client.request.ReadDataRangeRequest: android.os.Parcelable$Creator CREATOR
androidx.health.platform.client.permission.Permission: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double avgHrv
androidx.health.platform.client.proto.DataProto$DataType: int bitField0_
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
com.google.android.gms.location.LocationSettingsResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzli zzg
androidx.health.platform.client.proto.TimeProto$TimeSpec: java.lang.String endLocalDateTime_
com.google.android.gms.internal.measurement.zzft: long zzg
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.android.gms.internal.measurement.zzgd: boolean zzF
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzlh zzf
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.google.android.gms.internal.measurement.zzfb: boolean zzg
com.google.android.gms.internal.measurement.zzfn: com.google.android.gms.internal.measurement.zzfn zza
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType ACTIVITIES_SUMMARY
dev.spike.flutter_health_connect.model.SpikeOperationResult: boolean success
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long steps
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
com.moe.pushlibrary.activities.MoEActivity$onCreate$2: com.moe.pushlibrary.activities.MoEActivity this$0
com.google.android.gms.internal.measurement.zzff: int zzd
com.google.android.gms.internal.measurement.zzfd: int zzd
com.google.crypto.tink.proto.AesCmacKey: com.google.crypto.tink.proto.AesCmacKey DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzei: boolean zzi
com.spikeapi.network.request.OxygenSaturationRecord: java.lang.String endTime
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.spikeapi.network.request.StepsSummary: java.lang.Integer count
androidx.health.platform.client.proto.RequestProto$AggregateDataRequest: int METRIC_SPEC_FIELD_NUMBER
androidx.health.platform.client.proto.DataProto$DataPoint: java.lang.String clientId_
com.spikeapi.network.response.SpikeResponse: java.lang.String collectedAt
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeActivitiesSummaryDataType ACTIVITIES_SUMMARY
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int PARAMS_FIELD_NUMBER
com.spikeapi.network.request.BodyFatPercentageValue: java.lang.String time
androidx.health.platform.client.proto.DataProto$DataPoint: java.lang.String originSeriesUid_
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.google.android.gms.internal.measurement.zzfj: int zzd
com.google.crypto.tink.proto.AesCtrKeyFormat: com.google.crypto.tink.proto.AesCtrKeyFormat DEFAULT_INSTANCE
com.spikeapi.network.response.SleepResponseData: java.lang.Integer respiratoryRate
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzey zza
com.google.android.gms.internal.measurement.zzgd: long zzn
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BodyFatPercentage bodyFatPercentage
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Double max
com.spikeapi.network.response.HrZone: java.lang.String name
com.google.android.gms.internal.measurement.zzgd: int zza
com.facebook.FacebookRequestError: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
com.google.crypto.tink.proto.AesSivKeyFormat: com.google.crypto.tink.shaded.protobuf.Parser PARSER
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
com.google.crypto.tink.proto.EncryptedKeyset: com.google.crypto.tink.proto.KeysetInfo keysetInfo_
com.google.android.gms.internal.measurement.zzgd: long zzm
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.spikeapi.network.request.RestingHeartRateValue: java.lang.Long value
com.spikeapi.network.request.DistanceRecord: java.lang.Double value
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.String date
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzad
com.google.crypto.tink.proto.AesCmacKeyFormat: com.google.crypto.tink.proto.AesCmacKeyFormat DEFAULT_INSTANCE
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzi
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: long serialVersionUID
com.spikeapi.network.request.HeightValue: java.lang.Double value
com.google.crypto.tink.proto.KeyTemplate: com.google.crypto.tink.proto.KeyTemplate DEFAULT_INSTANCE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
com.google.android.gms.internal.measurement.zzgy: int zzd
com.spikeapi.network.request.CoreTemperature: java.util.List values
androidx.health.platform.client.proto.DataProto$AggregateDataRow: int DATA_ORIGINS_FIELD_NUMBER
com.facebook.AuthenticationTokenClaims: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzem zzg
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.Double mets
com.google.android.gms.internal.measurement.zzfr: int zzd
com.spikeapi.network.request.SleepRawData: com.spikeapi.SpikeRawDataType type
com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat: com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat DEFAULT_INSTANCE
com.spikeapi.network.request.ActiveCaloriesSummary: java.lang.Integer count
androidx.health.platform.client.proto.TimeProto$TimeSpec: androidx.health.platform.client.proto.TimeProto$TimeSpec DEFAULT_INSTANCE
com.google.crypto.tink.proto.KmsAeadKey: int PARAMS_FIELD_NUMBER
com.google.crypto.tink.proto.KmsAeadKey: com.google.crypto.tink.proto.KmsAeadKeyFormat params_
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.spikeapi.network.request.Weight: java.util.List values
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer distance
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.spikeapi.network.request.OxygenSaturationRawData: java.lang.String timeZoneOffset
androidx.health.platform.client.proto.RequestProto$ReadDataRangeRequest: int DATA_ORIGIN_FILTERS_FIELD_NUMBER
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Parser PARSER
androidx.fragment.app.FragmentActivity: boolean mResumed
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double avgWatts
androidx.window.core.Version: java.lang.String description
com.spikeapi.network.request.SleepRawData: java.lang.String timeZoneOffset
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.spikeapi.network.response.Sample: java.lang.Double latitudeInDegree
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer maxHr
com.spikeapi.network.request.StepsRecord: java.lang.String startTime
com.google.crypto.tink.proto.Keyset: com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList key_
androidx.health.platform.client.error.ErrorCode: int TRANSACTION_TOO_LARGE
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer restingHr
com.google.android.gms.internal.measurement.zzgd: boolean zzz
androidx.health.platform.client.proto.RequestProto$AggregateMetricSpec: java.lang.String dataTypeName_
com.spikeapi.network.response.CaloriesResponseData: java.lang.String dataType
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double maxSpeed
com.google.crypto.tink.proto.AesGcmKeyFormat: int version_
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
androidx.health.platform.client.proto.ResponseProto$ReadDataRangeResponse: int bitField0_
androidx.health.platform.client.proto.DataProto$SeriesValue: androidx.health.platform.client.proto.Parser PARSER
androidx.fragment.app.Fragment: boolean mRetainInstance
kotlin.collections.EmptyList: long serialVersionUID
com.google.crypto.tink.proto.RegistryConfig: java.lang.String configName_
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.Double min
com.spikeapi.network.response.BreathingIntradayData: java.lang.Integer value
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
com.spikeapi.network.request.DistanceRecord: java.lang.String startTime
androidx.fragment.app.DialogFragment: androidx.lifecycle.Observer mObserver
com.spikeapi.SpikeConnection: com.squareup.moshi.Moshi moshi
com.spikeapi.network.request.WeightStats: java.lang.Double avg
androidx.health.platform.client.proto.DataProto$AggregateDataRow: androidx.health.platform.client.proto.DataProto$AggregateDataRow DEFAULT_INSTANCE
androidx.health.platform.client.proto.DataProto$SeriesValue: int VALUES_FIELD_NUMBER
androidx.health.platform.client.proto.TimeProto$TimeSpec: java.lang.String startLocalDateTime_
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.spikeapi.network.response.SessionsResponse: java.lang.String applicationId
androidx.fragment.app.Fragment: int mContentLayoutId
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.google.android.gms.internal.measurement.zzgd: int zzs
com.google.crypto.tink.proto.KmsEnvelopeAeadKey: int version_
androidx.datastore.preferences.protobuf.ByteString$BoundedByteString: long serialVersionUID
androidx.fragment.app.DialogFragment: java.lang.Runnable mDismissRunnable
com.spikeapi.network.response.DetailedTemperatureData: java.util.List timeseries
com.google.crypto.tink.proto.KeyData: java.lang.String typeUrl_
com.spikeapi.network.response.Sample: java.lang.Integer heartrate
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
androidx.fragment.app.Fragment: boolean mInLayout
com.spikeapi.network.request.StepsSummary: java.lang.Long sum
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
androidx.health.platform.client.proto.DataProto$DataPoint: int MAX_FIELD_NUMBER
com.spikeapi.network.request.SkinTemperatureValue: java.lang.String time
com.spikeapi.network.request.DistanceRawData: java.lang.String timeZoneOffset
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String date
com.google.crypto.tink.proto.AesCtrParams: int IV_SIZE_FIELD_NUMBER
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType HEART
com.spikeapi.network.response.DistanceResponseData: java.lang.Integer value
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
androidx.fragment.app.Fragment: int CREATED
com.spikeapi.network.response.IntradayStepsData: java.lang.Integer value
androidx.health.platform.client.proto.DataProto$DataType: androidx.health.platform.client.proto.Parser PARSER
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat: com.google.crypto.tink.proto.KeyTemplate dekTemplate_
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.spikeapi.network.response.MuscleMassData: java.lang.Double value
com.google.crypto.tink.proto.AesSivKey: com.google.crypto.tink.shaded.protobuf.ByteString keyValue_
com.google.crypto.tink.proto.KeyTypeEntry: int KEY_MANAGER_VERSION_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzi
com.google.crypto.tink.proto.AesCtrKeyFormat: int keySize_
com.google.crypto.tink.proto.KeyTypeEntry: com.google.crypto.tink.proto.KeyTypeEntry DEFAULT_INSTANCE
androidx.health.platform.client.proto.DataProto$AggregatedValue: androidx.health.platform.client.proto.MapFieldLite values_
com.spikeapi.network.response.BreathingResponseData: java.lang.String source
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer timezoneOffset
com.spikeapi.network.request.GlucoseRecord: java.lang.Double value
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double avgSpeed
androidx.fragment.app.Fragment: int mContainerId
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzli zzf
androidx.health.platform.client.proto.DataProto$Device: java.lang.String identifier_
com.google.android.gms.internal.measurement.zzjk: int zzb
com.spikeapi.SpikeConnection: com.spikeapi.ConnectionState connectionState
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.embedding.android.KeyboardMap$1: long serialVersionUID
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzer zzi
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzgb zza
androidx.fragment.app.Fragment: boolean mHidden
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzfz zzac
kotlin.coroutines.EmptyCoroutineContext: long serialVersionUID
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
com.google.crypto.tink.proto.HmacKeyFormat: int keySize_
androidx.fragment.app.Fragment: java.lang.String mTag
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int NONE
androidx.window.layout.SidecarAdapter: java.lang.String TAG
com.spikeapi.network.request.WaterPercentageStats: java.lang.String toString()
androidx.core.app.BundleCompat$Api18Impl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.spikeapi.network.response.GlucoseResponseData: java.lang.String getUnit()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.spikeapi.SpikeConnection: void access$saveConnectionState(com.spikeapi.SpikeConnection,java.lang.String,com.spikeapi.ConnectionState)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.spikeapi.network.response.Level: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.spikeapi.network.response.GlucoseResponseData: GlucoseResponseData(java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.util.List)
com.spikeapi.network.request.SpikeRequest: java.lang.String getDateTo()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: SpikeAndroidExceptionData(java.lang.String,java.lang.String,boolean)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle createBigTextStyle(android.app.Notification$Builder)
com.spikeapi.network.request.HeartRate: com.spikeapi.network.request.HeartRate copy$default(com.spikeapi.network.request.HeartRate,com.spikeapi.network.request.HeartRateSummary,java.util.List,int,java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
com.moengage.pushbase.internal.fragments.TimePickerFragment: void onDismiss(android.content.DialogInterface)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
com.spikeapi.network.response.BreathingIntradayData: java.lang.String component1()
com.spikeapi.network.request.Level: com.spikeapi.network.request.Level copy(java.lang.String,java.lang.String,java.lang.String)
com.spikeapi.network.request.RestingHeartRateValue: RestingHeartRateValue(java.lang.String,java.lang.String,java.lang.Long)
com.spikeapi.network.request.StepsRecord: StepsRecord(java.lang.String,java.lang.String,java.lang.Long,java.lang.String)
com.spikeapi.network.request.SpikeRequest: SpikeRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.spikeapi.network.request.TotalCaloriesSummary: TotalCaloriesSummary(java.lang.Double,java.lang.Integer,java.lang.Double)
androidx.core.app.ComponentActivity: boolean shouldDumpInternalState(java.lang.String[])
kotlin.jvm.internal.Lambda: int getArity()
com.spikeapi.network.request.MuscleMassValue: com.spikeapi.network.request.MuscleMassValue copy$default(com.spikeapi.network.request.MuscleMassValue,java.lang.String,java.lang.Double,int,java.lang.Object)
com.yalantis.ucrop.view.TransformImageView: java.lang.String getImageOutputPath()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.yalantis.ucrop.view.widget.AspectRatioTextView: void setActiveColor(int)
com.facebook.login.DefaultAudience: com.facebook.login.DefaultAudience valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] values()
com.spikeapi.network.request.BoneMass: BoneMass()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
com.spikeapi.network.request.SpikeRequest: java.lang.String component1()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component19()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
com.spikeapi.SpikeConnection: java.lang.String getPostbackUrl()
com.spikeapi.network.response.Sample: java.lang.Double getStepsPerMinute()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.spikeapi.network.response.BloodPressureData: boolean equals(java.lang.Object)
com.spikeapi.network.request.DistanceRecord: java.lang.Double component3()
com.spikeapi.network.response.BloodPressureData: java.lang.String getTimestamp()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.RestingHeartRate component4()
com.spikeapi.network.request.OxygenSaturationRawData: com.spikeapi.network.request.OxygenSaturationRawData copy(java.lang.String,java.lang.String,com.spikeapi.network.request.OxygenSaturationSummary,java.util.List)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
com.spikeapi.network.request.SleepSummary: java.lang.Long component1()
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] values()
com.spikeapi.SpikeExceptions$SpikeConnectionIsClosedException: SpikeExceptions$SpikeConnectionIsClosedException()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind valueOf(java.lang.String)
com.moengage.inapp.internal.model.enums.LifecycleType: com.moengage.inapp.internal.model.enums.LifecycleType valueOf(java.lang.String)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.spikeapi.network.response.Sample: java.lang.Double component4()
androidx.webkit.internal.ApiHelperForM: boolean getOffscreenPreRaster(android.webkit.WebSettings)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.spikeapi.network.request.HeightValue: java.lang.Double component2()
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
com.spikeapi.network.request.SpikeRequest: java.lang.String getDataType()
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
com.spikeapi.network.request.BodyFatPercentage: boolean equals(java.lang.Object)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes valueOf(java.lang.String)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String component8()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.health.platform.client.impl.data.SharedMemory27Impl: void writeToParcelUsingSharedMemory(java.lang.String,byte[],android.os.Parcel,int)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism[] values()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.spikeapi.network.response.Sample: java.lang.Double getDistance()
com.spikeapi.network.response.SpikeSource: java.lang.String toString()
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.spikeapi.network.response.SpikeSourceWebhook: SpikeSourceWebhook(java.lang.String,boolean,java.lang.String)
com.spikeapi.network.response.BodyData: java.lang.String toString()
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.Integer getLevel()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.spikeapi.network.response.SleepResponseData: com.spikeapi.network.response.SleepResponseData copy(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Integer,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.List)
com.spikeapi.network.request.MuscleMassStats: com.spikeapi.network.request.MuscleMassStats copy$default(com.spikeapi.network.request.MuscleMassStats,java.lang.Double,java.lang.Integer,int,java.lang.Object)
dev.spike.flutter_health_connect.model.SpikeLoggingData: dev.spike.flutter_health_connect.model.SpikeLoggingData copy$default(dev.spike.flutter_health_connect.model.SpikeLoggingData,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.spikeapi.network.request.SleepSummary: java.lang.Long getLowestHr()
com.spikeapi.network.request.WeightStats: com.spikeapi.network.request.WeightStats copy(java.lang.Double,java.lang.Integer)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder: com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder valueOf(java.lang.String)
androidx.window.core.Bounds: android.graphics.Rect toRect()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String component26()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
com.google.android.gms.internal.measurement.zzbn: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.spikeapi.network.request.HeartRateSummary: com.spikeapi.network.request.HeartRateSummary copy$default(com.spikeapi.network.request.HeartRateSummary,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double component4()
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI valueOf(java.lang.String)
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus: kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus[] values()
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.FirebaseSessions getComponents$lambda-0(com.google.firebase.components.ComponentContainer)
com.spikeapi.network.request.DistanceRawData: com.spikeapi.network.request.DistanceRawData copy$default(com.spikeapi.network.request.DistanceRawData,java.lang.String,java.lang.String,com.spikeapi.network.request.DistanceSummary,java.util.List,int,java.lang.Object)
com.spikeapi.network.request.SpikeRequest: java.lang.String component4()
com.spikeapi.ConnectionState: java.lang.Boolean component6()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.webkit.internal.ApiHelperForOMR1: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
com.spikeapi.network.response.WaterPercentageData: com.spikeapi.network.response.WaterPercentageData copy$default(com.spikeapi.network.response.WaterPercentageData,java.lang.Double,java.util.List,int,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
com.spikeapi.network.response.SpikeResponse: java.lang.String getDateTo()
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.spikeapi.model.SpikeDistanceDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.network.response.SessionsResponse: java.lang.String component2()
com.spikeapi.network.response.CaloriesResponseData: CaloriesResponseData(java.lang.String,java.util.List,java.lang.String,java.lang.Integer)
com.facebook.applinks.AppLinks: AppLinks()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getRespiratoryRate()
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention valueOf(java.lang.String)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
com.spikeapi.model.SpikeBreathingDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.network.request.WaterPercentageValue: com.spikeapi.network.request.WaterPercentageValue copy(java.lang.String,java.lang.Double)
com.spikeapi.network.request.BoneMass: BoneMass(com.spikeapi.network.request.BoneMassStats,java.util.List)
androidx.window.layout.WindowMetrics: int hashCode()
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat[] values()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component21()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
com.spikeapi.network.response.BreathingResponseData: java.util.List component4()
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$2: java.lang.Object invoke()
com.facebook.AccessTokenSource: com.facebook.AccessTokenSource valueOf(java.lang.String)
com.spikeapi.network.request.ActivitiesStreamRawData: com.spikeapi.network.request.ActivitiesStreamRawData copy$default(com.spikeapi.network.request.ActivitiesStreamRawData,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.String,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Double,java.lang.Double,java.util.List,int,java.lang.Object)
com.spikeapi.network.request.Height: java.util.List getValues()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.Double getValue()
com.spikeapi.network.response.IntradayStepsData: java.lang.String component1()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
com.moengage.core.internal.model.DataTypes: com.moengage.core.internal.model.DataTypes valueOf(java.lang.String)
com.spikeapi.network.request.BMIValue: java.lang.String component1()
androidx.datastore.preferences.protobuf.ByteString$BoundedByteString: java.lang.Object writeReplace()
com.moengage.pushbase.internal.MoEPushWorker: void handleNotificationCleared(android.os.Bundle,com.moengage.core.internal.model.SdkInstance)
com.spikeapi.network.response.BreathingIntradayData: com.spikeapi.network.response.BreathingIntradayData copy(java.lang.String,java.lang.Integer)
com.spikeapi.network.request.TotalCaloriesBurned: TotalCaloriesBurned(com.spikeapi.network.request.TotalCaloriesSummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.spikeapi.network.request.CaloriesRawData: com.spikeapi.network.request.CaloriesRawData copy(java.lang.String,java.lang.String,com.spikeapi.network.request.TotalCaloriesBurned,com.spikeapi.network.request.ActiveCaloriesBurned)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy[] values()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.window.layout.WindowMetricsCalculator: void reset()
com.spikeapi.network.response.BreathingIntradayData: int hashCode()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long component9()
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle setBigContentTitle(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
com.spikeapi.SpikeExceptions$SpikeException: SpikeExceptions$SpikeException(java.lang.String)
com.moe.pushlibrary.activities.MoEActivity$onCreate$2: java.lang.String invoke()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setUserAttributeLocation(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
com.spikeapi.network.request.GlucoseRawData: com.spikeapi.network.request.GlucoseRawData copy(java.lang.String,java.lang.String,com.spikeapi.network.request.GlucoseSummary,java.util.List)
com.moengage.inapp.internal.model.enums.TemplateAlignment: com.moengage.inapp.internal.model.enums.TemplateAlignment[] values()
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double component6()
com.spikeapi.network.response.DistanceResponseData: java.util.List component2()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.spikeapi.network.request.GlucoseRawData: com.spikeapi.network.request.GlucoseSummary getSummary()
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.String getDataType()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
com.spikeapi.network.response.HrZone: java.lang.Double component1()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
androidx.health.platform.client.proto.WireFormat$FieldType: androidx.health.platform.client.proto.WireFormat$FieldType[] values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation: kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation valueOf(java.lang.String)
com.spikeapi.network.request.SkinTemperatureValue: SkinTemperatureValue()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.String toString()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.fragment.app.Fragment: void onDestroyView()
com.spikeapi.network.request.GlucoseRawData: GlucoseRawData()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.spikeapi.network.response.WaterPercentageData: boolean equals(java.lang.Object)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getMaxHr()
com.yalantis.ucrop.view.CropImageView: float getTargetAspectRatio()
com.spikeapi.network.request.SleepSummary: java.lang.Long getLight()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.crypto.tink.shaded.protobuf.FieldType: com.google.crypto.tink.shaded.protobuf.FieldType valueOf(java.lang.String)
com.spikeapi.network.response.StepsResponseData: java.lang.String toString()
com.spikeapi.network.request.MuscleMassValue: java.lang.String toString()
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: int hashCode()
kotlin.Metadata: int xi()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.webkit.WebViewClientCompat: WebViewClientCompat()
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.Height getHeight()
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: void setMiddleLineColor(int)
com.spikeapi.network.response.Sample: java.lang.Double component10()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.spikeapi.network.request.WaterPercentageStats: WaterPercentageStats(java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.yalantis.ucrop.view.OverlayView: com.yalantis.ucrop.callback.OverlayViewChangeListener getOverlayViewChangeListener()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component23()
com.spikeapi.network.response.SpikeResponse: boolean equals(java.lang.Object)
com.spikeapi.model.SpikeDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
com.spikeapi.network.response.OxygenSaturationIntradayData: java.lang.String toString()
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.spikeapi.SpikeConnection: java.lang.Object extractAndPostData(com.spikeapi.model.SpikeDataType,java.time.OffsetDateTime,java.time.OffsetDateTime,kotlin.coroutines.Continuation)
kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind: kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType: kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType[] values()
com.spikeapi.network.response.SpikeResponse: SpikeResponse(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.util.List)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.facebook.appevents.cloudbridge.ConversionsAPIUserAndAppDataField: com.facebook.appevents.cloudbridge.ConversionsAPIUserAndAppDataField valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.renderer.PropertyAccessorRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.PropertyAccessorRenderingPolicy[] values()
com.spikeapi.network.response.TemperatureData: int hashCode()
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassKind: kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassKind valueOf(java.lang.String)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double component5()
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax valueOf(java.lang.String)
com.spikeapi.network.request.TotalCaloriesBurned: com.spikeapi.network.request.TotalCaloriesBurned copy(com.spikeapi.network.request.TotalCaloriesSummary,java.util.List)
com.google.firebase.sessions.api.SessionSubscriber$Name: com.google.firebase.sessions.api.SessionSubscriber$Name valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.spikeapi.network.response.DistanceResponseData: com.spikeapi.network.response.DistanceResponseData copy(java.lang.String,java.util.List,java.lang.String,java.lang.Integer)
com.google.firebase.sessions.DataCollectionState: com.google.firebase.sessions.DataCollectionState[] values()
com.spikeapi.network.response.BMIData: java.lang.String toString()
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double component1()
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
com.spikeapi.network.request.MuscleMass: com.spikeapi.network.request.MuscleMassStats component1()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.spikeapi.network.response.Sample: java.lang.Object getBikeCadenceRpm()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
com.spikeapi.network.request.Lap: java.lang.Integer component2()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getSedentaryMinutes()
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.MutabilityQualifier[] values()
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double getMinHeartRate()
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.moengage.core.internal.model.cryptography.CryptographyState: com.moengage.core.internal.model.cryptography.CryptographyState valueOf(java.lang.String)
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher prepareCallInternal(androidx.activity.result.contract.ActivityResultContract,androidx.arch.core.util.Function,androidx.activity.result.ActivityResultCallback)
kotlin.reflect.jvm.internal.impl.types.Variance: kotlin.reflect.jvm.internal.impl.types.Variance valueOf(java.lang.String)
com.spikeapi.network.response.TimeSeriesData: java.lang.String component1()
com.moengage.inapp.internal.model.enums.ViewType: com.moengage.inapp.internal.model.enums.ViewType valueOf(java.lang.String)
androidx.fragment.app.DialogFragment: boolean access$200(androidx.fragment.app.DialogFragment)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.activity.ComponentActivity: void removeOnNewIntentListener(androidx.core.util.Consumer)
com.spikeapi.network.request.GlucoseSummary: java.lang.String toString()
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.Double getAvg()
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.spikeapi.network.response.BloodPressureData: java.lang.Integer getDiastolicBloodPressure()
com.spikeapi.network.request.BMIStats: java.lang.Integer component2()
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy valueOf(java.lang.String)
androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
com.spikeapi.network.request.MuscleMassValue: MuscleMassValue(java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf)
com.spikeapi.network.request.BMI: int hashCode()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.spikeapi.network.request.TotalCaloriesRecord: java.lang.String getEndTime()
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder valueOf(java.lang.String)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
com.spikeapi.network.request.HeartRateSummary: java.lang.Integer component4()
com.spikeapi.model.SpikeWebhookJob: com.spikeapi.model.SpikeDataType getDataType()
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
com.spikeapi.network.request.RestingHeartRate: java.util.List getValues()
com.spikeapi.network.request.Lap: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.spikeapi.network.request.BodyFatPercentageValue: java.lang.String getTime()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.spikeapi.network.response.CaloriesResponseData: java.lang.String getSource()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.spikeapi.network.request.Height: com.spikeapi.network.request.Height copy$default(com.spikeapi.network.request.Height,com.spikeapi.network.request.HeightStats,java.util.List,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Integer getCount()
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
com.spikeapi.model.SpikeBodyDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.network.request.RestingHeartRate: RestingHeartRate()
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
kotlin.reflect.jvm.internal.impl.descriptors.ClassKind: kotlin.reflect.jvm.internal.impl.descriptors.ClassKind[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener getImeVisibleListener()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.spikeapi.network.request.HeartRateValue: HeartRateValue(java.lang.String,java.lang.String,java.lang.Long)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Boolean component27()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getProviderActivityId()
androidx.health.platform.client.proto.GeneratedMessageLite$MethodToInvoke: androidx.health.platform.client.proto.GeneratedMessageLite$MethodToInvoke[] values()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double component3()
com.spikeapi.network.response.SleepResponseData: java.lang.String toString()
androidx.activity.ComponentActivity: void invalidateMenu()
com.spikeapi.network.request.OxygenSaturationSummary: int hashCode()
androidx.health.platform.client.proto.PermissionProto$AccessType: androidx.health.platform.client.proto.PermissionProto$AccessType[] values()
com.spikeapi.network.request.SessionsRequest: com.spikeapi.network.request.SessionsRequest copy$default(com.spikeapi.network.request.SessionsRequest,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double getAvgSpeed()
com.spikeapi.network.request.DistanceRawData: com.spikeapi.network.request.DistanceSummary component3()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
com.spikeapi.network.response.BloodPressureData: java.lang.String component1()
com.google.crypto.tink.shaded.protobuf.ByteString$BoundedByteString: java.lang.Object writeReplace()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Boolean getManual()
com.spikeapi.network.request.BloodPressure: java.util.List component2()
com.spikeapi.network.request.StepsRawData: java.lang.String getTimeZoneOffset()
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
androidx.health.platform.client.proto.WireFormat$FieldType: androidx.health.platform.client.proto.WireFormat$FieldType valueOf(java.lang.String)
com.spikeapi.network.response.WaterPercentageData: WaterPercentageData(java.lang.Double,java.util.List)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase[] values()
com.spikeapi.network.request.StepsRecord: java.lang.String component1()
com.facebook.login.LoginClient$Result$Code: com.facebook.login.LoginClient$Result$Code valueOf(java.lang.String)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
androidx.fragment.app.Fragment: android.view.View getFocusedView()
com.spikeapi.network.response.Sample: java.lang.Integer getTimerDuration()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.moengage.inapp.internal.model.enums.UserInputType: com.moengage.inapp.internal.model.enums.UserInputType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.spikeapi.network.request.BoneMass: int hashCode()
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.HeightData getHeightCm()
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long component2()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance valueOf(java.lang.String)
com.spikeapi.network.response.IntradayDistanceData: com.spikeapi.network.response.IntradayDistanceData copy(java.lang.String,java.lang.Integer)
com.spikeapi.network.response.SpikeResponseData$DefaultImpls: void getDataType$annotations()
com.spikeapi.network.response.ActivitiesStreamResponseData: int hashCode()
com.spikeapi.network.response.SessionsResponse: java.lang.String getApplicationId()
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.spikeapi.network.response.MuscleMassData: com.spikeapi.network.response.MuscleMassData copy$default(com.spikeapi.network.response.MuscleMassData,java.lang.Double,java.util.List,int,java.lang.Object)
androidx.health.platform.client.proto.ProtoSyntax: androidx.health.platform.client.proto.ProtoSyntax[] values()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture: com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture[] values()
com.spikeapi.network.request.MuscleMass: MuscleMass(com.spikeapi.network.request.MuscleMassStats,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.DistanceRecord: DistanceRecord(java.lang.String,java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.moengage.widgets.MoERatingBar: void init()
com.spikeapi.network.response.SpikeResponse: java.lang.String component5()
com.moengage.pushbase.internal.fragments.LaterDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.spikeapi.network.request.CoreTemperatureValue: CoreTemperatureValue(java.lang.String,java.lang.Double)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
kotlin.random.Random$Default: java.lang.Object writeReplace()
kotlin.reflect.jvm.internal.impl.builtins.UnsignedType: kotlin.reflect.jvm.internal.impl.builtins.UnsignedType valueOf(java.lang.String)
com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior: com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior[] values()
com.spikeapi.network.response.StepsResponseData: java.lang.String component3()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzcf)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.spikeapi.network.request.WeightValue: java.lang.Double component2()
com.vernost.BounzAppUAT.MainActivity: MainActivity()
com.moengage.core.model.AppStatus: com.moengage.core.model.AppStatus[] values()
com.spikeapi.SpikeExceptions: SpikeExceptions(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.spikeapi.network.response.BodyFatPercentageData: java.lang.String toString()
com.spikeapi.network.response.HrZone: com.spikeapi.network.response.HrZone copy$default(com.spikeapi.network.response.HrZone,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.String,int,java.lang.Object)
kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType: kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType[] values()
com.spikeapi.network.request.SleepSummary: SleepSummary()
com.spikeapi.network.request.HeartRateSummary: java.lang.Long getMin()
com.spikeapi.network.request.TotalCaloriesRecord: boolean equals(java.lang.Object)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.spikeapi.network.request.HeightValue: HeightValue(java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy[] values()
com.spikeapi.network.response.TimeSeriesData: int hashCode()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
org.chromium.support_lib_boundary.WebAuthnCallbackBoundaryInterface: void onResult(int,android.content.Intent)
androidx.webkit.internal.ApiHelperForP: android.os.Looper getWebViewLooper(android.webkit.WebView)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
androidx.core.app.ActivityCompat$Api21Impl: void setExitSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setPriority(android.app.Notification$Builder,int)
androidx.cardview.widget.CardView: int getContentPaddingRight()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.plugins.imagepicker.Messages$SourceCamera: io.flutter.plugins.imagepicker.Messages$SourceCamera[] values()
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.spikeapi.network.response.DistanceResponseData: java.lang.Integer getValue()
androidx.fragment.app.DialogFragment: boolean onHasView()
com.spikeapi.network.response.OxygenSaturationIntradayData: java.lang.String getTime()
com.spikeapi.ConnectionState: java.lang.Boolean getEndUserCreated()
com.spikeapi.network.response.BreathingIntradayData: boolean equals(java.lang.Object)
com.moengage.core.internal.security.SecurityHandler: com.moengage.core.internal.model.cryptography.CryptographyResponse cryptoText(com.moengage.core.internal.model.cryptography.CryptographyRequest)
com.spikeapi.network.response.SpikeHRVIntradayValueData: boolean equals(java.lang.Object)
com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType valueOf(java.lang.String)
com.spikeapi.network.request.BoneMassStats: java.lang.Integer getCount()
com.spikeapi.network.request.ActivitiesSummaryRawData: com.spikeapi.network.request.ActivitiesSummaryRawData copy$default(com.spikeapi.network.request.ActivitiesSummaryRawData,java.lang.String,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,int,java.lang.Object)
com.spikeapi.network.response.GlucoseResponseData: java.lang.Double component2()
com.spikeapi.network.request.Height: com.spikeapi.network.request.HeightStats getStats()
com.spikeapi.network.response.SpikeSourceWebhook: com.spikeapi.network.response.SpikeSourceWebhook copy(java.lang.String,boolean,java.lang.String)
io.flutter.plugins.firebase.dynamiclinks.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getLowStressDuration()
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
com.spikeapi.network.request.HeartRate: java.util.List getValues()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.fragment.app.Fragment: void registerOnPreAttachListener(androidx.fragment.app.Fragment$OnPreAttachedListener)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
com.spikeapi.network.request.TotalCaloriesSummary: TotalCaloriesSummary(java.lang.Double,java.lang.Integer,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.CoreTemperatureValue: java.lang.String getTime()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.spikeapi.network.request.BMI: BMI(com.spikeapi.network.request.BMIStats,java.util.List)
com.spikeapi.network.response.SpikeResponse: java.lang.String getCollectedAt()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
com.google.android.gms.location.LocationRequest: LocationRequest()
androidx.health.platform.client.impl.data.SharedMemory27Impl: java.lang.Object parseParcelUsingSharedMemory(android.os.Parcel,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentActivity: void onStart()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component19()
androidx.core.os.TraceCompat$Api18Impl: void endSection()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue[] values()
com.spikeapi.network.response.Sample: java.lang.Double getElevation()
com.spikeapi.network.response.SpikeHRIntradayData: int hashCode()
com.spikeapi.network.request.StepsRecord: boolean equals(java.lang.Object)
dev.spike.flutter_health_connect.model.SpikeOperationResult: void setSuccess(boolean)
com.spikeapi.network.response.Level: java.lang.Integer getSeconds()
androidx.window.core.Version$Companion: Version$Companion()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility[] values()
com.spikeapi.network.request.BMIStats: BMIStats()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.util.List getSources()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.spikeapi.network.request.CoreTemperature: boolean equals(java.lang.Object)
com.spikeapi.network.response.CaloriesResponseData: java.lang.String getDate()
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
androidx.fragment.app.Fragment: boolean isResumed()
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType valueOf(java.lang.String)
com.yalantis.ucrop.view.TransformImageView: float getCurrentAngle()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
com.spikeapi.network.request.CaloriesRawData: java.lang.String getDate()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
com.spikeapi.network.request.WeightStats: java.lang.Integer component2()
com.spikeapi.network.request.BloodPressureValue: com.spikeapi.network.request.BloodPressureValue copy$default(com.spikeapi.network.request.BloodPressureValue,java.lang.String,java.lang.Double,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long component11()
com.moe.pushlibrary.activities.MoEActivity$onCreate$4: MoEActivity$onCreate$4(boolean,com.moe.pushlibrary.activities.MoEActivity)
com.spikeapi.network.request.TotalCaloriesBurned: com.spikeapi.network.request.TotalCaloriesSummary getSummary()
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component3()
com.moengage.pushbase.internal.fragments.LaterDialogFragment: java.lang.String lambda$onCreateDialog$1()
com.spikeapi.network.response.IntradayGlucoseData: java.lang.String getStatus()
com.spikeapi.network.response.HeartRateResponseData: java.lang.String component10()
com.spikeapi.network.request.DistanceRecord: int hashCode()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.fragment.app.Fragment: int getTargetRequestCode()
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.String component1()
com.moengage.core.internal.push.base.PushBaseHandler: void onAppOpen(android.content.Context)
com.yalantis.ucrop.view.OverlayView: void setCropGridRowCount(int)
com.yalantis.ucrop.view.UCropView: com.yalantis.ucrop.view.GestureCropImageView getCropImageView()
com.spikeapi.network.request.SpikeRequest: java.lang.String component5()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getDropDataProvider()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component9()
com.spikeapi.network.response.HeartRateResponseData: int hashCode()
com.spikeapi.network.response.IntradayGlucoseData: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
com.spikeapi.network.request.BreathingRawData: boolean equals(java.lang.Object)
androidx.security.crypto.MasterKey$Builder$Api23Impl$Api28Impl: void setIsStrongBoxBacked(android.security.keystore.KeyGenParameterSpec$Builder)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.spikeapi.network.request.BMIStats: boolean equals(java.lang.Object)
com.spikeapi.network.request.GlucoseSummary: java.lang.Integer component2()
com.google.zxing.oned.Code128Writer$CType: com.google.zxing.oned.Code128Writer$CType[] values()
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
com.moengage.pushbase.internal.fragments.DatePickerFragment: void onDateSet(android.widget.DatePicker,int,int,int)
com.spikeapi.network.request.HeartRateVariabilityValue: HeartRateVariabilityValue(java.lang.String,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.Double getMax()
com.yalantis.ucrop.view.OverlayView: void setShowCropGrid(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.spikeapi.network.response.StepsResponseData: boolean equals(java.lang.Object)
com.moengage.inapp.model.enums.NavigationType: com.moengage.inapp.model.enums.NavigationType valueOf(java.lang.String)
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double component4()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.spikeapi.network.response.BodyFatPercentageData: com.spikeapi.network.response.BodyFatPercentageData copy(java.lang.Double,java.util.List)
com.spikeapi.network.request.WeightStats: java.lang.Integer getCount()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.fragment.app.DialogFragment: void onStart()
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.String toString()
com.spikeapi.network.request.Level: boolean equals(java.lang.Object)
com.spikeapi.network.request.BloodPressure: com.spikeapi.network.request.BloodPressureStats getStats()
com.spikeapi.network.response.OxygenSaturationIntradayData: OxygenSaturationIntradayData(java.lang.String,java.lang.Double)
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.String component2()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String component1()
com.spikeapi.network.response.HeightData: HeightData(java.lang.Double,java.util.List)
com.squareup.moshi.LinkedHashTreeMap: java.lang.Object writeReplace()
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getLow()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.moengage.inapp.internal.model.enums.ViewType: com.moengage.inapp.internal.model.enums.ViewType[] values()
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.moengage.inbox.core.model.enums.MediaType: com.moengage.inbox.core.model.enums.MediaType[] values()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
com.spikeapi.network.request.BoneMassStats: boolean equals(java.lang.Object)
com.spikeapi.network.request.TotalCaloriesRecord: TotalCaloriesRecord(java.lang.String,java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.BodyFatPercentageStats: java.lang.Double component1()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.flutter.plugins.imagepicker.Messages$SourceType: io.flutter.plugins.imagepicker.Messages$SourceType[] values()
com.spikeapi.network.request.StepsRawData: java.util.List component4()
com.spikeapi.network.response.HrZone: java.lang.Double component2()
com.facebook.appevents.cloudbridge.AppEventsConversionsAPITransformer$ValueTransformationType: com.facebook.appevents.cloudbridge.AppEventsConversionsAPITransformer$ValueTransformationType[] values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean isAlgorithmicDarkeningAllowed()
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.spikeapi.network.response.SleepResponseData: SleepResponseData(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Integer,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.List)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: void setScrollingListener(com.yalantis.ucrop.view.widget.HorizontalProgressWheelView$ScrollingListener)
com.spikeapi.network.request.WaterPercentage: java.lang.String toString()
com.spikeapi.network.response.BodyFatPercentageData: java.lang.Double component1()
com.spikeapi.network.request.Height: int hashCode()
com.spikeapi.model.SpikeHeartRateDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
com.spikeapi.network.request.WeightStats: java.lang.String toString()
com.spikeapi.network.request.BreathingSummary: java.lang.Double getAvg()
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
com.spikeapi.network.request.TotalCaloriesRecord: java.lang.String getStartTime()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long)
com.spikeapi.network.request.CoreTemperatureValue: com.spikeapi.network.request.CoreTemperatureValue copy$default(com.spikeapi.network.request.CoreTemperatureValue,java.lang.String,java.lang.Double,int,java.lang.Object)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.webkit.internal.ApiHelperForP: java.lang.ClassLoader getWebViewClassLoader()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.spikeapi.network.request.WaterPercentageValue: WaterPercentageValue(java.lang.String,java.lang.Double)
com.spikeapi.network.response.TimeSeriesData: java.lang.Double component2()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getProviderActivityTypeId()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
com.moengage.pushbase.activities.PushClickDialogTracker: java.lang.String access$getTag$p(com.moengage.pushbase.activities.PushClickDialogTracker)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getProviderUserId()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double getTotalElevationGain()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
com.spikeapi.network.response.BreathingResponseData: java.lang.Integer component1()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
kotlin.coroutines.CombinedContext$Serialized: java.lang.Object readResolve()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.spikeapi.network.request.TotalCaloriesBurned: java.lang.String toString()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
com.spikeapi.network.response.CaloriesResponseData: boolean equals(java.lang.Object)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] values()
com.spikeapi.network.response.BoneMassData: com.spikeapi.network.response.BoneMassData copy(java.lang.Double,java.util.List)
com.moengage.pushbase.activities.PushClickDialogTracker: void onTimeSelected(int,int)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List component35()
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.spikeapi.network.request.ActiveCaloriesBurned: com.spikeapi.network.request.ActiveCaloriesSummary component1()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long getMinHr()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor createFullyDrawnExecutor()
com.spikeapi.network.request.SpikeRequest: SpikeRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.fragment.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
com.spikeapi.network.request.CaloriesRawData: com.spikeapi.network.request.ActiveCaloriesBurned component4()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String getMap()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
com.spikeapi.network.response.BodyData: int hashCode()
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
androidx.health.connect.client.units.Length$Type: androidx.health.connect.client.units.Length$Type[] values()
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax[] values()
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Double getAvg()
com.spikeapi.network.request.BMIStats: java.lang.Double getAvg()
com.spikeapi.network.request.BoneMassStats: BoneMassStats(java.lang.Double,java.lang.Integer)
com.spikeapi.network.request.BodyFatPercentageValue: int hashCode()
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
kotlin.reflect.jvm.internal.impl.types.model.CaptureStatus: kotlin.reflect.jvm.internal.impl.types.model.CaptureStatus valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.google.firebase.sessions.api.SessionSubscriber$Name: com.google.firebase.sessions.api.SessionSubscriber$Name[] values()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void navigateToNotificationSettings()
com.spikeapi.network.request.BodyFatPercentage: com.spikeapi.network.request.BodyFatPercentage copy(com.spikeapi.network.request.BodyFatPercentageStats,java.util.List)
com.spikeapi.network.response.HrZone: boolean equals(java.lang.Object)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.spikeapi.SpikeExceptions$SpikeServerException: SpikeExceptions$SpikeServerException()
com.spikeapi.network.request.CaloriesRawData: com.spikeapi.network.request.TotalCaloriesBurned component3()
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.spikeapi.network.response.SleepResponseData: java.util.List component21()
com.spikeapi.network.request.StepsSummary: java.lang.Integer component2()
com.spikeapi.network.request.SpikeRequest: java.lang.String getOs()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String component4()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
com.spikeapi.network.request.BloodPressureStats: com.spikeapi.network.request.BloodPressureStats copy$default(com.spikeapi.network.request.BloodPressureStats,java.lang.Double,java.lang.Double,java.lang.Integer,int,java.lang.Object)
androidx.activity.ComponentActivity: void addOnNewIntentListener(androidx.core.util.Consumer)
com.spikeapi.network.response.BodyFatPercentageData: int hashCode()
com.spikeapi.network.request.BreathingSummary: com.spikeapi.network.request.BreathingSummary copy(java.lang.Double,java.lang.Integer,java.lang.Double)
com.spikeapi.network.request.BloodPressureValue: java.lang.Double component3()
com.spikeapi.SpikeConnection: SpikeConnection(android.content.Context,a.b,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
com.spikeapi.network.response.Level: java.lang.String getDateTime()
com.spikeapi.network.response.BMIData: int hashCode()
com.spikeapi.model.SpikeDistanceDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.network.request.BreathingRecord: com.spikeapi.network.request.BreathingRecord copy(java.lang.String,java.lang.String,java.lang.Double)
androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)
com.spikeapi.network.response.SleepResponseData: java.lang.String getBedtimeEnd()
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: int getType()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getStressDuration()
com.spikeapi.network.response.IntradayCaloriesData: com.spikeapi.network.response.IntradayCaloriesData copy(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Double)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.facebook.login.CodeChallengeMethod: com.facebook.login.CodeChallengeMethod valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String component2()
androidx.fragment.app.Fragment: boolean getRetainInstance()
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
androidx.fragment.app.Fragment: void performStart()
com.spikeapi.network.request.GlucoseSummary: java.lang.Double component1()
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.webkit.internal.ApiHelperForOMR1: void startSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String toString()
com.spikeapi.network.request.SpikeRequest: java.lang.String component2()
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.Double component5()
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.spikeapi.network.response.WeightData: java.lang.Double getValue()
com.spikeapi.network.response.HrZone: java.lang.String component4()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
com.spikeapi.network.request.DistanceSummary: int hashCode()
com.yalantis.ucrop.view.OverlayView: void setShowCropFrame(boolean)
com.spikeapi.network.request.GlucoseRecord: java.lang.String toString()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
androidx.window.core.Bounds: boolean equals(java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.spikeapi.network.request.BloodPressureValue: com.spikeapi.network.request.BloodPressureValue copy(java.lang.String,java.lang.Double,java.lang.Double)
com.spikeapi.network.response.BreathingResponseData: java.lang.String toString()
com.spikeapi.network.response.StepsResponseData: com.spikeapi.network.response.StepsResponseData copy$default(com.spikeapi.network.response.StepsResponseData,java.lang.String,java.util.List,java.lang.String,java.lang.Integer,int,java.lang.Object)
com.spikeapi.model.SpikeWebhookJob: com.spikeapi.model.SpikeWebhookJob copy(java.lang.String,com.spikeapi.model.SpikeDataType,long,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.OffsetDateTime)
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
kotlin.coroutines.CombinedContext: java.lang.Object writeReplace()
com.spikeapi.network.request.DistanceRecord: DistanceRecord(java.lang.String,java.lang.String,java.lang.Double)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
com.moe.pushlibrary.activities.MoEActivity$onCreate$3: java.lang.String invoke()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
com.spikeapi.network.response.CaloriesResponseData: java.lang.Integer getValue()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
com.spikeapi.network.response.IntradayCaloriesData: java.lang.String getTime()
com.spikeapi.network.request.SleepRawData: java.util.List component5()
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.health.platform.client.proto.Writer$FieldOrder: androidx.health.platform.client.proto.Writer$FieldOrder[] values()
kotlin.reflect.jvm.internal.impl.load.java.ReportLevel: kotlin.reflect.jvm.internal.impl.load.java.ReportLevel valueOf(java.lang.String)
com.spikeapi.network.response.TemperatureTimeSeriesData: boolean equals(java.lang.Object)
com.spikeapi.network.request.CoreTemperatureValue: java.lang.String toString()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type valueOf(java.lang.String)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.String component1()
com.spikeapi.network.request.StepsSummary: com.spikeapi.network.request.StepsSummary copy$default(com.spikeapi.network.request.StepsSummary,java.lang.Long,java.lang.Integer,java.lang.Long,int,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.spikeapi.network.response.MuscleMassData: int hashCode()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
com.spikeapi.network.request.WeightValue: com.spikeapi.network.request.WeightValue copy$default(com.spikeapi.network.request.WeightValue,java.lang.String,java.lang.Double,int,java.lang.Object)
com.moengage.inapp.internal.model.enums.ClosePosition: com.moengage.inapp.internal.model.enums.ClosePosition valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.facebook.appevents.AppEventsLogger$FlushBehavior: com.facebook.appevents.AppEventsLogger$FlushBehavior valueOf(java.lang.String)
com.spikeapi.network.request.HeartRateValue: java.lang.Long component3()
com.spikeapi.network.response.SpikeSource: int hashCode()
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType[] values()
com.spikeapi.network.request.SessionsRequest: java.lang.String component2()
com.spikeapi.network.response.ActivitiesStreamResponseData: com.spikeapi.network.response.ActivitiesStreamResponseData copy(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Integer,java.lang.Boolean,java.lang.Integer,java.lang.Double,java.lang.Double,java.util.List,java.util.List,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.Boolean,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Integer,java.util.List)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long component12()
kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue: kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue valueOf(java.lang.String)
com.spikeapi.network.response.GlucoseResponseData: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component11()
com.spikeapi.network.request.TotalCaloriesRecord: com.spikeapi.network.request.TotalCaloriesRecord copy$default(com.spikeapi.network.request.TotalCaloriesRecord,java.lang.String,java.lang.String,java.lang.Double,int,java.lang.Object)
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: java.lang.String component2()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
com.spikeapi.network.request.BoneMassStats: java.lang.Integer component2()
com.moengage.pushbase.internal.fragments.DatePickerFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.window.core.Bounds: int getHeight()
com.spikeapi.network.request.HeartRateValue: java.lang.String getEndTime()
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.MuscleMassData component6()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.spikeapi.network.request.Level: java.lang.String component1()
com.spikeapi.network.request.TotalCaloriesSummary: java.lang.String toString()
com.google.firebase.sessions.LogEnvironment: com.google.firebase.sessions.LogEnvironment valueOf(java.lang.String)
com.spikeapi.network.request.WaterPercentage: java.util.List component2()
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BoneMassData getBoneMassG()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind[] values()
com.spikeapi.network.request.CaloriesRawData: boolean equals(java.lang.Object)
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface: java.util.List getCookieInfo(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.spikeapi.network.response.SleepResponseData: java.lang.String getSource()
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
com.facebook.appevents.PersistedEvents: java.lang.Object writeReplace()
com.spikeapi.network.request.HeartRateSummary: java.lang.Long getMax()
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.TemperatureData copy$default(com.spikeapi.network.response.TemperatureData,com.spikeapi.network.response.DetailedTemperatureData,com.spikeapi.network.response.DetailedTemperatureData,com.spikeapi.network.response.DetailedTemperatureData,com.spikeapi.network.response.DiffFromBaselineTemperatureData,int,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
com.spikeapi.healthconnect.HealthConnectAvailability: com.spikeapi.healthconnect.HealthConnectAvailability[] values()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.moengage.core.internal.push.PushManager: PushManager()
com.spikeapi.network.request.RestingHeartRateValue: RestingHeartRateValue()
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.moengage.core.internal.model.PushTokenType: com.moengage.core.internal.model.PushTokenType[] values()
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
com.spikeapi.network.response.DetailedTemperatureData: java.lang.Double component1()
com.spikeapi.network.request.BodyFatPercentageStats: com.spikeapi.network.request.BodyFatPercentageStats copy$default(com.spikeapi.network.request.BodyFatPercentageStats,java.lang.Double,java.lang.Integer,int,java.lang.Object)
com.spikeapi.network.request.CoreTemperatureValue: CoreTemperatureValue(java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.spikeapi.network.request.Level: java.lang.String getStartTime()
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.spikeapi.network.request.RestingHeartRateValue: java.lang.Long component3()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.spikeapi.network.request.SleepSummary: java.lang.Long getDeep()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds)
kotlin.collections.builders.MapBuilder: java.lang.Object writeReplace()
com.moengage.core.internal.push.mipush.MiPushHandler: void onAppOpen(android.content.Context)
com.spikeapi.network.request.SkinTemperature: com.spikeapi.network.request.SkinTemperatureStats component1()
com.spikeapi.network.request.OxygenSaturationRawData: java.lang.String getDate()
com.spikeapi.network.request.SleepSummary: java.lang.Float component11()
com.spikeapi.network.request.Lap: Lap(java.lang.Integer,java.lang.Integer)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.spikeapi.network.response.Level: java.lang.String getLevel()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
com.spikeapi.network.response.IntradayGlucoseData: IntradayGlucoseData(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.String,java.lang.String,java.lang.Double)
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
com.spikeapi.network.request.HeartRateValue: java.lang.String component1()
com.spikeapi.network.request.ActiveCaloriesRecord: com.spikeapi.network.request.ActiveCaloriesRecord copy$default(com.spikeapi.network.request.ActiveCaloriesRecord,java.lang.String,java.lang.String,java.lang.Double,java.lang.Integer,java.lang.Double,int,java.lang.Object)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String toString()
com.spikeapi.network.request.HeartRateValue: java.lang.String component2()
com.spikeapi.SpikeLogger: void error(java.lang.String)
dev.spike.flutter_health_connect.model.SpikeLoggingData: void setMessage(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
com.spikeapi.network.request.StepsRawData: StepsRawData()
androidx.core.app.ActivityCompat$Api32Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.moengage.core.model.AppStatus: com.moengage.core.model.AppStatus valueOf(java.lang.String)
androidx.activity.ComponentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.spikeapi.network.request.HeartRateVariability: java.util.List getValues()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getAwake()
com.spikeapi.network.request.SpikeRequest: java.lang.String getCollectedAt()
com.spikeapi.network.response.TemperatureTimeSeriesData: java.lang.String toString()
com.yalantis.ucrop.view.OverlayView: android.graphics.RectF getCropViewRect()
androidx.fragment.app.FragmentActivity: void onPostResume()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion$Mode: kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion$Mode[] values()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.spikeapi.network.request.ActiveCaloriesSummary: ActiveCaloriesSummary()
com.yalantis.ucrop.view.OverlayView: void setCropFrameColor(int)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.Weight getWeight()
kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result: kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result[] values()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.spikeapi.network.request.BoneMassStats: com.spikeapi.network.request.BoneMassStats copy$default(com.spikeapi.network.request.BoneMassStats,java.lang.Double,java.lang.Integer,int,java.lang.Object)
androidx.fragment.app.DialogFragment: void setStyle(int,int)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.response.HeartRateResponseData: java.util.List getIntradayHRV()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
com.facebook.internal.FacebookInitProvider: FacebookInitProvider()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
kotlin.reflect.jvm.internal.impl.name.State: kotlin.reflect.jvm.internal.impl.name.State[] values()
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar: java.util.List getComponents()
com.spikeapi.network.request.HeartRateVariability: HeartRateVariability()
kotlin.reflect.jvm.internal.impl.load.java.AnnotationQualifierApplicabilityType: kotlin.reflect.jvm.internal.impl.load.java.AnnotationQualifierApplicabilityType valueOf(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component16()
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String component2()
com.spikeapi.model.SpikeBodyData: SpikeBodyData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
com.spikeapi.network.response.IntradayDistanceData: java.lang.String component1()
androidx.fragment.app.Fragment: boolean isVisible()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.spikeapi.network.response.StepsResponseData: java.lang.String getDate()
com.spikeapi.network.request.BodyFatPercentageValue: com.spikeapi.network.request.BodyFatPercentageValue copy$default(com.spikeapi.network.request.BodyFatPercentageValue,java.lang.String,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.request.ActiveCaloriesBurned: com.spikeapi.network.request.ActiveCaloriesBurned copy(com.spikeapi.network.request.ActiveCaloriesSummary,java.util.List)
com.moengage.pushbase.activities.PushTracker: void onCreate(android.os.Bundle)
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BodyData copy(com.spikeapi.network.response.WeightData,com.spikeapi.network.response.HeightData,com.spikeapi.network.response.BMIData,com.spikeapi.network.response.BodyFatPercentageData,com.spikeapi.network.response.BoneMassData,com.spikeapi.network.response.MuscleMassData,com.spikeapi.network.response.WaterPercentageData)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String getEndUserId()
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType: com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType valueOf(java.lang.String)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double getCaloriesTotal()
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection valueOf(java.lang.String)
com.google.android.gms.common.api.internal.zzd: zzd()
com.google.firebase.sessions.LogEnvironment: com.google.firebase.sessions.LogEnvironment[] values()
com.spikeapi.network.response.OxygenSaturationIntradayData: java.lang.String component1()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void openDeepLink(java.lang.String,java.lang.String)
com.spikeapi.network.request.WaterPercentageValue: java.lang.Double component2()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
com.spikeapi.network.request.BodyFatPercentage: java.lang.String toString()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.spikeapi.network.request.HeightStats: int hashCode()
com.spikeapi.network.response.HeightData: int hashCode()
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.spikeapi.network.response.Sample: java.lang.Double getSpeed()
kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue: kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$NotValue[] values()
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component15()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
com.spikeapi.network.request.WeightStats: WeightStats(java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] values()
com.spikeapi.ConnectionState: com.spikeapi.ConnectionState copy$default(com.spikeapi.ConnectionState,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,int,java.lang.Object)
androidx.activity.ComponentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
dev.spike.flutter_health_connect.model.SpikeOperationResult: int hashCode()
com.spikeapi.network.request.SpikeRequest: java.lang.String getOsVersion()
com.spikeapi.network.request.ActivitiesStreamRawData: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentActivity: void onLowMemory()
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.spikeapi.network.response.SpikeHRVIntradayValueData: SpikeHRVIntradayValueData(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
com.spikeapi.network.request.GlucoseRecord: java.lang.String getEndTime()
com.spikeapi.network.request.SkinTemperatureValue: com.spikeapi.network.request.SkinTemperatureValue copy$default(com.spikeapi.network.request.SkinTemperatureValue,java.lang.String,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.response.Sample: java.lang.Double getLongitudeInDegree()
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double component4()
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getAvgHrVariability()
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double getRestingHeartRate()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String getDataType()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double getTotalElevationLoss()
com.spikeapi.network.request.WaterPercentageStats: java.lang.Double getAvg()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
dev.spike.flutter_health_connect.model.SpikeLoggingData: void setEventName(java.lang.String)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BodyRawData copy(java.lang.String,com.spikeapi.network.request.Weight,com.spikeapi.network.request.Height,com.spikeapi.network.request.BMI,com.spikeapi.network.request.BodyFatPercentage,com.spikeapi.network.request.BoneMass,com.spikeapi.network.request.MuscleMass,com.spikeapi.network.request.WaterPercentage,com.spikeapi.network.request.SkinTemperature,com.spikeapi.network.request.CoreTemperature,com.spikeapi.network.request.BloodPressure)
com.spikeapi.network.request.ActiveCaloriesBurned: ActiveCaloriesBurned()
com.google.android.gms.measurement.internal.zzha: com.google.android.gms.measurement.internal.zzha[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.moengage.android.Constants: Constants()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component12()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getMediumStressDuration()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component6()
com.spikeapi.network.request.OxygenSaturationRawData: java.lang.String toString()
com.spikeapi.network.request.HeightValue: com.spikeapi.network.request.HeightValue copy(java.lang.String,java.lang.Double)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.spikeapi.network.response.OxygenSaturationIntradayData: java.lang.Double component2()
com.spikeapi.network.request.OxygenSaturationSummary: OxygenSaturationSummary(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
androidx.window.core.Version: int hashCode()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setBirthDate(java.lang.String)
com.spikeapi.network.request.SkinTemperatureStats: java.lang.Integer component2()
com.spikeapi.network.request.MuscleMass: MuscleMass(com.spikeapi.network.request.MuscleMassStats,java.util.List)
androidx.webkit.internal.ApiHelperForO: android.webkit.WebViewClient getWebViewClient(android.webkit.WebView)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinRetention[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.spikeapi.network.request.TotalCaloriesSummary: java.lang.Double component1()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setUsage(android.media.AudioAttributes$Builder,int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
com.spikeapi.network.response.StepsResponseData: int hashCode()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.spikeapi.network.request.BodyFatPercentageValue: BodyFatPercentageValue()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.spikeapi.network.request.Weight: com.spikeapi.network.request.Weight copy$default(com.spikeapi.network.request.Weight,com.spikeapi.network.request.WeightStats,java.util.List,int,java.lang.Object)
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
com.spikeapi.network.request.Height: com.spikeapi.network.request.HeightStats component1()
com.facebook.login.LoginFragment: LoginFragment()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.spikeapi.network.request.HeartRateRawData: java.lang.String getTimeZoneOffset()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
com.spikeapi.network.request.HeartRateRawData: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
okio.SegmentedByteString: java.lang.Object writeReplace()
com.google.gson.internal.LazilyParsedNumber: java.lang.Object writeReplace()
com.spikeapi.network.response.OxygenSaturationIntradayData: com.spikeapi.network.response.OxygenSaturationIntradayData copy$default(com.spikeapi.network.response.OxygenSaturationIntradayData,java.lang.String,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.request.SkinTemperatureStats: java.lang.Integer getCount()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
com.spikeapi.network.request.Weight: java.lang.String toString()
com.spikeapi.network.request.RestingHeartRate: java.util.List component2()
com.google.android.gms.common.api.PendingResult: PendingResult()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
com.spikeapi.network.request.BoneMassValue: BoneMassValue(java.lang.String,java.lang.Double)
com.moengage.pushbase.internal.fragments.TimePickerFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebViewClient(android.webkit.WebViewClient)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BMI getBmi()
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice: io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.spikeapi.network.response.BreathingResponseData: java.lang.String component2()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getSteps()
androidx.window.core.Version: boolean equals(java.lang.Object)
com.facebook.internal.CallbackManagerImpl$RequestCodeOffset: com.facebook.internal.CallbackManagerImpl$RequestCodeOffset valueOf(java.lang.String)
kotlin.collections.State: kotlin.collections.State valueOf(java.lang.String)
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
com.moengage.pushbase.internal.MoEPushReceiver: void onReceive(android.content.Context,android.content.Intent)
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
androidx.fragment.app.Fragment: boolean isRemoving()
com.spikeapi.network.response.BodyResponseData: java.lang.String toString()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.webkit.internal.ApiHelperForP: void setDataDirectorySuffix(java.lang.String)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
com.spikeapi.SpikeConnection: java.lang.Object hasHealthPermissionsGranted(kotlin.coroutines.Continuation)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
com.google.crypto.tink.proto.HashType: com.google.crypto.tink.proto.HashType[] values()
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.spikeapi.network.request.CoreTemperature: CoreTemperature()
com.spikeapi.network.request.HeartRateSummary: java.lang.Long component1()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.health.connect.client.units.BloodGlucose$Type: androidx.health.connect.client.units.BloodGlucose$Type[] values()
com.spikeapi.network.response.Sample: java.lang.Object component9()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.spikeapi.network.response.IntradayGlucoseData: java.lang.String getTime()
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.SpikeRawDataType getType()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
androidx.appcompat.widget.SearchView: int getImeOptions()
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
kotlin.SafePublicationLazyImpl: java.lang.Object writeReplace()
com.spikeapi.network.request.HeartRateValue: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.window.R$id: R$id()
com.spikeapi.network.request.HeartRateRawData: java.lang.String component2()
com.facebook.appevents.cloudbridge.AppEventType: com.facebook.appevents.cloudbridge.AppEventType[] values()
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$2: MoEActivity$onCreate$4$shouldOverrideUrlLoading$2(com.moe.pushlibrary.activities.MoEActivity)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.activity.ComponentActivity: kotlin.Unit lambda$new$0()
com.spikeapi.network.request.BoneMassStats: BoneMassStats()
com.spikeapi.network.response.DiffFromBaselineTemperatureData: int hashCode()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
androidx.health.connect.client.units.Mass$Type: androidx.health.connect.client.units.Mass$Type valueOf(java.lang.String)
com.moengage.pushbase.internal.PushBaseHandlerImpl: void clearData(android.content.Context,com.moengage.core.internal.model.SdkInstance)
com.spikeapi.network.request.SpikeRequest: java.lang.String component8()
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
com.facebook.login.CodeChallengeMethod: com.facebook.login.CodeChallengeMethod[] values()
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DetailedTemperatureData component2()
com.spikeapi.network.request.CoreTemperatureStats: java.lang.String toString()
io.flutter.plugins.imagepicker.Messages$SourceType: io.flutter.plugins.imagepicker.Messages$SourceType valueOf(java.lang.String)
com.spikeapi.network.request.DistanceRawData: java.lang.String toString()
com.spikeapi.network.request.BodyRawData: BodyRawData()
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
com.spikeapi.network.response.SpikeHRVData: int hashCode()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.spikeapi.SpikeEnvironment: com.spikeapi.SpikeEnvironment valueOf(java.lang.String)
com.spikeapi.network.request.OxygenSaturationRecord: OxygenSaturationRecord(java.lang.String,java.lang.String,java.lang.Double)
com.spikeapi.network.request.ActiveCaloriesSummary: java.lang.Double getSum()
com.spikeapi.network.request.RawHealthData: com.spikeapi.SpikeRawDataType getType()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.spikeapi.network.request.StepsSummary: StepsSummary(java.lang.Long,java.lang.Integer,java.lang.Long,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.ConnectionState: java.lang.String getAuthToken()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.facebook.appevents.FlushReason: com.facebook.appevents.FlushReason valueOf(java.lang.String)
com.moengage.plugin.base.internal.model.SelfHandledInAppCallbackType: com.moengage.plugin.base.internal.model.SelfHandledInAppCallbackType[] values()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
dev.spike.flutter_health_connect.SpikeLogLevel: dev.spike.flutter_health_connect.SpikeLogLevel[] values()
com.spikeapi.network.request.BodyFatPercentageStats: java.lang.Integer component2()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getSource()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setAlias(java.lang.String)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.spikeapi.network.request.BodyFatPercentageValue: BodyFatPercentageValue(java.lang.String,java.lang.Double)
kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind: kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind valueOf(java.lang.String)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
com.spikeapi.model.SpikeCaloriesDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getDeep()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.yalantis.ucrop.view.TransformImageView: com.yalantis.ucrop.model.ExifInfo getExifInfo()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcf)
kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind: kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind valueOf(java.lang.String)
com.spikeapi.SpikeConnection: java.lang.String getSpikeUserId()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
androidx.window.core.Bounds: int getWidth()
com.spikeapi.network.request.OxygenSaturationRecord: java.lang.String toString()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
com.spikeapi.healthconnect.HealthConnectAvailability: HealthConnectAvailability(java.lang.String,int)
com.spikeapi.network.request.BMIValue: com.spikeapi.network.request.BMIValue copy$default(com.spikeapi.network.request.BMIValue,java.lang.String,java.lang.Double,int,java.lang.Object)
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar: FirebaseDynamicLinkRegistrar()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.WaterPercentage getWaterPercentage()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getLight()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component17()
com.spikeapi.network.request.MuscleMassStats: java.lang.Integer getCount()
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
com.spikeapi.network.request.HeartRateVariabilitySummary: java.lang.String toString()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannelGroup(android.app.NotificationManager,java.lang.String)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BoneMass component6()
com.spikeapi.network.request.BreathingRawData: java.lang.String component2()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.fragment.app.FragmentActivity: void onResumeFragments()
com.spikeapi.network.request.CoreTemperatureValue: com.spikeapi.network.request.CoreTemperatureValue copy(java.lang.String,java.lang.Double)
com.spikeapi.network.request.SleepRawData: com.spikeapi.network.request.SleepRawData copy(java.lang.String,java.lang.String,java.lang.String,com.spikeapi.network.request.SleepSummary,java.util.List)
com.spikeapi.network.request.OxygenSaturationRecord: com.spikeapi.network.request.OxygenSaturationRecord copy$default(com.spikeapi.network.request.OxygenSaturationRecord,java.lang.String,java.lang.String,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.request.BreathingRawData: com.spikeapi.network.request.BreathingRawData copy(java.lang.String,java.lang.String,com.spikeapi.network.request.BreathingSummary,java.util.List)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.Double component3()
com.spikeapi.network.request.MuscleMass: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.spikeapi.network.response.DistanceResponseData: com.spikeapi.network.response.DistanceResponseData copy$default(com.spikeapi.network.response.DistanceResponseData,java.lang.String,java.util.List,java.lang.String,java.lang.Integer,int,java.lang.Object)
androidx.fragment.app.Fragment: android.view.View requireView()
kotlin.reflect.jvm.internal.impl.load.java.SpecialGenericSignatures$TypeSafeBarrierDescription: kotlin.reflect.jvm.internal.impl.load.java.SpecialGenericSignatures$TypeSafeBarrierDescription valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.spikeapi.network.request.BreathingSummary: BreathingSummary(java.lang.Double,java.lang.Integer,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.HeartRateVariability: com.spikeapi.network.request.HeartRateVariability copy$default(com.spikeapi.network.request.HeartRateVariability,com.spikeapi.network.request.HeartRateVariabilitySummary,java.util.List,int,java.lang.Object)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.Integer component4()
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType[] $values()
androidx.fragment.app.DialogFragment: void onStop()
com.spikeapi.network.response.BodyResponseData: java.lang.Integer getTimezoneOffset()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
com.spikeapi.SpikeConnection: void manageHealthConnect()
com.spikeapi.network.request.WaterPercentage: com.spikeapi.network.request.WaterPercentageStats component1()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlin.reflect.jvm.internal.impl.types.TypeUsage: kotlin.reflect.jvm.internal.impl.types.TypeUsage valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.spikeapi.network.request.BloodPressure: BloodPressure(com.spikeapi.network.request.BloodPressureStats,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.health.connect.client.units.Velocity$Type: androidx.health.connect.client.units.Velocity$Type[] values()
com.spikeapi.network.response.CaloriesResponseData: java.lang.String component1()
kotlin.Metadata: int[] bv()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.spikeapi.network.request.BreathingRecord: java.lang.String getStartTime()
com.moengage.widgets.MoERatingBar: MoERatingBar(android.content.Context,android.util.AttributeSet)
okio.ByteString: void readObject(java.io.ObjectInputStream)
com.spikeapi.network.request.MuscleMassStats: java.lang.String toString()
com.spikeapi.network.response.BodyFatPercentageData: java.util.List component2()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String)
com.spikeapi.model.SpikeOxygenSaturationDataType: SpikeOxygenSaturationDataType()
com.spikeapi.network.response.DetailedTemperatureData: com.spikeapi.network.response.DetailedTemperatureData copy$default(com.spikeapi.network.response.DetailedTemperatureData,java.lang.Double,java.util.List,int,java.lang.Object)
kotlin.text.Regex$Serialized: java.lang.Object readResolve()
com.spikeapi.network.response.Lap: com.spikeapi.network.response.Lap copy(java.lang.String)
androidx.fragment.app.Fragment: int hashCode()
androidx.health.platform.client.proto.ProtoSyntax: androidx.health.platform.client.proto.ProtoSyntax valueOf(java.lang.String)
com.spikeapi.network.request.BodyRawData: boolean equals(java.lang.Object)
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.spikeapi.network.response.Lap: java.lang.String component1()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String getProviderTimestamp()
androidx.fragment.app.Fragment: boolean isRemovingParent()
com.spikeapi.network.request.CaloriesRawData: com.spikeapi.network.request.ActiveCaloriesBurned getActiveCaloriesBurned()
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
kotlin.jvm.internal.CallableReference$NoReceiver: java.lang.Object readResolve()
androidx.webkit.internal.ApiHelperForOMR1: void proceed(android.webkit.SafeBrowsingResponse,boolean)
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.spikeapi.network.request.WaterPercentage: java.util.List getValues()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.spikeapi.SpikeEnvironment: com.spikeapi.SpikeEnvironment[] $values()
com.spikeapi.network.request.Lap: java.lang.Integer getStartTime()
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.webkit.internal.ApiHelperForOMR1: void backToSafety(android.webkit.SafeBrowsingResponse,boolean)
com.spikeapi.SpikeConnection: java.lang.Object extractData(com.spikeapi.model.SpikeDataType,java.time.OffsetDateTime,java.time.OffsetDateTime,kotlin.coroutines.Continuation)
com.moengage.widgets.MoERatingBar: MoERatingBar(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.yalantis.ucrop.view.CropImageView: void setImageToWrapCropBoundsAnimDuration(long)
com.spikeapi.network.response.TimeSeriesData: TimeSeriesData(java.lang.String,java.lang.Double)
com.spikeapi.SpikeConnection: SpikeConnection(android.content.Context,a.b)
com.spikeapi.network.response.SpikeHRVData: java.lang.Double component2()
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean)
io.flutter.plugins.firebase.crashlytics.FlutterError: FlutterError(java.lang.String)
com.spikeapi.network.response.SpikeResponse: java.lang.String component3()
com.moengage.pushbase.internal.PushBaseHandlerImpl: void onDatabaseMigration(android.content.Context,com.moengage.core.internal.model.SdkInstance,com.moengage.core.internal.model.SdkInstance,com.moengage.core.internal.storage.database.DbAdapter,com.moengage.core.internal.storage.database.DbAdapter)
com.spikeapi.network.request.HeightStats: com.spikeapi.network.request.HeightStats copy$default(com.spikeapi.network.request.HeightStats,java.lang.Double,java.lang.Integer,int,java.lang.Object)
com.spikeapi.network.request.GlucoseSummary: int hashCode()
androidx.health.platform.client.impl.sdkservice.HealthDataSdkService: HealthDataSdkService()
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component3()
com.spikeapi.network.response.BreathingIntradayData: com.spikeapi.network.response.BreathingIntradayData copy$default(com.spikeapi.network.response.BreathingIntradayData,java.lang.String,java.lang.Integer,int,java.lang.Object)
kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType: kotlin.reflect.jvm.internal.impl.types.TypeSubstitutor$VarianceConflictType valueOf(java.lang.String)
com.spikeapi.network.request.BoneMass: com.spikeapi.network.request.BoneMassStats component1()
com.spikeapi.network.response.DiffFromBaselineTemperatureData: boolean equals(java.lang.Object)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType[] values()
com.spikeapi.network.response.IntradayDistanceData: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
com.spikeapi.network.request.RestingHeartRateValue: com.spikeapi.network.request.RestingHeartRateValue copy(java.lang.String,java.lang.String,java.lang.Long)
com.spikeapi.network.request.WaterPercentageStats: java.lang.Integer component2()
com.spikeapi.network.response.Lap: java.lang.String toString()
com.moengage.inapp.internal.InAppHandlerImpl: InAppHandlerImpl()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.spikeapi.network.response.BMIData: java.lang.Double getValue()
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
com.spikeapi.network.request.HeartRateSummary: int hashCode()
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.spikeapi.network.request.StepsRawData: com.spikeapi.network.request.StepsSummary component3()
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
kotlin.reflect.jvm.internal.impl.load.java.SpecialGenericSignatures$SpecialSignatureInfo: kotlin.reflect.jvm.internal.impl.load.java.SpecialGenericSignatures$SpecialSignatureInfo[] values()
com.spikeapi.network.response.HeartRateResponseData: com.spikeapi.network.response.HeartRateResponseData copy$default(com.spikeapi.network.response.HeartRateResponseData,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.util.List,com.spikeapi.network.response.SpikeHRVData,java.util.List,java.lang.String,int,java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.RestingHeartRateSummary: RestingHeartRateSummary()
com.spikeapi.network.response.IntradayDistanceData: java.lang.Integer getValue()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String getCallbackUrl()
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar: FirebaseAnalyticsKtxRegistrar()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.spikeapi.ConnectionState: java.lang.String component2()
com.spikeapi.network.response.TimeSeriesData: java.lang.Double getValue()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result valueOf(java.lang.String)
com.spikeapi.network.request.OxygenSaturationRawData: boolean equals(java.lang.Object)
com.google.firebase.iid.Registrar: com.google.firebase.iid.internal.FirebaseInstanceIdInternal lambda$getComponents$1$Registrar(com.google.firebase.components.ComponentContainer)
com.facebook.appevents.cloudbridge.ConversionsAPICustomEventField: com.facebook.appevents.cloudbridge.ConversionsAPICustomEventField[] values()
com.spikeapi.network.response.GlucoseResponseData: java.lang.String component1()
com.spikeapi.SpikeConnection: com.spikeapi.ConnectionState access$getConnectionState(com.spikeapi.SpikeConnection,java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
com.spikeapi.network.request.TotalCaloriesSummary: int hashCode()
com.spikeapi.model.SpikeActivitiesStreamDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.moengage.core.internal.rest.RequestType: com.moengage.core.internal.rest.RequestType valueOf(java.lang.String)
com.spikeapi.network.request.BMIValue: BMIValue(java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component13()
com.spikeapi.network.request.BreathingRawData: com.spikeapi.network.request.BreathingSummary getSummary()
androidx.window.embedding.ActivityRule: int hashCode()
kotlin.Metadata: java.lang.String[] d2()
com.google.firebase.sessions.EventType: com.google.firebase.sessions.EventType valueOf(java.lang.String)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.spikeapi.network.response.Level: java.lang.String toString()
androidx.webkit.internal.ApiHelperForP: boolean stop(android.webkit.TracingController,java.io.OutputStream,java.util.concurrent.Executor)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.moengage.inapp.internal.model.enums.Orientation: com.moengage.inapp.internal.model.enums.Orientation[] values()
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.MuscleMassData getMuscleMassG()
com.spikeapi.network.response.SleepResponseData: java.lang.Double getEfficiency()
com.spikeapi.network.request.BreathingRawData: java.lang.String component1()
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long getAvgHr()
com.spikeapi.network.request.BreathingRawData: BreathingRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.BreathingSummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.moengage.widgets.MoERatingBar: void onMeasure(int,int)
com.moengage.inapp.internal.model.enums.DataTrackType: com.moengage.inapp.internal.model.enums.DataTrackType[] values()
com.spikeapi.network.response.SleepResponseData: java.lang.String component2()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
kotlin.jvm.internal.FunctionReference: boolean isInline()
com.spikeapi.network.request.HeartRateVariabilitySummary: java.lang.Double component1()
com.spikeapi.network.request.OxygenSaturationRawData: java.util.List component4()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.String getDate()
com.spikeapi.network.request.BreathingRawData: com.spikeapi.network.request.BreathingRawData copy$default(com.spikeapi.network.request.BreathingRawData,java.lang.String,java.lang.String,com.spikeapi.network.request.BreathingSummary,java.util.List,int,java.lang.Object)
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime getDateFrom()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.embedding.SplitRule: int getLayoutDirection()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.moengage.core.internal.push.base.PushBaseHandler: void clearData(android.content.Context,com.moengage.core.internal.model.SdkInstance)
com.yalantis.ucrop.view.TransformImageView: java.lang.String getImageInputPath()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.moengage.plugin.base.internal.model.OptOutType: com.moengage.plugin.base.internal.model.OptOutType valueOf(java.lang.String)
dev.spike.flutter_health_connect.model.SpikeLoggingData: SpikeLoggingData(java.lang.String,java.lang.String,java.lang.String)
com.spikeapi.network.response.Sample: java.lang.Object component12()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.spikeapi.network.request.HeartRateVariabilityValue: HeartRateVariabilityValue(java.lang.String,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Boolean component8()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getDailyMovement()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.SpikeRequest: java.util.List component10()
com.spikeapi.network.request.BreathingSummary: java.lang.Integer getCount()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.spikeapi.network.request.OxygenSaturationRawData: java.lang.String component2()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component10()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Double getMax()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI[] values()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double component33()
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getTotalSleep()
androidx.health.platform.client.proto.Writer$FieldOrder: androidx.health.platform.client.proto.Writer$FieldOrder valueOf(java.lang.String)
com.spikeapi.network.request.OxygenSaturationRawData: com.spikeapi.network.request.OxygenSaturationSummary component3()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.spikeapi.network.request.WeightStats: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType: com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType valueOf(java.lang.String)
androidx.fragment.app.Fragment: void onDestroy()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
com.spikeapi.model.SpikeBreathingData: java.util.List getEntries()
com.spikeapi.network.request.SkinTemperature: java.util.List getValues()
com.moengage.pushbase.internal.MoEPushWorker: MoEPushWorker()
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
kotlin.reflect.jvm.internal.impl.types.error.ErrorScopeKind: kotlin.reflect.jvm.internal.impl.types.error.ErrorScopeKind valueOf(java.lang.String)
com.spikeapi.network.response.SpikeHRVIntradayData: boolean equals(java.lang.Object)
com.spikeapi.network.request.BMIValue: java.lang.String getTime()
com.spikeapi.model.SpikeCaloriesData: java.util.List getEntries()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.view.View getView()
com.spikeapi.network.request.ActiveCaloriesRecord: com.spikeapi.network.request.ActiveCaloriesRecord copy(java.lang.String,java.lang.String,java.lang.Double,java.lang.Integer,java.lang.Double)
com.spikeapi.network.request.HeartRateSummary: boolean equals(java.lang.Object)
com.spikeapi.network.request.StepsRecord: java.lang.Long component3()
com.google.crypto.tink.KeyTemplate$OutputPrefixType: com.google.crypto.tink.KeyTemplate$OutputPrefixType valueOf(java.lang.String)
com.spikeapi.network.response.SpikeSource: java.lang.String getMessage()
com.spikeapi.network.response.SpikeResponse: java.lang.String toString()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
com.moengage.widgets.MoERatingBar: void onDraw(android.graphics.Canvas)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.fragment.app.Fragment: void performResume()
com.spikeapi.network.response.BoneMassData: java.lang.String toString()
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
com.spikeapi.network.response.DetailedTemperatureData: java.lang.Double getTemperatureCelsius()
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double component2()
com.google.crypto.tink.proto.KeyData$KeyMaterialType: com.google.crypto.tink.proto.KeyData$KeyMaterialType[] values()
com.spikeapi.network.request.GlucoseRecord: java.lang.Double getValue()
com.spikeapi.network.response.SpikeHRIntradayData: SpikeHRIntradayData(java.lang.String,java.lang.Double)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getSteps()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component14()
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.spikeapi.network.response.HeartRateResponseData: java.util.List component9()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind: kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind[] values()
com.moengage.inapp.internal.model.enums.Orientation: com.moengage.inapp.internal.model.enums.Orientation valueOf(java.lang.String)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
com.spikeapi.network.request.TotalCaloriesRecord: com.spikeapi.network.request.TotalCaloriesRecord copy(java.lang.String,java.lang.String,java.lang.Double)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind valueOf(java.lang.String)
com.spikeapi.network.response.SessionsResponse: boolean equals(java.lang.Object)
com.spikeapi.network.request.MuscleMass: int hashCode()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component12()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.spikeapi.network.response.Sample: java.lang.Double component3()
com.spikeapi.network.request.SleepSummary: java.lang.Float component12()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
com.spikeapi.network.request.WeightStats: WeightStats()
com.spikeapi.network.request.BloodPressureValue: BloodPressureValue(java.lang.String,java.lang.Double,java.lang.Double)
com.spikeapi.network.request.DistanceRawData: DistanceRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.DistanceSummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.response.Level: Level(java.lang.String,java.lang.String,java.lang.Integer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
com.facebook.appevents.codeless.internal.EventBinding$ActionType: com.facebook.appevents.codeless.internal.EventBinding$ActionType[] values()
com.facebook.messenger.Messenger: Messenger()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component4()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality[] values()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind: kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor$Kind[] values()
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementTargetNames()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getMaxWatts()
com.spikeapi.network.response.DiffFromBaselineTemperatureData: java.util.List getTimeseries()
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.moengage.pushbase.internal.MoEPushWorker: void dismissNotification(android.os.Bundle,com.moengage.core.internal.model.SdkInstance)
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme valueOf(java.lang.String)
com.google.crypto.tink.shaded.protobuf.FieldType: com.google.crypto.tink.shaded.protobuf.FieldType[] values()
com.spikeapi.network.request.ActiveCaloriesSummary: java.lang.Double component1()
com.spikeapi.network.request.HeartRateVariability: java.util.List component2()
com.spikeapi.network.response.DistanceResponseData: java.lang.String component3()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.fragment.app.Fragment: int getEnterAnim()
androidx.webkit.internal.ApiHelperForP: void start(android.webkit.TracingController,androidx.webkit.TracingConfig)
com.moengage.core.internal.push.base.PushBaseHandler: void updateNotificationPermission(android.content.Context,com.moengage.core.internal.model.SdkInstance)
com.spikeapi.network.request.CoreTemperatureValue: int hashCode()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
androidx.fragment.app.Fragment: void onResume()
com.spikeapi.network.request.ActiveCaloriesBurned: com.spikeapi.network.request.ActiveCaloriesBurned copy$default(com.spikeapi.network.request.ActiveCaloriesBurned,com.spikeapi.network.request.ActiveCaloriesSummary,java.util.List,int,java.lang.Object)
com.spikeapi.model.SpikeSleepDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
com.google.crypto.tink.KeyTemplate$OutputPrefixType: com.google.crypto.tink.KeyTemplate$OutputPrefixType[] values()
com.spikeapi.model.SpikeGlucoseData: SpikeGlucoseData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
com.spikeapi.network.request.HeartRateVariabilitySummary: boolean equals(java.lang.Object)
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double getAvgHeartRate()
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
com.spikeapi.network.request.HeartRateValue: java.lang.String toString()
com.facebook.share.Share: Share()
com.spikeapi.network.request.Level: Level(java.lang.String,java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double component32()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$QualifiedNameTable$QualifiedName$Kind valueOf(java.lang.String)
com.facebook.appevents.PersistedEvents$SerializationProxyV1: java.lang.Object readResolve()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String component14()
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DiffFromBaselineTemperatureData component4()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.spikeapi.network.response.Sample: java.lang.Integer component15()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String component12()
com.spikeapi.model.SpikeActivitiesStreamData: SpikeActivitiesStreamData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
com.spikeapi.network.request.SkinTemperatureValue: java.lang.Double getValue()
androidx.window.R: R()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
kotlin.collections.builders.SerializedCollection: java.lang.Object readResolve()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator getOrCreate()
com.spikeapi.network.response.ActivitySummaryResponseData: int hashCode()
com.spikeapi.network.request.BloodPressure: BloodPressure()
com.google.gson.ReflectionAccessFilter$FilterResult: com.google.gson.ReflectionAccessFilter$FilterResult valueOf(java.lang.String)
com.facebook.appevents.internal.AppEventsLoggerUtility$GraphAPIActivityType: com.facebook.appevents.internal.AppEventsLoggerUtility$GraphAPIActivityType[] values()
com.spikeapi.network.response.CaloriesResponseData: java.util.List getIntradayData()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
com.spikeapi.network.request.RestingHeartRate: com.spikeapi.network.request.RestingHeartRate copy(com.spikeapi.network.request.RestingHeartRateSummary,java.util.List)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
com.spikeapi.network.request.Height: java.util.List component2()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.spikeapi.network.request.BoneMassValue: java.lang.Double component2()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.window.embedding.SplitRule: int hashCode()
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
kotlin.reflect.jvm.internal.impl.load.java.SpecialGenericSignatures$SpecialSignatureInfo: kotlin.reflect.jvm.internal.impl.load.java.SpecialGenericSignatures$SpecialSignatureInfo valueOf(java.lang.String)
androidx.window.core.Bounds: boolean isZero()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.spikeapi.SpikeConnection: java.lang.Object createConnection(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.spikeapi.SpikeEnvironment,com.spikeapi.SpikeLogger,kotlin.coroutines.Continuation)
com.spikeapi.ConnectionState: java.lang.String component1()
com.google.android.gms.internal.auth.zzby: com.google.android.gms.internal.auth.zzby[] values()
com.moengage.pushbase.activities.PushTracker: PushTracker()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
com.spikeapi.model.SpikeSleepDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.network.request.HeightValue: boolean equals(java.lang.Object)
com.spikeapi.network.response.WeightData: int hashCode()
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
com.google.crypto.tink.shaded.protobuf.FieldType$Collection: com.google.crypto.tink.shaded.protobuf.FieldType$Collection[] values()
com.spikeapi.network.response.BloodPressureData: com.spikeapi.network.response.BloodPressureData copy$default(com.spikeapi.network.response.BloodPressureData,java.lang.String,java.lang.Integer,java.lang.Integer,int,java.lang.Object)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String getTimeZoneOffset()
com.moengage.core.internal.push.pushamp.PushAmpHandler: void onAppOpen(android.content.Context,com.moengage.core.internal.model.SdkInstance)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
com.spikeapi.network.request.CoreTemperatureStats: com.spikeapi.network.request.CoreTemperatureStats copy$default(com.spikeapi.network.request.CoreTemperatureStats,java.lang.Double,java.lang.Integer,int,java.lang.Object)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List component13()
com.spikeapi.model.SpikeDataType: java.lang.Object postData$sdk_release$default(com.spikeapi.model.SpikeDataType,b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation,int,java.lang.Object)
io.flutter.plugins.firebase.crashlytics.FirebaseCrashlyticsTestCrash: FirebaseCrashlyticsTestCrash()
com.spikeapi.network.response.SpikeHRIntradayData: java.lang.Double component2()
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
com.moe.pushlibrary.activities.MoEActivity$onCreate$4: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
dev.spike.flutter_health_connect.model.SpikeOperationResult: boolean equals(java.lang.Object)
com.spikeapi.ConnectionState: java.lang.String getEndUserSessionId()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
com.facebook.internal.FetchedAppSettingsManager$FetchAppSettingState: com.facebook.internal.FetchedAppSettingsManager$FetchAppSettingState valueOf(java.lang.String)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType valueOf(java.lang.String)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double component17()
com.spikeapi.model.SpikeDataType: SpikeDataType()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: java.lang.String getName()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.yalantis.ucrop.view.widget.AspectRatioTextView: void setAspectRatio(com.yalantis.ucrop.model.AspectRatio)
androidx.fragment.app.DialogFragment: void onDestroyView()
androidx.health.connect.client.units.BloodGlucose$Type: androidx.health.connect.client.units.BloodGlucose$Type valueOf(java.lang.String)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle setSummaryText(android.app.Notification$BigTextStyle,java.lang.CharSequence)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.spikeapi.network.response.HeartRateResponseData: com.spikeapi.network.response.SpikeHRVData getHeartRateVariability()
com.spikeapi.network.response.OxygenSaturationResponseData: boolean equals(java.lang.Object)
com.moe.pushlibrary.activities.MoEActivity$onCreate$2: MoEActivity$onCreate$2(com.moe.pushlibrary.activities.MoEActivity)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setUserLocation(java.lang.String)
com.spikeapi.SpikeProcessedDataType: java.lang.String getTypeName()
com.spikeapi.network.request.SkinTemperatureStats: SkinTemperatureStats(java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String getCollectedAt()
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double getSmoothedValue()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.fragment.app.Fragment: java.lang.String getString(int)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
com.spikeapi.network.request.BloodPressureValue: java.lang.Double getValueSystolic()
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component24()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
androidx.fragment.app.Fragment: java.lang.Object getHost()
com.spikeapi.network.response.SpikeResponse: java.lang.String getDateFrom()
com.spikeapi.network.response.BreathingIntradayData: java.lang.String getTime()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.spikeapi.network.response.MuscleMassData: java.lang.Double getValue()
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo)
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getSourceSpecificSleepScore()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String getTimeEnd()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.spikeapi.network.request.BMI: java.util.List getValues()
com.spikeapi.network.response.HeightData: java.util.List getTimeseries()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String component21()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double getMaxSpeed()
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BMIData getBmi()
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.Double component2()
com.spikeapi.network.request.ActivitiesSummaryRawData: com.spikeapi.SpikeRawDataType getType()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.yalantis.ucrop.view.OverlayView: void setCropGridColor(int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
androidx.window.embedding.SplitInfo: java.lang.String toString()
com.spikeapi.network.request.SleepSummary: java.lang.Long component2()
com.spikeapi.network.request.BloodPressureStats: BloodPressureStats(java.lang.Double,java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
com.spikeapi.network.response.CaloriesResponseData: java.lang.String component3()
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.spikeapi.network.response.CaloriesResponseData: com.spikeapi.network.response.CaloriesResponseData copy(java.lang.String,java.util.List,java.lang.String,java.lang.Integer)
com.spikeapi.network.response.SleepResponseData: int hashCode()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component6()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
com.spikeapi.network.response.OxygenSaturationResponseData: java.util.List component5()
com.spikeapi.network.response.GlucoseResponseData: int hashCode()
com.spikeapi.network.request.DistanceSummary: java.lang.String toString()
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.facebook.internal.GamingAction: com.facebook.internal.GamingAction[] values()
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
androidx.window.embedding.MatcherUtils: MatcherUtils()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
com.spikeapi.network.response.OxygenSaturationIntradayData: boolean equals(java.lang.Object)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getAvgSpeed()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.net.Uri cache(byte[],java.lang.String,java.lang.String)
com.spikeapi.SpikeConnection: void checkSetup$sdk_release()
com.moengage.pushbase.internal.PushBaseHandlerImpl: void onLogout(android.content.Context,com.moengage.core.internal.model.SdkInstance)
com.facebook.FacebookRequestError$Category: com.facebook.FacebookRequestError$Category valueOf(java.lang.String)
androidx.fragment.app.Fragment: void performStop()
androidx.health.connect.client.units.Volume$Type: androidx.health.connect.client.units.Volume$Type valueOf(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannels(android.app.NotificationManager)
androidx.fragment.app.Fragment: Fragment(int)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getMaxHr()
com.spikeapi.network.request.StepsRecord: java.lang.String component4()
com.moengage.pushbase.internal.fragments.LaterDialogFragment: java.lang.String lambda$onCreateDialog$0()
com.spikeapi.network.request.BreathingRawData: java.lang.String getDate()
com.moe.pushlibrary.activities.MoEActivity$onCreate$6: java.lang.String invoke()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.spikeapi.network.request.BloodPressureValue: BloodPressureValue()
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
com.spikeapi.network.response.SpikeSource: com.spikeapi.network.response.SpikeSource copy(java.lang.String,boolean,java.lang.String)
com.spikeapi.network.request.HeartRateValue: com.spikeapi.network.request.HeartRateValue copy(java.lang.String,java.lang.String,java.lang.Long)
com.spikeapi.network.response.WeightData: boolean equals(java.lang.Object)
com.spikeapi.network.response.SpikeHRVData: boolean equals(java.lang.Object)
com.spikeapi.network.response.BloodPressureData: int hashCode()
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat valueOf(java.lang.String)
com.spikeapi.network.request.SleepSummary: java.lang.Long component3()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String component3()
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Result[] values()
com.moengage.core.internal.model.DataTypes: com.moengage.core.internal.model.DataTypes[] values()
com.moengage.core.internal.model.StorageEncryptionState: com.moengage.core.internal.model.StorageEncryptionState valueOf(java.lang.String)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void sms(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.spikeapi.network.request.BloodPressureStats: java.lang.String toString()
com.spikeapi.network.response.SpikeResponseData: java.lang.String getDataType()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
dev.spike.flutter_health_connect.model.SpikeLoggingData: java.lang.String component2()
com.spikeapi.SpikeConnection: java.lang.Object extractAndPostData$default(com.spikeapi.SpikeConnection,com.spikeapi.model.SpikeDataType,java.time.OffsetDateTime,java.time.OffsetDateTime,kotlin.coroutines.Continuation,int,java.lang.Object)
com.spikeapi.network.request.WaterPercentageStats: boolean equals(java.lang.Object)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getMaxWatts()
com.spikeapi.network.response.SpikeHRVIntradayValueData: com.spikeapi.network.response.SpikeHRVIntradayValueData copy(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)
androidx.fragment.app.Fragment: android.view.View getView()
com.facebook.CustomTabMainActivity: CustomTabMainActivity()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.core.app.ActivityCompat$Api21Impl: void startPostponedEnterTransition(android.app.Activity)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
kotlin.collections.State: kotlin.collections.State[] values()
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
androidx.activity.ComponentActivity: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List getHrZones()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
com.facebook.appevents.cloudbridge.CustomEventField: com.facebook.appevents.cloudbridge.CustomEventField valueOf(java.lang.String)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
com.moengage.pushbase.activities.PushClickDialogTracker: void onDialogCancelled()
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.spikeapi.model.SpikeStepsDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.ConnectionState: java.lang.String getEndUserId()
com.spikeapi.network.response.SpikeSourceWebhook: com.spikeapi.network.response.SpikeSourceWebhook copy$default(com.spikeapi.network.response.SpikeSourceWebhook,java.lang.String,boolean,java.lang.String,int,java.lang.Object)
com.spikeapi.network.request.BreathingRawData: BreathingRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.BreathingSummary,java.util.List)
com.spikeapi.network.response.WeightData: com.spikeapi.network.response.WeightData copy$default(com.spikeapi.network.response.WeightData,java.lang.Double,java.util.List,int,java.lang.Object)
com.spikeapi.network.response.HrZone: java.lang.String toString()
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
com.spikeapi.network.request.HeartRateVariabilityValue: int hashCode()
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component14()
com.spikeapi.network.request.CoreTemperature: com.spikeapi.network.request.CoreTemperatureStats component1()
com.spikeapi.network.response.DistanceResponseData: java.lang.String component1()
com.facebook.all.All: All()
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime getSubmittedAt()
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
com.spikeapi.network.response.OxygenSaturationResponseData: int hashCode()
com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder: com.google.crypto.tink.shaded.protobuf.Writer$FieldOrder[] values()
com.spikeapi.network.response.SessionsResponse: java.lang.String getAccountId()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.spikeapi.network.request.ActiveCaloriesBurned: java.util.List component2()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Double component8()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component19()
androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()
com.spikeapi.network.response.SessionsResponse: SessionsResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
com.spikeapi.network.request.WaterPercentageStats: java.lang.Double component1()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.spikeapi.network.request.MuscleMassValue: java.lang.Double getValue()
com.google.crypto.tink.shaded.protobuf.ProtoSyntax: com.google.crypto.tink.shaded.protobuf.ProtoSyntax[] values()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double getDistance()
com.spikeapi.network.response.Sample: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: android.content.Context requireContext()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.spikeapi.network.request.WaterPercentage: com.spikeapi.network.request.WaterPercentage copy$default(com.spikeapi.network.request.WaterPercentage,com.spikeapi.network.request.WaterPercentageStats,java.util.List,int,java.lang.Object)
com.moengage.pushbase.internal.MoEPushWorker: void onHandleIntent(android.content.Intent)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component5()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String component30()
com.spikeapi.network.request.Weight: com.spikeapi.network.request.Weight copy(com.spikeapi.network.request.WeightStats,java.util.List)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.spikeapi.network.response.IntradayCaloriesData: com.spikeapi.network.response.IntradayCaloriesData copy$default(com.spikeapi.network.response.IntradayCaloriesData,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Double,int,java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannelGroups(android.app.NotificationManager)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component15()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.core.app.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme[] values()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
com.spikeapi.network.response.HeartRateResponseData: java.lang.String component1()
com.squareup.moshi.JsonReader$Token: com.squareup.moshi.JsonReader$Token[] values()
com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType[] values()
com.spikeapi.model.SpikeDataType: java.lang.Object getData$sdk_release$default(com.spikeapi.model.SpikeDataType,b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzil getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
com.moengage.inapp.internal.model.enums.StateUpdateType: com.moengage.inapp.internal.model.enums.StateUpdateType valueOf(java.lang.String)
com.spikeapi.network.request.SleepSummary: java.lang.Integer getLatency()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
com.facebook.appevents.cloudbridge.ConversionsAPIEventName: com.facebook.appevents.cloudbridge.ConversionsAPIEventName valueOf(java.lang.String)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.spikeapi.network.request.BMI: java.util.List component2()
com.spikeapi.network.request.TotalCaloriesBurned: TotalCaloriesBurned(com.spikeapi.network.request.TotalCaloriesSummary,java.util.List)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType: com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType[] values()
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind: kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.spikeapi.network.response.OxygenSaturationIntradayData: java.lang.Double getValue()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
com.moengage.pushbase.activities.PushClickDialogTracker: void onTimeDialogCancelled()
com.spikeapi.network.response.WaterPercentageData: java.util.List getTimeseries()
com.spikeapi.network.response.SleepResponseData: java.lang.String getDate()
io.flutter.plugins.googlesignin.Messages$SignInType: io.flutter.plugins.googlesignin.Messages$SignInType valueOf(java.lang.String)
com.spikeapi.network.request.BreathingRawData: java.lang.String toString()
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.SkinTemperature getSkinTemperature()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.window.embedding.SplitInfo: int hashCode()
com.spikeapi.network.request.ActiveCaloriesBurned: int hashCode()
com.spikeapi.model.SpikeStepsData: java.util.List getEntries()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long getMovingTime()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
com.spikeapi.network.request.CaloriesRawData: CaloriesRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.TotalCaloriesBurned,com.spikeapi.network.request.ActiveCaloriesBurned)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.cardview.widget.CardView: float getMaxCardElevation()
io.flutter.plugins.googlesignin.Messages$SignInType: io.flutter.plugins.googlesignin.Messages$SignInType[] values()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
com.spikeapi.network.response.Level: java.lang.String component2()
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
com.google.firebase.sessions.FirebaseSessionsRegistrar: FirebaseSessionsRegistrar()
com.spikeapi.network.request.OxygenSaturationRecord: java.lang.String component1()
com.spikeapi.network.response.BodyResponseData: int hashCode()
com.spikeapi.network.request.SleepSummary: int hashCode()
com.spikeapi.network.response.IntradayGlucoseData: com.spikeapi.network.response.IntradayGlucoseData copy(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.String,java.lang.String,java.lang.Double)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.health.connect.client.units.Energy$Type: androidx.health.connect.client.units.Energy$Type valueOf(java.lang.String)
com.spikeapi.network.request.HeartRateVariability: com.spikeapi.network.request.HeartRateVariabilitySummary getSummary()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.spikeapi.ConnectionState: java.lang.String component7()
com.spikeapi.network.request.MuscleMassValue: MuscleMassValue()
com.moengage.pushbase.internal.fragments.DatePickerFragment: java.lang.String lambda$onDateSet$0()
com.spikeapi.network.response.SpikeHRVData: java.lang.Double getSleepHRV()
androidx.window.embedding.SplitPairFilter: int hashCode()
com.spikeapi.network.request.DistanceSummary: java.lang.Integer component2()
com.moengage.pushbase.internal.fragments.DatePickerFragment: void onDismiss(android.content.DialogInterface)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
kotlin.reflect.jvm.internal.impl.types.Variance: kotlin.reflect.jvm.internal.impl.types.Variance[] values()
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
com.moengage.pushbase.activities.PushClickDialogTracker: PushClickDialogTracker()
com.moengage.pushbase.internal.fragments.TimePickerFragment: java.lang.String lambda$onTimeSet$0()
com.spikeapi.network.response.DistanceResponseData: boolean equals(java.lang.Object)
com.spikeapi.network.request.ActivitiesSummaryRawData: ActivitiesSummaryRawData(java.lang.String,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
kotlin.reflect.jvm.internal.impl.types.error.ErrorTypeKind: kotlin.reflect.jvm.internal.impl.types.error.ErrorTypeKind[] values()
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BoneMassData component5()
androidx.core.app.ComponentActivity: ComponentActivity()
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
com.spikeapi.network.request.BodyFatPercentage: com.spikeapi.network.request.BodyFatPercentageStats getStats()
com.spikeapi.network.request.GlucoseSummary: com.spikeapi.network.request.GlucoseSummary copy$default(com.spikeapi.network.request.GlucoseSummary,java.lang.Double,java.lang.Integer,java.lang.Double,int,java.lang.Object)
androidx.fragment.app.DialogFragment: void prepareDialog(android.os.Bundle)
com.spikeapi.network.request.TotalCaloriesRecord: java.lang.String component2()
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double getValue()
androidx.window.core.Bounds: int hashCode()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.google.android.gms.internal.measurement.zzcb: com.google.android.gms.internal.measurement.zzcc asInterface(android.os.IBinder)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: void setAnimations(int,int,int,int)
io.flutter.app.FlutterApplication: FlutterApplication()
kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy[] values()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
com.moengage.inapp.internal.model.enums.DataTrackType: com.moengage.inapp.internal.model.enums.DataTrackType valueOf(java.lang.String)
com.facebook.appevents.cloudbridge.AppEventsConversionsAPITransformer$ValueTransformationType: com.facebook.appevents.cloudbridge.AppEventsConversionsAPITransformer$ValueTransformationType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.spikeapi.network.request.BMIValue: int hashCode()
com.spikeapi.network.response.SpikeHRVIntradayData: com.spikeapi.network.response.SpikeHRVIntradayData copy(java.lang.String,com.spikeapi.network.response.SpikeHRVIntradayValueData)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
com.spikeapi.model.SpikeDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.fragment.app.Fragment: boolean isDetached()
kotlin.reflect.jvm.internal.impl.descriptors.Modality: kotlin.reflect.jvm.internal.impl.descriptors.Modality valueOf(java.lang.String)
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.TemperatureData copy(com.spikeapi.network.response.DetailedTemperatureData,com.spikeapi.network.response.DetailedTemperatureData,com.spikeapi.network.response.DetailedTemperatureData,com.spikeapi.network.response.DiffFromBaselineTemperatureData)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.response.HeightData: com.spikeapi.network.response.HeightData copy$default(com.spikeapi.network.response.HeightData,java.lang.Double,java.util.List,int,java.lang.Object)
com.moengage.core.model.UserGender: com.moengage.core.model.UserGender valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
com.spikeapi.network.request.WaterPercentage: WaterPercentage()
com.google.android.gms.internal.measurement.zzcb: zzcb()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
com.spikeapi.network.request.SpikeRequest: java.util.List getEntries()
com.spikeapi.network.request.SkinTemperatureValue: SkinTemperatureValue(java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.security.crypto.MasterKey$Builder$Api23Impl: java.lang.String getKeystoreAlias(android.security.keystore.KeyGenParameterSpec)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType: com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType[] values()
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
com.spikeapi.network.response.SpikeResponse: java.util.List getEntries()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.fragment.app.Fragment: void performDetach()
com.spikeapi.network.request.StepsRecord: java.lang.Long getValue()
com.spikeapi.network.request.OxygenSaturationRawData: com.spikeapi.network.request.OxygenSaturationSummary getSummary()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.spikeapi.network.request.DistanceRawData: com.spikeapi.network.request.DistanceSummary getSummary()
com.moengage.inapp.internal.model.enums.WidgetType: com.moengage.inapp.internal.model.enums.WidgetType valueOf(java.lang.String)
com.spikeapi.network.response.CaloriesResponseData: java.util.List component2()
kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion$Mode: kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor$Companion$Mode valueOf(java.lang.String)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: java.lang.String toString()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.spikeapi.network.request.RestingHeartRate: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double component5()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.OverrideRenderingPolicy[] values()
com.spikeapi.network.response.Sample: java.lang.Integer component8()
com.spikeapi.network.request.SleepSummary: java.lang.Integer getCount()
com.spikeapi.network.request.BloodPressureStats: java.lang.Integer getCount()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
androidx.activity.ComponentActivity: void ensureViewModelStore()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component10()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.yalantis.ucrop.view.TransformImageView: android.graphics.Bitmap getViewBitmap()
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
com.spikeapi.network.request.GlucoseRecord: com.spikeapi.network.request.GlucoseRecord copy(java.lang.String,java.lang.String,java.lang.Double)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.facebook.login.LoginClient$Result$Code: com.facebook.login.LoginClient$Result$Code[] values()
com.spikeapi.network.request.SkinTemperatureStats: com.spikeapi.network.request.SkinTemperatureStats copy$default(com.spikeapi.network.request.SkinTemperatureStats,java.lang.Double,java.lang.Integer,int,java.lang.Object)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void trackRating(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Integer getActivityTypeId()
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.spikeapi.network.response.Sample: java.lang.Double component1()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.core.app.ComponentActivity: boolean shouldSkipDump(java.lang.String[])
com.spikeapi.network.request.BMIValue: BMIValue(java.lang.String,java.lang.Double)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void navigateToScreen(java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.spikeapi.network.request.ActivitiesStreamRawData: ActivitiesStreamRawData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.String,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Double,java.lang.Double,java.util.List)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component2()
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.spikeapi.network.response.SleepResponseData: java.util.List getLevels()
com.google.gson.internal.LinkedTreeMap: java.lang.Object writeReplace()
com.spikeapi.model.SpikeData: SpikeData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
com.facebook.appevents.codeless.internal.EventBinding$MappingMethod: com.facebook.appevents.codeless.internal.EventBinding$MappingMethod valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
com.moengage.pushbase.internal.fragments.TimePickerFragment: void onTimeSet(android.widget.TimePicker,int,int)
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
androidx.window.layout.SidecarAdapter: SidecarAdapter()
com.spikeapi.network.response.CaloriesResponseData: java.lang.String getDataType()
androidx.fragment.app.DialogFragment: void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
androidx.window.core.Bounds: java.lang.String toString()
com.moengage.pushbase.internal.activity.PermissionActivity: PermissionActivity()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition valueOf(java.lang.String)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double component3()
androidx.webkit.internal.ApiHelperForP: boolean isTracing(android.webkit.TracingController)
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.Double getMets()
com.spikeapi.network.request.Height: Height(com.spikeapi.network.request.HeightStats,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime component6()
com.spikeapi.SpikeConnection: java.util.Set getRequiredHealthPermissionsMetadata()
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
com.spikeapi.network.request.BoneMassStats: java.lang.Double getAvg()
com.spikeapi.network.request.SkinTemperatureStats: int hashCode()
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
com.moengage.core.internal.push.mipush.MiPushHandler: void initialiseModule(android.content.Context)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component4()
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.HeartRate getHeartRate()
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.core.app.NotificationManagerCompat$Api26Impl: android.app.NotificationChannel getNotificationChannel(android.app.NotificationManager,java.lang.String)
com.facebook.appevents.cloudbridge.ConversionsAPISection: com.facebook.appevents.cloudbridge.ConversionsAPISection valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.spikeapi.model.SpikeOxygenSaturationData: java.util.List getEntries()
com.spikeapi.network.request.CoreTemperature: java.util.List component2()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.spikeapi.network.request.RestingHeartRateSummary: com.spikeapi.network.request.RestingHeartRateSummary copy$default(com.spikeapi.network.request.RestingHeartRateSummary,java.lang.Long,java.lang.Integer,int,java.lang.Object)
com.spikeapi.network.request.SleepRawData: com.spikeapi.network.request.SleepRawData copy$default(com.spikeapi.network.request.SleepRawData,java.lang.String,java.lang.String,java.lang.String,com.spikeapi.network.request.SleepSummary,java.util.List,int,java.lang.Object)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String component5()
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.fragment.app.FragmentActivity: FragmentActivity(int)
com.moengage.inapp.internal.model.enums.InAppType: com.moengage.inapp.internal.model.enums.InAppType[] values()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType valueOf(java.lang.String)
com.spikeapi.network.request.BloodPressureValue: java.lang.String getTime()
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.spikeapi.network.request.DistanceRecord: java.lang.String toString()
com.spikeapi.SpikeConnection: android.content.Context access$getContext$p(com.spikeapi.SpikeConnection)
com.google.android.gms.internal.measurement.zzkt: com.google.android.gms.internal.measurement.zzkt[] values()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
com.spikeapi.ConnectionState: java.lang.String getApplicationId()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component1()
com.spikeapi.network.request.BodyRawData: java.lang.String getDate()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzcf)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.spikeapi.network.request.TotalCaloriesBurned: com.spikeapi.network.request.TotalCaloriesBurned copy$default(com.spikeapi.network.request.TotalCaloriesBurned,com.spikeapi.network.request.TotalCaloriesSummary,java.util.List,int,java.lang.Object)
com.spikeapi.network.request.RestingHeartRateValue: int hashCode()
com.spikeapi.network.request.HeartRateVariability: HeartRateVariability(com.spikeapi.network.request.HeartRateVariabilitySummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: HorizontalProgressWheelView(android.content.Context,android.util.AttributeSet)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.google.crypto.tink.proto.HashType: com.google.crypto.tink.proto.HashType valueOf(java.lang.String)
com.yalantis.ucrop.view.CropImageView: com.yalantis.ucrop.callback.CropBoundsChangeListener getCropBoundsChangeListener()
kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationLoader$PropertyRelatedElement: kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationLoader$PropertyRelatedElement valueOf(java.lang.String)
com.spikeapi.network.response.IntradayCaloriesData: java.lang.Double component4()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long getRestingHr()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
kotlin.reflect.jvm.internal.impl.descriptors.Modality: kotlin.reflect.jvm.internal.impl.descriptors.Modality[] values()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.spikeapi.network.response.MuscleMassData: com.spikeapi.network.response.MuscleMassData copy(java.lang.Double,java.util.List)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.spikeapi.network.response.SpikeHRIntradayData: java.lang.Double getValue()
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
com.spikeapi.network.request.SpikeRequest: java.lang.String getCallbackUrl()
com.spikeapi.network.request.BreathingRawData: BreathingRawData()
com.spikeapi.network.request.BreathingRawData: java.util.List getValues()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.moengage.core.internal.push.pushamp.PushAmpHandler: void onLogout(android.content.Context,com.moengage.core.internal.model.SdkInstance)
com.spikeapi.network.request.DistanceSummary: com.spikeapi.network.request.DistanceSummary copy$default(com.spikeapi.network.request.DistanceSummary,java.lang.Double,java.lang.Integer,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.request.BMIStats: com.spikeapi.network.request.BMIStats copy$default(com.spikeapi.network.request.BMIStats,java.lang.Double,java.lang.Integer,int,java.lang.Object)
com.spikeapi.network.response.SpikeResponse: SpikeResponse(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.spikeapi.network.request.DistanceRecord: boolean equals(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.spikeapi.network.response.SpikeHRVIntradayData: int hashCode()
com.spikeapi.network.request.CaloriesRawData: com.spikeapi.network.request.TotalCaloriesBurned getTotalCaloriesBurned()
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String getSource()
com.spikeapi.network.request.OxygenSaturationRecord: java.lang.Double getValue()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannel(android.app.NotificationManager,java.lang.String)
com.spikeapi.network.request.SleepRawData: com.spikeapi.SpikeRawDataType getType()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.moengage.pushbase.model.PushService: com.moengage.pushbase.model.PushService valueOf(java.lang.String)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
com.spikeapi.network.request.Level: java.lang.String getEndTime()
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
com.spikeapi.network.request.ActiveCaloriesRecord: ActiveCaloriesRecord()
com.spikeapi.network.response.IntradayStepsData: java.lang.String getTime()
com.spikeapi.network.response.IntradayCaloriesData: boolean equals(java.lang.Object)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime component5()
com.spikeapi.network.request.SkinTemperatureStats: SkinTemperatureStats()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.spikeapi.network.request.WaterPercentageStats: com.spikeapi.network.request.WaterPercentageStats copy(java.lang.Double,java.lang.Integer)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.spikeapi.network.request.SkinTemperature: java.lang.String toString()
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
kotlin.reflect.jvm.internal.impl.builtins.UnsignedArrayType: kotlin.reflect.jvm.internal.impl.builtins.UnsignedArrayType valueOf(java.lang.String)
com.spikeapi.network.response.IntradayGlucoseData: java.lang.String getTrend()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void call(java.lang.String)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
com.spikeapi.network.request.ActiveCaloriesSummary: java.lang.String toString()
io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice: io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice[] values()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setUniqueId(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.spikeapi.network.request.MuscleMassStats: java.lang.Double component1()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
com.spikeapi.network.request.ActiveCaloriesBurned: boolean equals(java.lang.Object)
com.spikeapi.network.response.WaterPercentageData: java.lang.String toString()
com.spikeapi.network.request.GlucoseRawData: java.lang.String component2()
kotlin.jvm.internal.CallableReference: boolean isOpen()
com.spikeapi.network.request.BodyFatPercentage: BodyFatPercentage()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
com.spikeapi.SpikeRawDataType: java.lang.String getTypeName()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.spikeapi.network.request.HeightValue: java.lang.String toString()
com.spikeapi.network.request.TotalCaloriesSummary: com.spikeapi.network.request.TotalCaloriesSummary copy(java.lang.Double,java.lang.Integer,java.lang.Double)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind valueOf(java.lang.String)
com.spikeapi.network.request.WaterPercentage: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
com.spikeapi.network.request.WeightValue: java.lang.String component1()
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme[] values()
com.spikeapi.network.response.SpikeHRVIntradayValueData: com.spikeapi.network.response.SpikeHRVIntradayValueData copy$default(com.spikeapi.network.response.SpikeHRVIntradayValueData,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,int,java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
com.facebook.appevents.AppEvent: java.lang.Object writeReplace()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String getType(android.net.Uri)
com.spikeapi.network.response.StepsResponseData: java.lang.Integer component4()
com.spikeapi.network.response.MuscleMassData: MuscleMassData(java.lang.Double,java.util.List)
com.spikeapi.network.request.DistanceSummary: java.lang.Double getAvg()
androidx.activity.ComponentActivity: void onBackPressed()
com.moengage.core.internal.push.fcm.FcmHandler: void initialiseModule(android.content.Context)
com.yalantis.ucrop.view.CropImageView: void setCropRect(android.graphics.RectF)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.spikeapi.network.response.ActivitySummaryResponseData: com.spikeapi.network.response.ActivitySummaryResponseData copy(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.WaterPercentage component8()
androidx.health.platform.client.proto.ByteString$BoundedByteString: java.lang.Object writeReplace()
com.spikeapi.network.response.BodyResponseData: java.lang.String component1()
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
com.spikeapi.network.request.Lap: java.lang.String toString()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
com.spikeapi.network.response.WeightData: WeightData(java.lang.Double,java.util.List)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
com.spikeapi.network.response.StepsResponseData: java.util.List component2()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
com.spikeapi.network.request.BloodPressureValue: java.lang.String component1()
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.CoreTemperature component10()
dev.spike.flutter_health_connect.model.SpikeLoggingData: java.lang.String getConnectionId()
androidx.health.platform.client.impl.data.ProtoData: ProtoData()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String component7()
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
com.spikeapi.network.response.BMIData: com.spikeapi.network.response.BMIData copy(java.lang.Double,java.util.List)
com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility: com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility[] values()
com.spikeapi.network.request.BodyRawData: BodyRawData(java.lang.String,com.spikeapi.network.request.Weight,com.spikeapi.network.request.Height,com.spikeapi.network.request.BMI,com.spikeapi.network.request.BodyFatPercentage,com.spikeapi.network.request.BoneMass,com.spikeapi.network.request.MuscleMass,com.spikeapi.network.request.WaterPercentage,com.spikeapi.network.request.SkinTemperature,com.spikeapi.network.request.CoreTemperature,com.spikeapi.network.request.BloodPressure,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.appevents.codeless.internal.EventBinding$ActionType: com.facebook.appevents.codeless.internal.EventBinding$ActionType valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.spikeapi.network.response.SpikeWebhookJobResponse: SpikeWebhookJobResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.CoreTemperature: CoreTemperature(com.spikeapi.network.request.CoreTemperatureStats,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.spikeapi.ConnectionState: boolean equals(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
androidx.fragment.app.Fragment: java.lang.String getTag()
com.spikeapi.SpikeExceptions$SpikeException: SpikeExceptions$SpikeException(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
com.spikeapi.SpikeConnection$Companion: SpikeConnection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.Metadata: java.lang.String xs()
com.facebook.appevents.cloudbridge.ConversionsAPIEventName: com.facebook.appevents.cloudbridge.ConversionsAPIEventName[] values()
com.spikeapi.network.request.HeartRate: com.spikeapi.network.request.HeartRateSummary getSummary()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Integer component5()
androidx.window.core.Version: int getMinor()
com.spikeapi.network.request.GlucoseSummary: com.spikeapi.network.request.GlucoseSummary copy(java.lang.Double,java.lang.Integer,java.lang.Double)
com.spikeapi.network.response.IntradayGlucoseData: java.lang.String component1()
com.spikeapi.network.request.ActiveCaloriesRecord: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
com.spikeapi.network.response.GlucoseResponseData: java.lang.String getDataType()
com.spikeapi.network.request.SpikeRequest: java.lang.String component6()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.spikeapi.network.request.HeartRateRawData: java.lang.String component1()
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.spikeapi.SpikeProcessedDataType: com.spikeapi.SpikeProcessedDataType valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.String component6()
com.google.android.gms.internal.measurement.zzbn: android.os.IBinder asBinder()
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Annotation$Argument$Value$Type[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
com.spikeapi.network.request.OxygenSaturationRawData: java.lang.String component1()
com.spikeapi.network.response.SpikeHRIntradayData: java.lang.String getTime()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
com.spikeapi.network.response.GlucoseResponseData: com.spikeapi.network.response.GlucoseResponseData copy(java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.util.List)
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
com.moe.pushlibrary.activities.MoEActivity$onCreate$3: MoEActivity$onCreate$3(com.moe.pushlibrary.activities.MoEActivity,boolean)
kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation: kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation[] values()
com.spikeapi.network.request.RestingHeartRate: com.spikeapi.network.request.RestingHeartRateSummary component1()
com.spikeapi.network.request.SkinTemperatureStats: SkinTemperatureStats(java.lang.Double,java.lang.Integer)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: void setHasException(boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.spikeapi.network.response.SleepResponseData: java.lang.Double component15()
com.spikeapi.ConnectionState: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.spikeapi.network.request.MuscleMassValue: java.lang.Double component2()
com.spikeapi.network.response.Sample: java.lang.String getTimeEnd()
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
com.spikeapi.network.request.BloodPressureStats: java.lang.Double component2()
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
com.spikeapi.network.request.HeightStats: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: void onStop()
com.spikeapi.network.response.SleepResponseData: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.spikeapi.SpikeEnvironment: SpikeEnvironment(java.lang.String,int)
com.spikeapi.network.request.BodyFatPercentageValue: java.lang.String component1()
androidx.core.app.ActivityCompat$Api31Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.spikeapi.network.request.HeartRateVariabilitySummary: HeartRateVariabilitySummary(java.lang.Double,java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.spikeapi.network.request.SleepSummary: java.lang.String toString()
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List component12()
com.spikeapi.network.request.SessionsRequest: SessionsRequest(java.lang.String,java.lang.String,java.lang.String)
com.yalantis.ucrop.view.CropImageView: void setImageToWrapCropBounds(boolean)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.Double component3()
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.spikeapi.network.response.BoneMassData: java.lang.Double getValue()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.spikeapi.network.request.HeightStats: HeightStats(java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.BloodPressureValue: java.lang.Double component2()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DetailedTemperatureData getCoreTemperature()
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
com.spikeapi.network.response.DetailedTemperatureData: int hashCode()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.spikeapi.network.request.TotalCaloriesRecord: TotalCaloriesRecord()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
io.flutter.plugins.firebase.messaging.JobIntentService: JobIntentService()
androidx.fragment.app.Fragment: boolean isStateSaved()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String component16()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
com.spikeapi.network.response.SpikeSource: boolean isSuccess()
com.facebook.login.LoginTargetApp: com.facebook.login.LoginTargetApp[] values()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
com.spikeapi.network.response.OxygenSaturationResponseData: OxygenSaturationResponseData(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.util.List,java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
com.spikeapi.network.response.SessionsResponse: int hashCode()
com.spikeapi.network.request.SkinTemperatureValue: java.lang.String getTime()
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
com.spikeapi.network.request.BreathingSummary: BreathingSummary(java.lang.Double,java.lang.Integer,java.lang.Double)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getMinHr()
com.spikeapi.network.request.HeartRateSummary: java.lang.Integer getCount()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
com.spikeapi.network.response.WaterPercentageData: java.util.List component2()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
kotlin.random.Random$Default$Serialized: java.lang.Object readResolve()
androidx.webkit.internal.ApiHelperForO: android.webkit.WebChromeClient getWebChromeClient(android.webkit.WebView)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
com.spikeapi.network.response.BreathingIntradayData: java.lang.Integer component2()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getCalories()
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.spikeapi.network.request.SkinTemperatureValue: java.lang.String toString()
kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$CallMode: kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$CallMode[] values()
com.spikeapi.SpikeLogger: boolean isInfoEnabled()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
com.spikeapi.model.SpikeOxygenSaturationDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType[] values()
com.moengage.firebase.MoEFireBaseMessagingService: MoEFireBaseMessagingService()
com.spikeapi.network.request.BMIValue: boolean equals(java.lang.Object)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.String component1()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.moe.pushlibrary.activities.MoEActivity$onCreate$5: MoEActivity$onCreate$5(com.moe.pushlibrary.activities.MoEActivity)
com.spikeapi.network.request.SessionsRequest: boolean equals(java.lang.Object)
com.spikeapi.network.response.SpikeSource: SpikeSource(java.lang.String,boolean,java.lang.String)
com.spikeapi.network.request.SleepRawData: SleepRawData(java.lang.String,java.lang.String,java.lang.String,com.spikeapi.network.request.SleepSummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.ActivityCompat$Api21Impl: void postponeEnterTransition(android.app.Activity)
kotlin.reflect.jvm.internal.impl.load.java.ReportLevel: kotlin.reflect.jvm.internal.impl.load.java.ReportLevel[] values()
com.facebook.appevents.FlushReason: com.facebook.appevents.FlushReason[] values()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String component24()
com.spikeapi.network.response.StepsResponseData: java.lang.String getDataType()
com.spikeapi.network.request.SleepSummary: SleepSummary(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Float,java.lang.Integer,java.lang.Double,java.lang.Long,java.lang.Long,java.lang.Float,java.lang.Float,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.response.Level: com.spikeapi.network.response.Level copy$default(com.spikeapi.network.response.Level,java.lang.String,java.lang.String,java.lang.Integer,int,java.lang.Object)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String component22()
com.spikeapi.network.response.SpikeResponse: com.spikeapi.network.response.SpikeResponse copy$default(com.spikeapi.network.response.SpikeResponse,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.util.List,int,java.lang.Object)
com.spikeapi.network.request.HeartRateRawData: java.lang.String getDate()
androidx.fragment.app.Fragment: void postponeEnterTransition()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.spikeapi.network.request.SleepSummary: com.spikeapi.network.request.SleepSummary copy$default(com.spikeapi.network.request.SleepSummary,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Float,java.lang.Integer,java.lang.Double,java.lang.Long,java.lang.Long,java.lang.Float,java.lang.Float,java.lang.Integer,int,java.lang.Object)
com.spikeapi.network.request.WeightStats: java.lang.Double getAvg()
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double component16()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.spikeapi.network.request.OxygenSaturationSummary: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.activity.ComponentActivity: void onTrimMemory(int)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List getLaps()
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
com.spikeapi.network.request.CaloriesRawData: CaloriesRawData()
com.spikeapi.network.response.SpikeSourceWebhook: java.lang.String component3()
com.spikeapi.network.request.DistanceRawData: java.util.List getValues()
com.spikeapi.network.response.IntradayStepsData: java.lang.Integer getValue()
com.yalantis.ucrop.view.TransformImageView: void setImageBitmap(android.graphics.Bitmap)
com.spikeapi.network.request.SpikeRequest: java.lang.String getSubmittedAt()
com.spikeapi.network.request.BreathingRawData: java.lang.String getTimeZoneOffset()
com.spikeapi.network.response.IntradayStepsData: boolean equals(java.lang.Object)
com.spikeapi.network.request.SessionsRequest: java.lang.String getSpikeSdkVersion()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.moengage.core.internal.push.base.PushBaseHandler: void navigateToSettings(android.content.Context)
com.spikeapi.network.request.DistanceSummary: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.spikeapi.network.response.CaloriesResponseData: com.spikeapi.network.response.CaloriesResponseData copy$default(com.spikeapi.network.response.CaloriesResponseData,java.lang.String,java.util.List,java.lang.String,java.lang.Integer,int,java.lang.Object)
kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.ParameterNameRenderingPolicy valueOf(java.lang.String)
com.google.firebase.sessions.EventType: com.google.firebase.sessions.EventType[] values()
com.spikeapi.network.response.TimeSeriesData: com.spikeapi.network.response.TimeSeriesData copy$default(com.spikeapi.network.response.TimeSeriesData,java.lang.String,java.lang.Double,int,java.lang.Object)
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract[] values()
androidx.cardview.widget.CardView: void setCardElevation(float)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
androidx.fragment.app.Fragment: void setSharedElementNames(java.util.ArrayList,java.util.ArrayList)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
com.spikeapi.network.request.HeartRate: int hashCode()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel[] values()
com.spikeapi.network.response.BodyResponseData: java.lang.String getDataType()
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
com.spikeapi.network.request.StepsRecord: com.spikeapi.network.request.StepsRecord copy$default(com.spikeapi.network.request.StepsRecord,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,int,java.lang.Object)
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long getAvgHr()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getDistance()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getMinHr()
androidx.fragment.app.Fragment: void performViewCreated()
com.spikeapi.SpikeConnection: java.lang.Object revokeAllPermissions(kotlin.coroutines.Continuation)
com.spikeapi.model.SpikeSleepDataType: SpikeSleepDataType()
androidx.fragment.app.Fragment: boolean getPopDirection()
com.spikeapi.network.request.OxygenSaturationRawData: com.spikeapi.network.request.OxygenSaturationRawData copy$default(com.spikeapi.network.request.OxygenSaturationRawData,java.lang.String,java.lang.String,com.spikeapi.network.request.OxygenSaturationSummary,java.util.List,int,java.lang.Object)
com.spikeapi.network.request.TotalCaloriesRecord: TotalCaloriesRecord(java.lang.String,java.lang.String,java.lang.Double)
com.spikeapi.network.request.MuscleMass: java.util.List getValues()
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
com.spikeapi.network.response.HeightData: java.lang.Double component1()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.spikeapi.SpikeEnvironment: com.spikeapi.SpikeEnvironment[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.spikeapi.network.response.ActivitySummaryResponseData: ActivitySummaryResponseData(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String)
com.spikeapi.network.response.SpikeSource: java.lang.String component1()
com.moengage.pushbase.internal.fragments.DatePickerFragment: void setDateSelectedListener(com.moengage.pushbase.internal.listener.DateSelectionListener)
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getBedtimeDuration()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroups(android.app.NotificationManager,java.util.List)
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
androidx.webkit.internal.ApiHelperForM: android.webkit.WebMessagePort[] createWebMessageChannel(android.webkit.WebView)
kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$Origin: kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$Origin valueOf(java.lang.String)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeCaloriesDataType getCALORIES()
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
com.spikeapi.network.response.BodyResponseData: com.spikeapi.network.response.BodyData getBodyData()
com.spikeapi.network.response.DiffFromBaselineTemperatureData: java.lang.Double getDiffTemperatureCelsius()
com.spikeapi.network.request.WaterPercentage: com.spikeapi.network.request.WaterPercentage copy(com.spikeapi.network.request.WaterPercentageStats,java.util.List)
com.spikeapi.network.request.HeartRateValue: int hashCode()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
com.spikeapi.network.request.HeartRateVariabilitySummary: java.lang.Integer getCount()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.spikeapi.model.SpikeWebhookJob: java.lang.String component4()
com.spikeapi.network.request.BreathingSummary: com.spikeapi.network.request.BreathingSummary copy$default(com.spikeapi.network.request.BreathingSummary,java.lang.Double,java.lang.Integer,java.lang.Double,int,java.lang.Object)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
com.spikeapi.network.request.StepsRecord: com.spikeapi.network.request.StepsRecord copy(java.lang.String,java.lang.String,java.lang.Long,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.spikeapi.network.request.BMI: com.spikeapi.network.request.BMIStats component1()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.spikeapi.network.request.BloodPressureStats: BloodPressureStats()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
kotlin.text.Regex: java.lang.Object writeReplace()
kotlin.collections.builders.SerializedMap: java.lang.Object readResolve()
com.spikeapi.network.request.HeartRateVariabilitySummary: HeartRateVariabilitySummary(java.lang.Double,java.lang.Double,java.lang.Integer)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.spikeapi.network.request.HeightValue: com.spikeapi.network.request.HeightValue copy$default(com.spikeapi.network.request.HeightValue,java.lang.String,java.lang.Double,int,java.lang.Object)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
com.spikeapi.network.request.BloodPressure: com.spikeapi.network.request.BloodPressure copy$default(com.spikeapi.network.request.BloodPressure,com.spikeapi.network.request.BloodPressureStats,java.util.List,int,java.lang.Object)
com.spikeapi.network.request.BreathingSummary: java.lang.Integer component2()
com.spikeapi.network.request.DistanceSummary: DistanceSummary(java.lang.Double,java.lang.Integer,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.appevents.AccessTokenAppIdPair: java.lang.Object writeReplace()
com.spikeapi.network.response.IntradayStepsData: com.spikeapi.network.response.IntradayStepsData copy$default(com.spikeapi.network.response.IntradayStepsData,java.lang.String,java.lang.Integer,int,java.lang.Object)
androidx.core.text.HtmlCompat$Api24Impl: java.lang.String toHtml(android.text.Spanned,int)
com.spikeapi.network.request.OxygenSaturationSummary: com.spikeapi.network.request.OxygenSaturationSummary copy(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer)
com.spikeapi.network.request.MuscleMass: com.spikeapi.network.request.MuscleMassStats getStats()
androidx.webkit.internal.ApiHelperForO: boolean getSafeBrowsingEnabled(android.webkit.WebSettings)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.spikeapi.network.request.HeartRateValue: HeartRateValue()
com.spikeapi.SpikeExceptions$SpikePermissionsNotGrantedException: SpikeExceptions$SpikePermissionsNotGrantedException()
com.spikeapi.model.SpikeWebhookJob: java.lang.String component1()
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme[] values()
com.spikeapi.SpikeConnection: a.b access$getLogger$p(com.spikeapi.SpikeConnection)
com.spikeapi.network.request.BMI: BMI(com.spikeapi.network.request.BMIStats,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.StepsRawData: java.lang.String component1()
com.spikeapi.network.response.SpikeHRIntradayData: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.spikeapi.network.request.DistanceRecord: com.spikeapi.network.request.DistanceRecord copy(java.lang.String,java.lang.String,java.lang.Double)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData copy(java.lang.String,java.lang.Double)
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Integer component4()
com.spikeapi.network.request.HeartRateVariabilitySummary: com.spikeapi.network.request.HeartRateVariabilitySummary copy(java.lang.Double,java.lang.Double,java.lang.Integer)
com.spikeapi.network.response.BodyFatPercentageData: boolean equals(java.lang.Object)
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
com.spikeapi.network.request.SleepRawData: com.spikeapi.network.request.SleepSummary getSummary()
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind: kotlin.reflect.jvm.internal.impl.serialization.deserialization.AnnotatedCallableKind[] values()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
com.facebook.appevents.AppEvent$SerializationProxyV2: java.lang.Object readResolve()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.yalantis.ucrop.view.CropImageView: void setCropBoundsChangeListener(com.yalantis.ucrop.callback.CropBoundsChangeListener)
androidx.health.platform.client.proto.FieldType$Collection: androidx.health.platform.client.proto.FieldType$Collection valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
com.spikeapi.network.request.DistanceSummary: java.lang.Double component3()
com.spikeapi.network.request.SessionsRequest: java.lang.String getOsVersion()
androidx.fragment.app.Fragment: boolean isPostponed()
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
com.spikeapi.network.request.SleepSummary: java.lang.Long component4()
com.moengage.inapp.internal.model.enums.ClosePosition: com.moengage.inapp.internal.model.enums.ClosePosition[] values()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
com.spikeapi.network.request.RestingHeartRateSummary: java.lang.String toString()
kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation: kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$StringTableTypes$Record$Operation valueOf(java.lang.String)
com.spikeapi.SpikeConnection: java.lang.String getAppId()
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType valueOf(java.lang.String)
com.spikeapi.model.SpikeDistanceData: SpikeDistanceData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void onDragEnd(boolean)
com.spikeapi.network.request.BoneMass: boolean equals(java.lang.Object)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.Weight component2()
com.spikeapi.network.response.HrZone: int hashCode()
com.spikeapi.network.request.BreathingRecord: com.spikeapi.network.request.BreathingRecord copy$default(com.spikeapi.network.request.BreathingRecord,java.lang.String,java.lang.String,java.lang.Double,int,java.lang.Object)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.spikeapi.network.request.CaloriesRawData: CaloriesRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.TotalCaloriesBurned,com.spikeapi.network.request.ActiveCaloriesBurned,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.moengage.core.model.UserGender: com.moengage.core.model.UserGender[] values()
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
com.spikeapi.network.response.SpikeWebhookJobResponse: long getPayloadSize()
androidx.activity.ComponentActivity: android.content.Context peekAvailableContext()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.spikeapi.network.request.OxygenSaturationRawData: OxygenSaturationRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.OxygenSaturationSummary,java.util.List)
com.spikeapi.network.request.MuscleMassStats: MuscleMassStats(java.lang.Double,java.lang.Integer)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.spikeapi.network.response.Level: com.spikeapi.network.response.Level copy(java.lang.String,java.lang.String,java.lang.Integer)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.spikeapi.network.request.BoneMass: com.spikeapi.network.request.BoneMass copy$default(com.spikeapi.network.request.BoneMass,com.spikeapi.network.request.BoneMassStats,java.util.List,int,java.lang.Object)
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.WeightData component1()
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double component5()
com.moe.pushlibrary.activities.MoEActivity$onCreate$5: java.lang.String invoke()
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double getCoverage()
com.google.android.gms.internal.auth.zzhn: com.google.android.gms.internal.auth.zzhn[] values()
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: void setName(java.lang.String)
androidx.activity.ComponentActivity: void setContentView(int)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
com.spikeapi.model.SpikeOxygenSaturationDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
com.moengage.plugin.base.internal.model.AttributeType: com.moengage.plugin.base.internal.model.AttributeType[] values()
com.spikeapi.network.request.MuscleMassValue: MuscleMassValue(java.lang.String,java.lang.Double)
com.spikeapi.network.request.HeightStats: java.lang.Double component1()
androidx.lifecycle.ViewModel: ViewModel()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
com.spikeapi.network.response.SleepResponseData: com.spikeapi.network.response.SleepResponseData copy$default(com.spikeapi.network.response.SleepResponseData,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Integer,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.List,int,java.lang.Object)
com.spikeapi.model.SpikeCaloriesDataType: SpikeCaloriesDataType()
com.spikeapi.network.response.SleepResponseData: java.lang.String component1()
com.spikeapi.network.response.HeartRateResponseData: java.lang.String getDataType()
com.spikeapi.network.response.BloodPressureData: com.spikeapi.network.response.BloodPressureData copy(java.lang.String,java.lang.Integer,java.lang.Integer)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BoneMass getBoneMass()
com.spikeapi.network.request.SleepSummary: java.lang.Long component10()
com.spikeapi.network.request.BodyFatPercentageStats: BodyFatPercentageStats()
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.spikeapi.network.request.SkinTemperature: boolean equals(java.lang.Object)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.spikeapi.network.response.Sample: java.lang.Integer getMovingTime()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
com.spikeapi.network.request.Weight: int hashCode()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
com.spikeapi.model.SpikeWebhookJob: boolean equals(java.lang.Object)
com.spikeapi.network.request.Level: Level()
com.spikeapi.ConnectionState: java.lang.String toString()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
com.moengage.core.internal.storage.encrypted.EncryptedStorageHandler: android.content.SharedPreferences getEncryptedSharedPreference(android.content.Context,com.moengage.core.internal.model.InstanceMeta)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.appevents.ml.ModelManager$Task: com.facebook.appevents.ml.ModelManager$Task valueOf(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$Level[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.moengage.pushbase.internal.MoEPushReceiver: MoEPushReceiver()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component19()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
com.spikeapi.network.request.BoneMassValue: java.lang.String toString()
com.spikeapi.network.request.RestingHeartRateValue: com.spikeapi.network.request.RestingHeartRateValue copy$default(com.spikeapi.network.request.RestingHeartRateValue,java.lang.String,java.lang.String,java.lang.Long,int,java.lang.Object)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.types.TypeUsage: kotlin.reflect.jvm.internal.impl.types.TypeUsage[] values()
com.moengage.inapp.internal.model.enums.TemplateAlignment: com.moengage.inapp.internal.model.enums.TemplateAlignment valueOf(java.lang.String)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String component11()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.String component2()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.facebook.appevents.cloudbridge.AppEventUserAndAppDataField: com.facebook.appevents.cloudbridge.AppEventUserAndAppDataField valueOf(java.lang.String)
com.spikeapi.network.request.BreathingRecord: java.lang.String toString()
androidx.fragment.app.Fragment: android.content.Context getContext()
androidx.webkit.internal.ApiHelperForM: void setOffscreenPreRaster(android.webkit.WebSettings,boolean)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
com.spikeapi.network.request.SessionsRequest: java.lang.String component1()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.spikeapi.network.request.SkinTemperature: SkinTemperature(com.spikeapi.network.request.SkinTemperatureStats,java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.spikeapi.network.response.ActivitiesStreamResponseData: ActivitiesStreamResponseData(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Integer,java.lang.Boolean,java.lang.Integer,java.lang.Double,java.lang.Double,java.util.List,java.util.List,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.Boolean,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Integer,java.util.List)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.spikeapi.ConnectionState: java.lang.String component4()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.spikeapi.network.request.GlucoseRecord: GlucoseRecord()
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: java.lang.Double component2()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getCaloriesTotal()
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
com.moengage.plugin.base.internal.model.OptOutType: com.moengage.plugin.base.internal.model.OptOutType[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
com.spikeapi.SpikeExceptions$SpikeServerException: SpikeExceptions$SpikeServerException(java.lang.String)
com.spikeapi.network.request.CoreTemperatureStats: java.lang.Integer getCount()
com.spikeapi.network.response.BodyResponseData: java.util.List getBloodPressureData()
kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat: kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat[] values()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void openWebURL(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind: kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind[] values()
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.cardview.widget.CardView: void setMinimumWidth(int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
kotlin.collections.EmptyMap: java.lang.Object readResolve()
androidx.fragment.app.Fragment: java.lang.Object requireHost()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component4()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
com.spikeapi.network.response.BodyData: BodyData(com.spikeapi.network.response.WeightData,com.spikeapi.network.response.HeightData,com.spikeapi.network.response.BMIData,com.spikeapi.network.response.BodyFatPercentageData,com.spikeapi.network.response.BoneMassData,com.spikeapi.network.response.MuscleMassData,com.spikeapi.network.response.WaterPercentageData)
com.spikeapi.network.request.BloodPressure: BloodPressure(com.spikeapi.network.request.BloodPressureStats,java.util.List)
com.spikeapi.network.request.GlucoseRecord: GlucoseRecord(java.lang.String,java.lang.String,java.lang.Double)
com.spikeapi.network.response.MuscleMassData: boolean equals(java.lang.Object)
com.yalantis.ucrop.view.OverlayView: void setFreestyleCropEnabled(boolean)
com.spikeapi.network.request.RawHealthData$DefaultImpls: void getType$annotations()
androidx.fragment.app.Fragment: void performAttach()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
com.spikeapi.network.request.MuscleMassStats: java.lang.Integer component2()
com.spikeapi.network.request.SleepSummary: java.lang.Float getEfficiency()
com.spikeapi.network.request.GlucoseSummary: java.lang.Integer getCount()
com.spikeapi.network.request.RestingHeartRateSummary: int hashCode()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
com.spikeapi.network.request.BMI: com.spikeapi.network.request.BMI copy(com.spikeapi.network.request.BMIStats,java.util.List)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.activity.ComponentActivity: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.moengage.firebase.internal.FcmHandlerImpl: FcmHandlerImpl()
com.spikeapi.network.request.SleepSummary: java.lang.Double getAvgHrv()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$EventType: com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$EventType[] values()
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData copy(java.lang.String,java.lang.String,boolean)
kotlin.jvm.internal.CallableReference: boolean isFinal()
com.spikeapi.network.response.IntradayCaloriesData: java.lang.Integer component1()
kotlin.collections.builders.SetBuilder: java.lang.Object writeReplace()
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.spikeapi.network.request.HeartRateVariability: com.spikeapi.network.request.HeartRateVariability copy(com.spikeapi.network.request.HeartRateVariabilitySummary,java.util.List)
com.spikeapi.SpikeConnection: e.a getSpikeApi$sdk_release()
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.facebook.appevents.cloudbridge.SettingsAPIFields: com.facebook.appevents.cloudbridge.SettingsAPIFields[] values()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
com.spikeapi.network.request.MuscleMassValue: java.lang.String getTime()
com.spikeapi.network.request.SkinTemperatureStats: java.lang.String toString()
com.spikeapi.network.response.MuscleMassData: java.lang.Double component1()
com.facebook.CurrentAccessTokenExpirationBroadcastReceiver: CurrentAccessTokenExpirationBroadcastReceiver()
androidx.activity.ComponentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.spikeapi.network.request.CoreTemperatureStats: com.spikeapi.network.request.CoreTemperatureStats copy(java.lang.Double,java.lang.Integer)
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: java.lang.String component1()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.crypto.tink.proto.KeyData$KeyMaterialType: com.google.crypto.tink.proto.KeyData$KeyMaterialType valueOf(java.lang.String)
com.spikeapi.network.response.DiffFromBaselineTemperatureData: DiffFromBaselineTemperatureData(java.lang.Double,java.util.List)
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double component3()
com.spikeapi.network.request.StepsRawData: com.spikeapi.network.request.StepsRawData copy(java.lang.String,java.lang.String,com.spikeapi.network.request.StepsSummary,java.util.List)
com.facebook.internal.FeatureManager$Feature: com.facebook.internal.FeatureManager$Feature[] values()
com.spikeapi.network.response.CaloriesResponseData: java.lang.Integer component4()
com.spikeapi.network.request.BodyRawData: java.lang.String component1()
com.spikeapi.network.request.ActiveCaloriesSummary: java.lang.Double getAvg()
okhttp3.Protocol: okhttp3.Protocol[] values()
com.spikeapi.network.response.SpikeSourceWebhook: boolean component2()
com.spikeapi.network.request.GlucoseRecord: int hashCode()
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
com.spikeapi.network.response.ActivitiesStreamResponseData: com.spikeapi.network.response.ActivitiesStreamResponseData copy$default(com.spikeapi.network.response.ActivitiesStreamResponseData,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Integer,java.lang.Boolean,java.lang.Integer,java.lang.Double,java.lang.Double,java.util.List,java.util.List,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.Boolean,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Integer,java.util.List,int,int,java.lang.Object)
com.spikeapi.network.request.DistanceRawData: boolean equals(java.lang.Object)
com.spikeapi.model.SpikeGlucoseDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component18()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.spikeapi.network.request.Weight: com.spikeapi.network.request.WeightStats component1()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.spikeapi.network.request.StepsRawData: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
com.spikeapi.network.response.IntradayGlucoseData: java.lang.String component5()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.HeartRateRawData copy(java.lang.String,java.lang.String,com.spikeapi.network.request.HeartRate,com.spikeapi.network.request.RestingHeartRate,com.spikeapi.network.request.HeartRateVariability)
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
com.yalantis.ucrop.view.TransformImageView: android.net.Uri getImageOutputUri()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.spikeapi.network.response.SpikeHRVData: com.spikeapi.network.response.SpikeHRVData copy$default(com.spikeapi.network.response.SpikeHRVData,java.lang.Double,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.request.SleepSummary: java.lang.Long getTotalSleep()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.spikeapi.network.request.SleepRawData: SleepRawData(java.lang.String,java.lang.String,java.lang.String,com.spikeapi.network.request.SleepSummary,java.util.List)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzcf)
com.spikeapi.network.response.TemperatureTimeSeriesData: java.lang.Double getTemperatureCelsius()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
com.moengage.widgets.MoERatingBar: MoERatingBar(android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
androidx.health.connect.client.units.Power$Type: androidx.health.connect.client.units.Power$Type valueOf(java.lang.String)
com.spikeapi.network.request.HeartRateSummary: java.lang.String toString()
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double getRmssd()
kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.AnnotationArgumentsRenderingPolicy valueOf(java.lang.String)
com.spikeapi.network.request.GlucoseRawData: com.spikeapi.network.request.GlucoseRawData copy$default(com.spikeapi.network.request.GlucoseRawData,java.lang.String,java.lang.String,com.spikeapi.network.request.GlucoseSummary,java.util.List,int,java.lang.Object)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
com.spikeapi.network.response.GlucoseResponseData: java.lang.String component4()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double getMaxHeartRate()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.spikeapi.network.request.OxygenSaturationRecord: OxygenSaturationRecord(java.lang.String,java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
com.spikeapi.network.request.MuscleMassStats: int hashCode()
com.spikeapi.model.SpikeWebhookJob: SpikeWebhookJob(java.lang.String,com.spikeapi.model.SpikeDataType,long,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.OffsetDateTime)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.spikeapi.network.request.BoneMassValue: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
com.spikeapi.network.request.StepsRawData: java.util.List getValues()
com.spikeapi.network.response.TemperatureTimeSeriesData: com.spikeapi.network.response.TemperatureTimeSeriesData copy(java.lang.String,java.lang.Double)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
com.spikeapi.network.response.SpikeSource: boolean equals(java.lang.Object)
io.flutter.plugins.imagepicker.Messages$CacheRetrievalType: io.flutter.plugins.imagepicker.Messages$CacheRetrievalType[] values()
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
com.spikeapi.network.response.HrZone: java.lang.Double component3()
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.spikeapi.network.response.SpikeSourceWebhook: int hashCode()
com.spikeapi.network.response.BodyFatPercentageData: java.lang.Double getValue()
dev.spike.flutter_health_connect.model.SpikeLoggingData: java.lang.String component3()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
com.spikeapi.network.request.HeightValue: java.lang.String component1()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setLastName(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
com.spikeapi.network.request.HeartRate: java.lang.String toString()
io.flutter.plugins.firebase.dynamiclinks.FlutterFirebaseAppRegistrar: java.util.List getComponents()
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getDistance()
com.spikeapi.SpikeConnection: com.spikeapi.ConnectionState getConnectionState(java.lang.String)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.spikeapi.network.request.RestingHeartRateValue: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
com.moengage.pushbase.internal.MoEPushReceiver: void handleNotificationDismiss(android.content.Context,android.os.Bundle)
com.spikeapi.network.response.SpikeSource: boolean component2()
com.spikeapi.network.request.RestingHeartRateSummary: com.spikeapi.network.request.RestingHeartRateSummary copy(java.lang.Long,java.lang.Integer)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
io.flutter.plugins.imagepicker.ImagePickerCache$CacheType: io.flutter.plugins.imagepicker.ImagePickerCache$CacheType valueOf(java.lang.String)
com.spikeapi.network.request.StepsRawData: java.lang.String getDate()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.spikeapi.network.request.CoreTemperature: com.spikeapi.network.request.CoreTemperature copy$default(com.spikeapi.network.request.CoreTemperature,com.spikeapi.network.request.CoreTemperatureStats,java.util.List,int,java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.spikeapi.network.response.IntradayCaloriesData: java.lang.Integer getLevel()
com.spikeapi.network.request.Level: java.lang.String component3()
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
com.spikeapi.network.response.GlucoseResponseData: java.lang.String component3()
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double getRealtimeValue()
com.spikeapi.model.SpikeSleepData: java.util.List getEntries()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long getMaxHr()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getHighStressDuration()
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.String toString()
com.spikeapi.network.request.BoneMassValue: BoneMassValue(java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.ActiveCaloriesSummary: com.spikeapi.network.request.ActiveCaloriesSummary copy$default(com.spikeapi.network.request.ActiveCaloriesSummary,java.lang.Double,java.lang.Integer,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.response.HrZone: HrZone(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.String)
kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType: kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType[] values()
com.google.android.gms.internal.measurement.zzbl: com.google.android.gms.internal.measurement.zzbl[] values()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.webkit.internal.ApiHelperForM: void postVisualStateCallback(android.webkit.WebView,long,androidx.webkit.WebViewCompat$VisualStateCallback)
com.google.zxing.oned.Code128Writer$CType: com.google.zxing.oned.Code128Writer$CType valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime component7()
androidx.fragment.app.Fragment: boolean isInBackStack()
com.spikeapi.network.response.IntradayDistanceData: int hashCode()
com.spikeapi.network.response.StepsResponseData: com.spikeapi.network.response.StepsResponseData copy(java.lang.String,java.util.List,java.lang.String,java.lang.Integer)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setUsesChronometer(android.app.Notification$Builder,boolean)
com.spikeapi.network.request.SkinTemperatureStats: boolean equals(java.lang.Object)
com.spikeapi.network.request.BMIStats: java.lang.Double component1()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.spikeapi.network.request.BreathingRecord: int hashCode()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.spikeapi.network.response.SpikeResponse: java.util.List component4()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.request.GlucoseSummary: java.lang.Double component3()
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)
androidx.health.platform.client.proto.FieldType$Collection: androidx.health.platform.client.proto.FieldType$Collection[] values()
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
com.spikeapi.network.request.HeartRateVariabilitySummary: java.lang.Double getSleep()
com.yalantis.ucrop.view.OverlayView: void setDimmedColor(int)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeGlucoseDataType getGLUCOSE()
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.fragment.app.Fragment: void setFocusedView(android.view.View)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.google.android.gms.internal.measurement.zzlm: com.google.android.gms.internal.measurement.zzlm[] values()
com.facebook.login.LoginTargetApp: com.facebook.login.LoginTargetApp valueOf(java.lang.String)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
com.spikeapi.network.request.RestingHeartRateSummary: java.lang.Long getAvg()
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.yalantis.ucrop.view.OverlayView: int getFreestyleCropMode()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.spikeapi.network.request.CoreTemperature: java.util.List getValues()
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double getLf()
com.spikeapi.network.request.GlucoseRawData: java.util.List component4()
com.spikeapi.network.response.DiffFromBaselineTemperatureData: java.lang.Double component1()
androidx.fragment.app.DialogFragment: boolean isCancelable()
com.android.installreferrer.api.InstallReferrerClient: InstallReferrerClient()
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.Double component4()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component5()
com.google.crypto.tink.shaded.protobuf.ByteString$BoundedByteString: void readObject(java.io.ObjectInputStream)
com.facebook.internal.FeatureManager$Feature: com.facebook.internal.FeatureManager$Feature valueOf(java.lang.String)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
com.moengage.inbox.core.model.enums.NavigationType: com.moengage.inbox.core.model.enums.NavigationType valueOf(java.lang.String)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.Height component3()
androidx.fragment.app.DialogFragment: android.view.View onFindViewById(int)
com.moengage.pushbase.internal.MoETimePickerDialog: void setMax(int,int)
com.spikeapi.ConnectionState: java.lang.String getCallbackUrl()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.request.HeartRateVariabilitySummary: com.spikeapi.network.request.HeartRateVariabilitySummary copy$default(com.spikeapi.network.request.HeartRateVariabilitySummary,java.lang.Double,java.lang.Double,java.lang.Integer,int,java.lang.Object)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean)
androidx.activity.ComponentActivity: ComponentActivity()
com.spikeapi.network.response.Sample: java.lang.String component14()
com.spikeapi.network.request.Level: java.lang.String component2()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.fragment.app.FragmentActivity: void onDestroy()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.spikeapi.network.request.WeightStats: java.lang.Double component1()
com.moengage.pushbase.internal.fragments.TimePickerFragment: TimePickerFragment()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertCookieManager(java.lang.Object)
com.spikeapi.network.response.CaloriesResponseData: int hashCode()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.spikeapi.network.response.SpikeHRVIntradayValueData: int hashCode()
com.spikeapi.network.request.BodyFatPercentageValue: java.lang.Double getValue()
com.spikeapi.network.response.SpikeHRVData: java.lang.Double getDayHRV()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
androidx.activity.ComponentActivity: void lambda$new$2(android.content.Context)
androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DetailedTemperatureData component3()
com.yalantis.ucrop.view.CropImageView: void setMaxResultImageSizeY(int)
androidx.window.embedding.ActivityFilter: int hashCode()
com.spikeapi.network.response.SpikeHRVIntradayData: com.spikeapi.network.response.SpikeHRVIntradayValueData component2()
kotlin.reflect.jvm.internal.impl.types.model.TypeVariance: kotlin.reflect.jvm.internal.impl.types.model.TypeVariance valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.load.java.AnnotationQualifierApplicabilityType: kotlin.reflect.jvm.internal.impl.load.java.AnnotationQualifierApplicabilityType[] values()
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface: void remove()
com.moengage.core.internal.model.AttributeType: com.moengage.core.internal.model.AttributeType[] values()
com.spikeapi.network.request.SleepRawData: java.lang.String component3()
androidx.window.layout.EmptyDecorator: EmptyDecorator()
com.spikeapi.network.response.Sample: java.lang.String getTimeStart()
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Double component1()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: SpikeAndroidExceptionData(java.lang.String,java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.GlucoseRawData: java.lang.String getTimeZoneOffset()
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
com.spikeapi.network.response.BMIData: java.util.List getTimeseries()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind[] values()
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: int hashCode()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void setClearCachedDataIntervalMs(int)
com.spikeapi.SpikeExceptions$SpikeInvalidCredentialsException: SpikeExceptions$SpikeInvalidCredentialsException()
com.spikeapi.network.request.GlucoseRecord: java.lang.String getStartTime()
com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$EventType: com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$EventType valueOf(java.lang.String)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void trackClick(java.lang.String)
com.spikeapi.network.response.SessionsResponse: java.lang.String getEndUserId()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.spikeapi.network.request.Weight: Weight(com.spikeapi.network.request.WeightStats,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
com.facebook.LoggingBehavior: com.facebook.LoggingBehavior valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: DiffFromBaselineTemperatureTimeSeriesData(java.lang.String,java.lang.Double)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.fragment.app.DialogFragment: DialogFragment()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.spikeapi.network.response.TemperatureTimeSeriesData: TemperatureTimeSeriesData(java.lang.String,java.lang.Double)
com.facebook.gamingservices.GamingServices: GamingServices()
com.yalantis.ucrop.view.TransformImageView: TransformImageView(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.request.SleepSummary: java.lang.Float getSleepScore()
com.spikeapi.network.request.SleepRawData: com.spikeapi.network.request.SleepSummary component4()
com.spikeapi.network.request.BodyFatPercentageStats: java.lang.Integer getCount()
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.spikeapi.network.request.HeartRateValue: HeartRateValue(java.lang.String,java.lang.String,java.lang.Long,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Integer component15()
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
com.spikeapi.network.request.BoneMassStats: com.spikeapi.network.request.BoneMassStats copy(java.lang.Double,java.lang.Integer)
androidx.fragment.app.Fragment: void initLifecycle()
com.spikeapi.network.request.OxygenSaturationRecord: java.lang.String getStartTime()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String getSubmittedAt()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
com.spikeapi.network.request.StepsSummary: java.lang.Long getAvg()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.String getDate()
com.spikeapi.network.request.DistanceRecord: java.lang.String getStartTime()
com.spikeapi.model.SpikeActivitiesSummaryData: SpikeActivitiesSummaryData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setSubText(android.app.Notification$Builder,java.lang.CharSequence)
androidx.health.connect.client.units.Energy$Type: androidx.health.connect.client.units.Energy$Type[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
com.spikeapi.network.request.WeightValue: com.spikeapi.network.request.WeightValue copy(java.lang.String,java.lang.Double)
com.spikeapi.network.request.MuscleMassValue: boolean equals(java.lang.Object)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.google.zxing.pdf417.encoder.Compaction: com.google.zxing.pdf417.encoder.Compaction[] values()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$TypeParameter$Variance[] values()
com.spikeapi.network.request.CaloriesRawData: com.spikeapi.network.request.CaloriesRawData copy$default(com.spikeapi.network.request.CaloriesRawData,java.lang.String,java.lang.String,com.spikeapi.network.request.TotalCaloriesBurned,com.spikeapi.network.request.ActiveCaloriesBurned,int,java.lang.Object)
kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassKind: kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassKind[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.spikeapi.network.request.WeightValue: boolean equals(java.lang.Object)
com.spikeapi.network.request.HeartRateSummary: HeartRateSummary(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.WaterPercentageStats: WaterPercentageStats(java.lang.Double,java.lang.Integer)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getTotalElevationGain()
com.spikeapi.network.request.WeightStats: WeightStats(java.lang.Double,java.lang.Integer)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
com.spikeapi.network.request.RestingHeartRateSummary: java.lang.Long component1()
com.spikeapi.SpikeProcessedDataType: SpikeProcessedDataType(java.lang.String,int,java.lang.String)
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BMIData component3()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
com.spikeapi.network.response.HeartRateResponseData: java.util.List getHeartRateSamples()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.facebook.appevents.cloudbridge.ConversionsAPIUserAndAppDataField: com.facebook.appevents.cloudbridge.ConversionsAPIUserAndAppDataField[] values()
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.spikeapi.network.request.SkinTemperature: SkinTemperature(com.spikeapi.network.request.SkinTemperatureStats,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long getMinHr()
com.spikeapi.network.request.ActiveCaloriesSummary: com.spikeapi.network.request.ActiveCaloriesSummary copy(java.lang.Double,java.lang.Integer,java.lang.Double)
com.spikeapi.network.response.Sample: Sample(java.lang.Double,java.lang.Object,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Object,java.lang.Double,java.lang.Double,java.lang.Object,java.lang.String,java.lang.String,java.lang.Integer)
com.moengage.plugin.base.internal.model.events.EventType: com.moengage.plugin.base.internal.model.events.EventType valueOf(java.lang.String)
com.facebook.CustomTabActivity: CustomTabActivity()
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.spikeapi.network.request.BoneMassStats: int hashCode()
kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus: kotlin.reflect.jvm.internal.impl.load.java.descriptors.JavaMethodDescriptor$ParameterNamesStatus valueOf(java.lang.String)
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long getSteps()
com.spikeapi.network.response.HeightData: java.lang.Double getValue()
com.moengage.core.internal.data.reports.DataSyncJob: DataSyncJob()
com.spikeapi.network.request.MuscleMass: com.spikeapi.network.request.MuscleMass copy(com.spikeapi.network.request.MuscleMassStats,java.util.List)
com.spikeapi.network.request.DistanceSummary: com.spikeapi.network.request.DistanceSummary copy(java.lang.Double,java.lang.Integer,java.lang.Double)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.spikeapi.SpikeConnection$Companion: java.lang.Object createConnection$default(com.spikeapi.SpikeConnection$Companion,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.spikeapi.SpikeEnvironment,com.spikeapi.SpikeLogger,kotlin.coroutines.Continuation,int,java.lang.Object)
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$1: java.lang.String invoke()
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
com.spikeapi.network.request.RestingHeartRate: int hashCode()
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Integer component7()
com.yalantis.ucrop.view.GestureCropImageView: float getDoubleTapTargetScale()
com.spikeapi.model.SpikeWebhookJob: long component3()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getTimeEnd()
com.moengage.core.internal.model.cryptography.CryptographyState: com.moengage.core.internal.model.cryptography.CryptographyState[] values()
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
com.moengage.inapp.model.enums.ActionType: com.moengage.inapp.model.enums.ActionType valueOf(java.lang.String)
com.spikeapi.network.request.HeartRateVariabilitySummary: HeartRateVariabilitySummary()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: boolean onCreate()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.spikeapi.network.response.IntradayCaloriesData: IntradayCaloriesData(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Double)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.spikeapi.network.response.DiffFromBaselineTemperatureData: java.util.List component2()
com.spikeapi.network.response.SpikeHRVData: java.lang.Double component1()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
com.spikeapi.network.request.SpikeRequest: int hashCode()
com.spikeapi.network.request.CoreTemperatureStats: java.lang.Double component1()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String component1()
com.spikeapi.network.request.OxygenSaturationRawData: com.spikeapi.SpikeRawDataType getType()
com.spikeapi.network.response.Sample: java.lang.Double getLatitudeInDegree()
com.spikeapi.network.response.DistanceResponseData: java.lang.String getDate()
com.spikeapi.network.request.RestingHeartRateValue: java.lang.Long getValue()
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.moengage.core.internal.model.AttributeType: com.moengage.core.internal.model.AttributeType valueOf(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.spikeapi.network.response.BreathingResponseData: com.spikeapi.network.response.BreathingResponseData copy$default(com.spikeapi.network.response.BreathingResponseData,java.lang.Integer,java.lang.String,java.lang.String,java.util.List,int,java.lang.Object)
com.spikeapi.network.request.BloodPressureValue: java.lang.Double getValueDiastolic()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getEnterpriseAuthenticationAppLinkPolicyEnabled()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.spikeapi.network.request.Height: Height()
com.spikeapi.network.request.GlucoseRecord: java.lang.Double component3()
com.spikeapi.network.request.BodyRawData: BodyRawData(java.lang.String,com.spikeapi.network.request.Weight,com.spikeapi.network.request.Height,com.spikeapi.network.request.BMI,com.spikeapi.network.request.BodyFatPercentage,com.spikeapi.network.request.BoneMass,com.spikeapi.network.request.MuscleMass,com.spikeapi.network.request.WaterPercentage,com.spikeapi.network.request.SkinTemperature,com.spikeapi.network.request.CoreTemperature,com.spikeapi.network.request.BloodPressure)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.fragment.app.DialogFragment: void setupDialog(android.app.Dialog,int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
com.spikeapi.network.request.BreathingSummary: java.lang.Double component1()
com.spikeapi.model.SpikeWebhookJob: com.spikeapi.model.SpikeWebhookJob copy$default(com.spikeapi.model.SpikeWebhookJob,java.lang.String,com.spikeapi.model.SpikeDataType,long,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.OffsetDateTime,int,java.lang.Object)
com.spikeapi.network.request.SessionsRequest: java.lang.String component3()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setUserAttributeDate(java.lang.String,java.lang.String)
com.spikeapi.network.request.BodyFatPercentageValue: java.lang.Double component2()
com.spikeapi.network.request.RestingHeartRateSummary: RestingHeartRateSummary(java.lang.Long,java.lang.Integer)
com.spikeapi.network.request.SleepSummary: java.lang.Long getRem()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.spikeapi.network.response.DetailedTemperatureData: java.util.List component2()
com.moe.pushlibrary.activities.MoEActivity$onCreate$2: java.lang.Object invoke()
androidx.fragment.app.DialogFragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.spikeapi.model.SpikeStepsDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.network.response.BodyResponseData: com.spikeapi.network.response.BodyResponseData copy(java.lang.String,java.lang.Integer,com.spikeapi.network.response.BodyData,com.spikeapi.network.response.TemperatureData,java.util.List)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.moengage.core.internal.push.pushamp.PushAmpHandler: void initialise(android.content.Context)
com.yalantis.ucrop.view.UCropView: com.yalantis.ucrop.view.OverlayView getOverlayView()
com.spikeapi.network.request.Lap: java.lang.Integer getEndTime()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$VersionRequirement$VersionKind valueOf(java.lang.String)
com.spikeapi.network.request.BreathingRawData: java.util.List component4()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.spikeapi.network.response.SpikeResponse: java.lang.String component1()
com.spikeapi.model.SpikeGlucoseDataType: SpikeGlucoseDataType()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
com.spikeapi.model.SpikeStepsData: SpikeStepsData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.HeartRateRawData copy$default(com.spikeapi.network.request.HeartRateRawData,java.lang.String,java.lang.String,com.spikeapi.network.request.HeartRate,com.spikeapi.network.request.RestingHeartRate,com.spikeapi.network.request.HeartRateVariability,int,java.lang.Object)
com.yalantis.ucrop.view.OverlayView: void setOverlayViewChangeListener(com.yalantis.ucrop.callback.OverlayViewChangeListener)
com.spikeapi.model.SpikeActivitiesStreamDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.spikeapi.network.request.DistanceRecord: java.lang.String component1()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.facebook.appevents.ml.ModelManager$Task: com.facebook.appevents.ml.ModelManager$Task[] values()
com.moengage.inapp.internal.model.enums.WidgetType: com.moengage.inapp.internal.model.enums.WidgetType[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.String getEndTime()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.spikeapi.network.response.HeartRateResponseData: java.lang.Integer getTimezoneOffset()
com.facebook.FacebookActivity: FacebookActivity()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.fragment.app.Fragment: void setNextTransition(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.window.embedding.ActivityStack: int hashCode()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
com.spikeapi.network.request.ActiveCaloriesSummary: int hashCode()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.core.Core: Core()
kotlin.reflect.jvm.internal.impl.types.model.CaptureStatus: kotlin.reflect.jvm.internal.impl.types.model.CaptureStatus[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.yalantis.ucrop.view.TransformImageView: void setMaxBitmapSize(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.yalantis.ucrop.view.UCropView: UCropView(android.content.Context,android.util.AttributeSet)
kotlin.reflect.jvm.internal.impl.renderer.PropertyAccessorRenderingPolicy: kotlin.reflect.jvm.internal.impl.renderer.PropertyAccessorRenderingPolicy valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
com.spikeapi.network.response.SpikeResponse: com.spikeapi.network.response.SpikeResponse copy(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.util.List)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat: kotlin.reflect.jvm.internal.impl.renderer.RenderingFormat valueOf(java.lang.String)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void trackEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)
androidx.activity.ComponentActivity: void reportFullyDrawn()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
com.spikeapi.network.response.BreathingIntradayData: BreathingIntradayData(java.lang.String,java.lang.Integer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
com.spikeapi.network.request.TotalCaloriesBurned: java.util.List getValues()
com.facebook.appevents.cloudbridge.CustomEventField: com.facebook.appevents.cloudbridge.CustomEventField[] values()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.spikeapi.network.request.WaterPercentageStats: WaterPercentageStats()
com.spikeapi.network.response.BodyFatPercentageData: com.spikeapi.network.response.BodyFatPercentageData copy$default(com.spikeapi.network.response.BodyFatPercentageData,java.lang.Double,java.util.List,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.spikeapi.network.request.BoneMassValue: java.lang.String component1()
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.spikeapi.network.request.BloodPressureStats: java.lang.Double component1()
com.spikeapi.network.request.DistanceRawData: com.spikeapi.network.request.DistanceRawData copy(java.lang.String,java.lang.String,com.spikeapi.network.request.DistanceSummary,java.util.List)
kotlin.reflect.jvm.internal.impl.resolve.deprecation.DeprecationLevelValue: kotlin.reflect.jvm.internal.impl.resolve.deprecation.DeprecationLevelValue valueOf(java.lang.String)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle bigPicture(android.app.Notification$BigPictureStyle,android.graphics.Bitmap)
com.spikeapi.network.request.ActiveCaloriesBurned: ActiveCaloriesBurned(com.spikeapi.network.request.ActiveCaloriesSummary,java.util.List)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean onWebAuthnIntent(android.webkit.WebView,android.app.PendingIntent,java.lang.reflect.InvocationHandler)
com.facebook.appevents.cloudbridge.AppEventUserAndAppDataField: com.facebook.appevents.cloudbridge.AppEventUserAndAppDataField[] values()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.window.core.Bounds: boolean isEmpty()
com.spikeapi.network.request.WaterPercentageStats: java.lang.Integer getCount()
androidx.core.app.BundleCompat$Api18Impl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedContainerAbiStability: kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedContainerAbiStability[] values()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
com.spikeapi.network.response.IntradayCaloriesData: int hashCode()
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
com.spikeapi.network.request.HeartRateSummary: HeartRateSummary(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer)
com.spikeapi.network.response.WeightData: java.util.List getTimeseries()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getMap()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.spikeapi.network.request.StepsRecord: StepsRecord(java.lang.String,java.lang.String,java.lang.Long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String component22()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind[] values()
com.google.android.gms.internal.auth.zzho: com.google.android.gms.internal.auth.zzho[] values()
com.spikeapi.network.request.OxygenSaturationRecord: int hashCode()
com.spikeapi.network.response.SessionsResponse: java.lang.Boolean getEndUserCreated()
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
com.spikeapi.network.response.BreathingResponseData: boolean equals(java.lang.Object)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.moengage.widgets.MoERatingBar: android.graphics.BitmapShader updateShader(int,int)
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.yalantis.ucrop.view.TransformImageView: int getMaxBitmapSize()
com.yalantis.ucrop.view.GestureCropImageView: void setRotateEnabled(boolean)
com.spikeapi.network.request.CoreTemperatureStats: CoreTemperatureStats()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.facebook.appevents.cloudbridge.AppEventType: com.facebook.appevents.cloudbridge.AppEventType valueOf(java.lang.String)
androidx.fragment.app.Fragment: void onPause()
com.spikeapi.network.request.StepsSummary: boolean equals(java.lang.Object)
com.spikeapi.network.request.DistanceRawData: DistanceRawData()
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Integer getFloors()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
com.spikeapi.network.request.WaterPercentageValue: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.facebook.appevents.cloudbridge.AppEventsConversionsAPITransformer$DataProcessingParameterName: com.facebook.appevents.cloudbridge.AppEventsConversionsAPITransformer$DataProcessingParameterName valueOf(java.lang.String)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
dev.spike.flutter_health_connect.model.SpikeOperationResult: dev.spike.flutter_health_connect.model.SpikeOperationResult copy$default(dev.spike.flutter_health_connect.model.SpikeOperationResult,boolean,int,java.lang.Object)
com.facebook.appevents.FlushResult: com.facebook.appevents.FlushResult[] values()
com.spikeapi.network.request.Level: com.spikeapi.network.request.Level copy$default(com.spikeapi.network.request.Level,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime getDateTo()
com.spikeapi.network.request.DistanceRecord: com.spikeapi.network.request.DistanceRecord copy$default(com.spikeapi.network.request.DistanceRecord,java.lang.String,java.lang.String,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.response.IntradayDistanceData: java.lang.String getTime()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
com.spikeapi.network.request.BodyFatPercentageStats: java.lang.Double getAvg()
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
com.moengage.pushbase.activities.PushTracker: java.lang.String access$getTag$p(com.moengage.pushbase.activities.PushTracker)
com.spikeapi.network.request.BMIStats: java.lang.Integer getCount()
kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility: kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility[] values()
androidx.webkit.internal.ApiHelperForM: void close(android.webkit.WebMessagePort)
com.spikeapi.network.request.RestingHeartRateSummary: java.lang.Integer getCount()
com.spikeapi.network.response.IntradayDistanceData: java.lang.String toString()
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double component2()
com.spikeapi.network.request.BodyFatPercentageValue: BodyFatPercentageValue(java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.HeartRate: com.spikeapi.network.request.HeartRate copy(com.spikeapi.network.request.HeartRateSummary,java.util.List)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setGender(java.lang.String)
com.spikeapi.network.request.HeartRateVariability: java.lang.String toString()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
com.spikeapi.network.request.WaterPercentageValue: java.lang.String toString()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract: kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition$Contract valueOf(java.lang.String)
com.spikeapi.network.request.BoneMassStats: java.lang.Double component1()
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: java.lang.String component1()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.spikeapi.network.response.Sample: java.lang.Integer component5()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
kotlin.Metadata: int k()
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component9()
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
com.spikeapi.model.SpikeHeartRateDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.network.response.IntradayGlucoseData: com.spikeapi.network.response.IntradayGlucoseData copy$default(com.spikeapi.network.response.IntradayGlucoseData,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.String,java.lang.String,java.lang.Double,int,java.lang.Object)
androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.facebook.internal.FetchedAppSettingsManager$FetchAppSettingState: com.facebook.internal.FetchedAppSettingsManager$FetchAppSettingState[] values()
com.spikeapi.network.response.SpikeHRVIntradayData: SpikeHRVIntradayData(java.lang.String,com.spikeapi.network.response.SpikeHRVIntradayValueData)
com.spikeapi.network.response.HeartRateResponseData: java.lang.String toString()
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.spikeapi.network.request.CoreTemperatureStats: java.lang.Double getAvg()
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
com.spikeapi.network.request.BoneMass: BoneMass(com.spikeapi.network.request.BoneMassStats,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.moengage.inapp.internal.model.enums.CampaignSubType: com.moengage.inapp.internal.model.enums.CampaignSubType[] values()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
com.spikeapi.network.request.HeartRateSummary: com.spikeapi.network.request.HeartRateSummary copy(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Integer)
com.spikeapi.SpikeConnection: void close()
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.spikeapi.SpikeLogger: boolean isErrorEnabled()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.spikeapi.network.request.BMI: java.lang.String toString()
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
com.spikeapi.network.request.CoreTemperature: com.spikeapi.network.request.CoreTemperatureStats getStats()
androidx.window.core.Version: int compareTo(java.lang.Object)
androidx.window.core.Version: java.lang.String getDescription()
com.spikeapi.network.request.TotalCaloriesRecord: java.lang.String toString()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$Kind: kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$Kind valueOf(java.lang.String)
com.google.crypto.tink.shaded.protobuf.JavaType: com.google.crypto.tink.shaded.protobuf.JavaType valueOf(java.lang.String)
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
com.spikeapi.network.request.OxygenSaturationRecord: com.spikeapi.network.request.OxygenSaturationRecord copy(java.lang.String,java.lang.String,java.lang.Double)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
com.moengage.inapp.internal.model.enums.UserInputType: com.moengage.inapp.internal.model.enums.UserInputType[] values()
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
com.spikeapi.network.response.Sample: java.lang.String toString()
com.spikeapi.network.request.HeartRate: com.spikeapi.network.request.HeartRateSummary component1()
com.spikeapi.network.response.WaterPercentageData: java.lang.Double component1()
com.spikeapi.SpikeConnection: void saveConnectionState(java.lang.String,com.spikeapi.ConnectionState)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
com.spikeapi.network.response.SpikeHRVData: com.spikeapi.network.response.SpikeHRVData copy(java.lang.Double,java.lang.Double)
androidx.activity.ComponentActivity: android.os.Bundle lambda$new$1()
com.spikeapi.SpikeRawDataType: SpikeRawDataType(java.lang.String,int,java.lang.String)
com.spikeapi.network.request.SleepSummary: java.lang.Long getAvgHr()
com.yalantis.ucrop.view.CropImageView: void setTargetAspectRatio(float)
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.WindowLayoutInfo: int hashCode()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component14()
com.spikeapi.model.SpikeCaloriesData: SpikeCaloriesData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData copy$default(com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData,java.lang.String,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.response.SpikeHRIntradayData: java.lang.String component1()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List getSamples()
com.spikeapi.model.SpikeBodyDataType: SpikeBodyDataType()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
com.spikeapi.network.request.DistanceRawData: java.lang.String getDate()
com.spikeapi.network.response.Sample: com.spikeapi.network.response.Sample copy$default(com.spikeapi.network.response.Sample,java.lang.Double,java.lang.Object,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Object,java.lang.Double,java.lang.Double,java.lang.Object,java.lang.String,java.lang.String,java.lang.Integer,int,java.lang.Object)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setEnterpriseAuthenticationAppLinkPolicyEnabled(boolean)
com.spikeapi.network.response.HrZone: java.lang.String getName()
com.spikeapi.network.request.DistanceRecord: java.lang.String getEndTime()
com.spikeapi.SpikeConnection: void setConnectionState$sdk_release(com.spikeapi.ConnectionState)
com.moengage.inapp.internal.model.enums.LifecycleType: com.moengage.inapp.internal.model.enums.LifecycleType[] values()
com.moengage.widgets.MoERatingBar: android.graphics.Path createStarBySize(float,int)
com.spikeapi.network.response.BloodPressureData: java.lang.String toString()
androidx.fragment.app.Fragment: void setPopDirection(boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.moengage.inapp.model.enums.ActionType: com.moengage.inapp.model.enums.ActionType[] values()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
dev.spike.flutter_health_connect.model.SpikeOperationResult: boolean component1()
com.spikeapi.network.request.StepsSummary: java.lang.Long getSum()
com.spikeapi.network.request.HeartRateVariabilitySummary: java.lang.Integer component3()
com.spikeapi.network.request.CoreTemperatureStats: int hashCode()
com.spikeapi.network.response.DistanceResponseData: int hashCode()
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeBodyDataType getBODY()
com.moengage.firebase.internal.FcmHandlerImpl: void registerForPushToken(android.content.Context)
com.spikeapi.network.request.WaterPercentageValue: com.spikeapi.network.request.WaterPercentageValue copy$default(com.spikeapi.network.request.WaterPercentageValue,java.lang.String,java.lang.Double,int,java.lang.Object)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.spikeapi.network.request.Weight: Weight()
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
com.spikeapi.network.request.TotalCaloriesRecord: int hashCode()
com.moengage.core.DataCenter: com.moengage.core.DataCenter valueOf(java.lang.String)
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
com.spikeapi.network.request.CoreTemperatureStats: java.lang.Integer component2()
com.google.firebase.crashlytics.CrashlyticsRegistrar: CrashlyticsRegistrar()
com.spikeapi.network.request.GlucoseRecord: boolean equals(java.lang.Object)
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData copy$default(dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getAvgHrv()
com.spikeapi.network.response.Sample: java.lang.Integer getHeartrate()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
com.spikeapi.network.request.SleepRawData: boolean equals(java.lang.Object)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.spikeapi.network.request.GlucoseRawData: boolean equals(java.lang.Object)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
com.spikeapi.network.response.Lap: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
dev.spike.flutter_health_connect.model.SpikeLoggingData: java.lang.String getEventName()
com.spikeapi.network.response.BreathingResponseData: java.lang.String getSource()
com.spikeapi.network.request.CaloriesRawData: java.lang.String toString()
com.spikeapi.network.request.BoneMass: com.spikeapi.network.request.BoneMass copy(com.spikeapi.network.request.BoneMassStats,java.util.List)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
com.yalantis.ucrop.view.OverlayView: void setFreestyleCropMode(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
androidx.webkit.internal.ApiHelperForM: void postMessage(android.webkit.WebMessagePort,android.webkit.WebMessage)
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime getCollectedAt()
com.spikeapi.network.response.SpikeResponse: java.util.List getSources()
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter getFullyDrawnReporter()
com.spikeapi.network.request.BloodPressureValue: int hashCode()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle setBigContentTitle(android.app.Notification$BigTextStyle,java.lang.CharSequence)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.spikeapi.ConnectionState: com.spikeapi.ConnectionState copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
kotlin.reflect.jvm.internal.impl.types.error.ErrorEntity: kotlin.reflect.jvm.internal.impl.types.error.ErrorEntity[] values()
com.moengage.pushbase.internal.fragments.LaterDialogFragment: LaterDialogFragment()
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long getSteps()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.spikeapi.network.request.BreathingRecord: java.lang.String component2()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.spikeapi.network.response.TemperatureTimeSeriesData: java.lang.String getTimestamp()
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
com.spikeapi.network.response.SpikeHRVData: java.lang.String toString()
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.MuscleMass component7()
com.spikeapi.network.request.TotalCaloriesRecord: java.lang.Double component3()
androidx.activity.ComponentActivity: void addOnTrimMemoryListener(androidx.core.util.Consumer)
com.spikeapi.network.response.GlucoseResponseData: java.lang.String getDate()
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.moengage.inapp.internal.model.enums.InAppType: com.moengage.inapp.internal.model.enums.InAppType valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Class$Kind[] values()
com.spikeapi.network.request.GlucoseSummary: GlucoseSummary(java.lang.Double,java.lang.Integer,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
com.spikeapi.network.request.ActiveCaloriesBurned: java.lang.String toString()
com.spikeapi.network.response.IntradayGlucoseData: int hashCode()
com.moengage.pushbase.internal.PushBaseHandlerImpl: void updateNotificationPermission(android.content.Context,com.moengage.core.internal.model.SdkInstance)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.moengage.pushbase.internal.fragments.TimePickerFragment: java.lang.String lambda$onDismiss$2()
com.yalantis.ucrop.view.TransformImageView: void setImageMatrix(android.graphics.Matrix)
com.spikeapi.network.request.WaterPercentageValue: WaterPercentageValue()
androidx.health.platform.client.proto.FieldType: androidx.health.platform.client.proto.FieldType[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ActivityStack: java.lang.String toString()
com.spikeapi.network.request.TotalCaloriesBurned: java.util.List component2()
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeActivitiesStreamDataType getACTIVITIES_STREAM()
dev.spike.flutter_health_connect.model.SpikeLoggingData: dev.spike.flutter_health_connect.model.SpikeLoggingData copy(java.lang.String,java.lang.String,java.lang.String)
com.spikeapi.network.response.HrZone: com.spikeapi.network.response.HrZone copy(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.String)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BMI component4()
com.spikeapi.network.request.StepsRecord: int hashCode()
com.spikeapi.network.request.BodyFatPercentageStats: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.spikeapi.network.request.SleepRawData: SleepRawData()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String toString()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getCaloriesBmr()
com.spikeapi.network.request.TotalCaloriesRecord: java.lang.String component1()
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getHigh()
kotlin.reflect.jvm.internal.impl.name.State: kotlin.reflect.jvm.internal.impl.name.State valueOf(java.lang.String)
com.yalantis.ucrop.UCropActivity: UCropActivity()
com.spikeapi.network.request.OxygenSaturationRecord: OxygenSaturationRecord()
com.spikeapi.network.request.HeartRateVariability: com.spikeapi.network.request.HeartRateVariabilitySummary component1()
com.spikeapi.network.response.DistanceResponseData: java.lang.String getSource()
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.spikeapi.network.request.WeightValue: java.lang.String getTime()
com.spikeapi.network.request.Level: java.lang.String getLevel()
com.spikeapi.network.request.SessionsRequest: com.spikeapi.network.request.SessionsRequest copy(java.lang.String,java.lang.String,java.lang.String)
com.spikeapi.network.request.OxygenSaturationRecord: java.lang.Double component3()
com.spikeapi.network.request.StepsSummary: java.lang.Long component3()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.request.SleepSummary: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
kotlin.reflect.jvm.internal.impl.types.error.ErrorEntity: kotlin.reflect.jvm.internal.impl.types.error.ErrorEntity valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void enableRestrictSensitiveWebContent()
androidx.window.embedding.SplitRule: int getMinWidth()
com.spikeapi.network.request.WeightValue: WeightValue()
kotlin.reflect.jvm.internal.impl.resolve.deprecation.DeprecationLevelValue: kotlin.reflect.jvm.internal.impl.resolve.deprecation.DeprecationLevelValue[] values()
io.flutter.plugins.imagepicker.Messages$CacheRetrievalType: io.flutter.plugins.imagepicker.Messages$CacheRetrievalType valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForM: void setWebMessageCallback(android.webkit.WebMessagePort,androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.HeartRate component3()
com.spikeapi.network.response.ActivitiesStreamResponseData: boolean equals(java.lang.Object)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
com.spikeapi.network.request.DistanceRawData: java.lang.String component1()
com.spikeapi.model.SpikeDistanceData: java.util.List getEntries()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroup(android.app.NotificationManager,android.app.NotificationChannelGroup)
com.spikeapi.network.response.BodyResponseData: boolean equals(java.lang.Object)
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType[] values()
com.spikeapi.network.request.TotalCaloriesSummary: java.lang.Double component3()
com.google.firebase.sessions.DataCollectionState: com.google.firebase.sessions.DataCollectionState valueOf(java.lang.String)
com.spikeapi.network.request.SleepSummary: java.lang.Float component6()
com.spikeapi.network.response.BodyResponseData: com.spikeapi.network.response.BodyResponseData copy$default(com.spikeapi.network.response.BodyResponseData,java.lang.String,java.lang.Integer,com.spikeapi.network.response.BodyData,com.spikeapi.network.response.TemperatureData,java.util.List,int,java.lang.Object)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
com.spikeapi.network.response.SpikeHRVIntradayData: java.lang.String component1()
com.spikeapi.network.response.HeartRateResponseData: java.lang.String getSource()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String component3()
androidx.fragment.app.Fragment: boolean isHidden()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component13()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
com.spikeapi.network.request.SpikeRequest: java.lang.String getDateFrom()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void copyText(java.lang.String,java.lang.String)
androidx.activity.ComponentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.spikeapi.network.request.ActivitiesStreamRawData: ActivitiesStreamRawData()
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double component3()
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DetailedTemperatureData getBaselineCoreTemperature()
com.spikeapi.model.SpikeWebhookJob: java.lang.String getCallbackUrl()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
com.spikeapi.network.request.BMIStats: BMIStats(java.lang.Double,java.lang.Integer)
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double component6()
com.spikeapi.network.response.SleepResponseData: java.lang.String component20()
com.moengage.pushbase.internal.fragments.LaterDialogFragment: void onCancel(android.content.DialogInterface)
androidx.window.embedding.SplitController: boolean isSplitSupported()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy valueOf(java.lang.String)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
com.moengage.inbox.core.model.enums.ActionType: com.moengage.inbox.core.model.enums.ActionType valueOf(java.lang.String)
com.facebook.appevents.cloudbridge.AppEventsConversionsAPITransformer$DataProcessingParameterName: com.facebook.appevents.cloudbridge.AppEventsConversionsAPITransformer$DataProcessingParameterName[] values()
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Double component3()
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
com.spikeapi.network.response.WaterPercentageData: com.spikeapi.network.response.WaterPercentageData copy(java.lang.Double,java.util.List)
com.spikeapi.network.request.ActiveCaloriesRecord: int hashCode()
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$LowerCapturedTypePolicy: kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$LowerCapturedTypePolicy valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.TypeComponentPosition[] values()
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getActivityName()
com.google.gson.internal.LazilyParsedNumber: void readObject(java.io.ObjectInputStream)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.spikeapi.network.request.SkinTemperatureValue: java.lang.String component1()
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BodyData copy$default(com.spikeapi.network.response.BodyData,com.spikeapi.network.response.WeightData,com.spikeapi.network.response.HeightData,com.spikeapi.network.response.BMIData,com.spikeapi.network.response.BodyFatPercentageData,com.spikeapi.network.response.BoneMassData,com.spikeapi.network.response.MuscleMassData,com.spikeapi.network.response.WaterPercentageData,int,java.lang.Object)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String toString()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
com.spikeapi.network.request.BreathingRecord: BreathingRecord(java.lang.String,java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void dismissMessage()
com.facebook.appevents.codeless.internal.EventBinding$MappingMethod: com.facebook.appevents.codeless.internal.EventBinding$MappingMethod[] values()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getAverageHrv()
com.spikeapi.network.request.ActivitiesStreamRawData: int hashCode()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component9()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component17()
com.spikeapi.network.response.SpikeSourceWebhook: java.lang.String getName()
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
com.spikeapi.network.response.TemperatureData: TemperatureData(com.spikeapi.network.response.DetailedTemperatureData,com.spikeapi.network.response.DetailedTemperatureData,com.spikeapi.network.response.DetailedTemperatureData,com.spikeapi.network.response.DiffFromBaselineTemperatureData)
com.yalantis.ucrop.view.CropImageView: float getMinScale()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.spikeapi.network.response.HrZone: java.lang.Double getMinutes()
androidx.fragment.app.Fragment: void noteStateNotSaved()
com.spikeapi.network.request.TotalCaloriesBurned: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.spikeapi.network.request.GlucoseRawData: GlucoseRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.GlucoseSummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.StepsRecord: java.lang.String component2()
com.google.firebase.sessions.FirebaseSessionsRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.spikeapi.network.request.BodyFatPercentageValue: com.spikeapi.network.request.BodyFatPercentageValue copy(java.lang.String,java.lang.Double)
com.spikeapi.network.request.WaterPercentageValue: boolean equals(java.lang.Object)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.spikeapi.network.response.HeartRateResponseData: boolean equals(java.lang.Object)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
com.spikeapi.network.request.SkinTemperature: SkinTemperature()
com.spikeapi.network.request.DistanceRawData: java.lang.String getTimeZoneOffset()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.moe.pushlibrary.activities.MoEActivity$onCreate$1: MoEActivity$onCreate$1(com.moe.pushlibrary.activities.MoEActivity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.spikeapi.network.request.BoneMassValue: BoneMassValue()
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
com.spikeapi.network.request.ActiveCaloriesBurned: java.util.List getValues()
com.squareup.moshi.JsonReader$Token: com.squareup.moshi.JsonReader$Token valueOf(java.lang.String)
com.spikeapi.network.response.SessionsResponse: java.lang.String component4()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
com.spikeapi.model.SpikeActivitiesStreamData: java.util.List getEntries()
androidx.webkit.internal.ApiHelperForP: android.webkit.TracingController getTracingControllerInstance()
com.spikeapi.network.request.GlucoseRawData: java.util.List getValues()
com.spikeapi.network.request.HeartRateSummary: java.lang.Long getAvg()
com.spikeapi.network.request.Lap: Lap()
com.spikeapi.network.response.GlucoseResponseData: java.lang.Double getAvgValue()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.String component1()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
com.spikeapi.network.response.BMIData: com.spikeapi.network.response.BMIData copy$default(com.spikeapi.network.response.BMIData,java.lang.Double,java.util.List,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getTimeStart()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.spikeapi.network.request.BodyFatPercentageStats: java.lang.String toString()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String component9()
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
com.google.crypto.tink.proto.OutputPrefixType: com.google.crypto.tink.proto.OutputPrefixType valueOf(java.lang.String)
com.spikeapi.network.response.BodyResponseData: java.lang.String getSource()
androidx.health.platform.client.proto.WireFormat$JavaType: androidx.health.platform.client.proto.WireFormat$JavaType[] values()
com.spikeapi.network.response.SpikeWebhookJobResponse: long component6()
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.DistanceSummary: DistanceSummary(java.lang.Double,java.lang.Integer,java.lang.Double)
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BloodPressure getBloodPressure()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.spikeapi.network.request.BodyRawData: java.lang.String toString()
com.spikeapi.network.response.BoneMassData: java.util.List getTimeseries()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
com.spikeapi.network.response.BoneMassData: BoneMassData(java.lang.Double,java.util.List)
com.spikeapi.network.request.SpikeRequest: java.lang.String component9()
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.spikeapi.network.request.BodyFatPercentageStats: BodyFatPercentageStats(java.lang.Double,java.lang.Integer)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.spikeapi.network.request.HeightValue: HeightValue()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
com.spikeapi.network.response.SpikeSourceWebhook: java.lang.String getMessage()
androidx.fragment.app.Fragment: int getExitAnim()
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
androidx.webkit.internal.ApiHelperForO: void setSafeBrowsingEnabled(android.webkit.WebSettings,boolean)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.request.HeightStats: com.spikeapi.network.request.HeightStats copy(java.lang.Double,java.lang.Integer)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.moengage.pushbase.internal.PushBaseHandlerImpl: void onAppOpen(android.content.Context)
com.spikeapi.model.SpikeGlucoseData: java.util.List getEntries()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.facebook.internal.instrument.InstrumentData$Type: com.facebook.internal.instrument.InstrumentData$Type valueOf(java.lang.String)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
com.spikeapi.network.request.ActiveCaloriesSummary: ActiveCaloriesSummary(java.lang.Double,java.lang.Integer,java.lang.Double)
com.spikeapi.SpikeExceptions: SpikeExceptions(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.Lambda: Lambda(int)
com.spikeapi.network.request.MuscleMassValue: int hashCode()
com.spikeapi.network.response.WaterPercentageData: java.lang.Double getValue()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
com.spikeapi.network.request.ActiveCaloriesRecord: ActiveCaloriesRecord(java.lang.String,java.lang.String,java.lang.Double,java.lang.Integer,java.lang.Double)
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void setImeVisibleListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.spikeapi.network.request.BreathingRecord: BreathingRecord(java.lang.String,java.lang.String,java.lang.Double)
com.spikeapi.network.response.HeartRateResponseData: java.util.List component7()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long component7()
com.spikeapi.network.request.MuscleMass: MuscleMass()
androidx.fragment.app.Fragment: boolean isInLayout()
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$1: MoEActivity$onCreate$4$shouldOverrideUrlLoading$1(com.moe.pushlibrary.activities.MoEActivity,java.lang.String)
com.spikeapi.network.request.ActiveCaloriesBurned: com.spikeapi.network.request.ActiveCaloriesSummary getSummary()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: boolean equals(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.spikeapi.network.request.BloodPressureStats: java.lang.Double getAvgDiastolic()
com.spikeapi.network.request.StepsRawData: com.spikeapi.network.request.StepsSummary getSummary()
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getCalories()
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double component4()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double getElevLow()
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
com.moengage.pushbase.internal.fragments.DatePickerFragment: java.lang.String lambda$onCancel$1()
com.spikeapi.network.request.WaterPercentageValue: WaterPercentageValue(java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
com.google.zxing.pdf417.encoder.Compaction: com.google.zxing.pdf417.encoder.Compaction valueOf(java.lang.String)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
com.spikeapi.network.request.SleepRawData: java.lang.String component1()
com.spikeapi.network.request.HeightStats: java.lang.Integer component2()
com.spikeapi.network.request.SleepRawData: int hashCode()
androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type valueOf(java.lang.String)
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DetailedTemperatureData getSkinTemperature()
com.facebook.appevents.AppEventsLogger$FlushBehavior: com.facebook.appevents.AppEventsLogger$FlushBehavior[] values()
com.moengage.pushbase.activities.PushClickDialogTracker: void onCreate(android.os.Bundle)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
com.spikeapi.network.request.MuscleMass: com.spikeapi.network.request.MuscleMass copy$default(com.spikeapi.network.request.MuscleMass,com.spikeapi.network.request.MuscleMassStats,java.util.List,int,java.lang.Object)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
com.spikeapi.network.request.BodyFatPercentage: int hashCode()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.spikeapi.network.request.WaterPercentage: WaterPercentage(com.spikeapi.network.request.WaterPercentageStats,java.util.List)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.spikeapi.network.response.IntradayStepsData: com.spikeapi.network.response.IntradayStepsData copy(java.lang.String,java.lang.Integer)
com.spikeapi.network.response.HeartRateResponseData: HeartRateResponseData(java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.util.List,com.spikeapi.network.response.SpikeHRVData,java.util.List,java.lang.String)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getTimezoneOffset()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
com.moengage.pushbase.internal.fragments.TimePickerFragment: void onCancel(android.content.DialogInterface)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.spikeapi.network.request.GlucoseRawData: int hashCode()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
com.facebook.appevents.AccessTokenAppIdPair$SerializationProxyV1: java.lang.Object readResolve()
com.spikeapi.network.request.RestingHeartRateValue: java.lang.String component2()
com.spikeapi.network.response.Sample: java.lang.String component13()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.spikeapi.network.response.SpikeWebhookJobResponse: int hashCode()
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.fragment.app.Fragment: int getNextTransition()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.spikeapi.network.response.GlucoseResponseData: java.util.List component5()
androidx.core.widget.NestedScrollView: int getScrollRange()
com.spikeapi.network.request.StepsSummary: java.lang.Long component1()
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
com.moengage.pushbase.internal.MoEPushReceiver: java.lang.String access$getTag$p(com.moengage.pushbase.internal.MoEPushReceiver)
androidx.activity.ComponentActivity: void onPanelClosed(int,android.view.Menu)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.facebook.appevents.FlushResult: com.facebook.appevents.FlushResult valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
kotlin.SynchronizedLazyImpl: java.lang.Object writeReplace()
com.spikeapi.network.response.Sample: java.lang.Double component6()
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.spikeapi.network.response.Sample: java.lang.Double component7()
com.spikeapi.network.response.HeartRateResponseData: com.spikeapi.network.response.HeartRateResponseData copy(java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.util.List,com.spikeapi.network.response.SpikeHRVData,java.util.List,java.lang.String)
com.spikeapi.model.SpikeWebhookJob: com.spikeapi.model.SpikeDataType component2()
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double getHf()
com.spikeapi.model.SpikeWebhookJob: java.lang.String toString()
com.spikeapi.network.request.SessionsRequest: java.lang.String toString()
com.spikeapi.network.response.DetailedTemperatureData: java.util.List getTimeseries()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component20()
androidx.security.crypto.MasterKey$Builder$Api23Impl$Api30Impl: void setUserAuthenticationParameters(android.security.keystore.KeyGenParameterSpec$Builder,int,int)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component24()
androidx.fragment.app.Fragment: void onLowMemory()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
com.spikeapi.network.request.HeightStats: java.lang.Integer getCount()
com.spikeapi.network.request.BloodPressureValue: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
com.spikeapi.model.SpikeActivitiesSummaryDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.network.response.Level: java.lang.String component1()
com.facebook.appevents.cloudbridge.SettingsAPIFields: com.facebook.appevents.cloudbridge.SettingsAPIFields valueOf(java.lang.String)
com.spikeapi.network.response.SpikeResponse: int hashCode()
com.facebook.AuthenticationTokenManager$CurrentAuthenticationTokenChangedBroadcastReceiver: AuthenticationTokenManager$CurrentAuthenticationTokenChangedBroadcastReceiver()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getProviderActivityName()
com.spikeapi.SpikeExceptions$SpikeInvalidCallbackUrlException: SpikeExceptions$SpikeInvalidCallbackUrlException()
com.facebook.login.LoginBehavior: com.facebook.login.LoginBehavior valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.google.gson.internal.LinkedTreeMap: void readObject(java.io.ObjectInputStream)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.spikeapi.network.request.ActivitiesSummaryRawData: com.spikeapi.network.request.ActivitiesSummaryRawData copy(java.lang.String,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$2: java.lang.String invoke()
com.spikeapi.network.response.SpikeWebhookJobResponse: com.spikeapi.network.response.SpikeWebhookJobResponse copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.String)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double getCaloriesBmr()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getWeightedAverageWatts()
com.spikeapi.network.request.GlucoseRecord: java.lang.String component1()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getAvgHr()
com.spikeapi.network.request.Lap: com.spikeapi.network.request.Lap copy$default(com.spikeapi.network.request.Lap,java.lang.Integer,java.lang.Integer,int,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double component6()
com.facebook.internal.SmartLoginOption: com.facebook.internal.SmartLoginOption[] values()
com.spikeapi.network.response.IntradayDistanceData: java.lang.Integer component2()
com.google.gson.ReflectionAccessFilter$FilterResult: com.google.gson.ReflectionAccessFilter$FilterResult[] values()
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.ActivitiesStreamRawData: ActivitiesStreamRawData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.String,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Double,java.lang.Double,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.model.SpikeHeartRateData: java.util.List getEntries()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.health.platform.client.proto.JavaType: androidx.health.platform.client.proto.JavaType valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double getValue()
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
dev.fluttercommunity.plus.share.ShareFileProvider: ShareFileProvider()
com.moe.pushlibrary.activities.MoEActivity$onCreate$4$shouldOverrideUrlLoading$1: java.lang.Object invoke()
com.spikeapi.network.request.HeartRateVariabilitySummary: java.lang.Double getDayAvg()
androidx.activity.ComponentActivity: void removeMenuProvider(androidx.core.view.MenuProvider)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.spikeapi.network.request.StepsSummary: StepsSummary()
com.spikeapi.network.response.SessionsResponse: com.spikeapi.network.response.SessionsResponse copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
com.yalantis.ucrop.view.GestureCropImageView: void setScaleEnabled(boolean)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getAvgHr()
androidx.fragment.app.DialogFragment: boolean getShowsDialog()
com.spikeapi.network.response.BreathingResponseData: BreathingResponseData(java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getLatency()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setEmailId(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.moengage.core.internal.push.base.PushBaseHandler: void onDatabaseMigration(android.content.Context,com.moengage.core.internal.model.SdkInstance,com.moengage.core.internal.model.SdkInstance,com.moengage.core.internal.storage.database.DbAdapter,com.moengage.core.internal.storage.database.DbAdapter)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.activity.ComponentActivity: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Double getCaloriesActive()
com.spikeapi.network.request.Weight: java.util.List component2()
com.spikeapi.network.request.ActiveCaloriesSummary: java.lang.Double component3()
com.yalantis.ucrop.view.OverlayView: void setCircleDimmedLayer(boolean)
com.spikeapi.network.response.BreathingResponseData: java.lang.String component3()
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
com.spikeapi.network.request.BMI: boolean equals(java.lang.Object)
com.spikeapi.network.response.SpikeHRVData: SpikeHRVData(java.lang.Double,java.lang.Double)
com.spikeapi.network.request.TotalCaloriesBurned: TotalCaloriesBurned()
com.spikeapi.network.request.SleepSummary: java.lang.Long component9()
dev.spike.flutter_health_connect.model.SpikeOperationResult: boolean getSuccess()
com.spikeapi.network.response.BoneMassData: int hashCode()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.WaterPercentageData component7()
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component8()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.spikeapi.network.response.SessionsResponse: java.lang.String getEndUserSessionId()
com.spikeapi.network.request.TotalCaloriesSummary: TotalCaloriesSummary()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getMedium()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.spikeapi.network.request.SpikeRequest: java.lang.String getSpikeSdkVersion()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.spikeapi.network.request.StepsRawData: java.lang.String component2()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void share(java.lang.String)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.spikeapi.network.response.IntradayDistanceData: IntradayDistanceData(java.lang.String,java.lang.Integer)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.spikeapi.ConnectionState: ConnectionState(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
com.spikeapi.network.response.BodyResponseData: java.lang.Integer component2()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: long getLongVersionCode(android.content.pm.PackageInfo)
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
androidx.window.R$attr: R$attr()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.browser.customtabs.CustomTabsIntent$Api24Impl: java.lang.String getDefaultLocale()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.spikeapi.network.response.Sample: com.spikeapi.network.response.Sample copy(java.lang.Double,java.lang.Object,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Object,java.lang.Double,java.lang.Double,java.lang.Object,java.lang.String,java.lang.String,java.lang.Integer)
com.spikeapi.network.request.Height: Height(com.spikeapi.network.request.HeightStats,java.util.List)
com.spikeapi.SpikeConnection$Companion: SpikeConnection$Companion()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.core.app.ActivityCompat$Api21Impl: void setEnterSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
com.moengage.core.model.IntegrationPartner: com.moengage.core.model.IntegrationPartner valueOf(java.lang.String)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setUserName(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
com.spikeapi.network.response.OxygenSaturationResponseData: com.spikeapi.network.response.OxygenSaturationResponseData copy$default(com.spikeapi.network.response.OxygenSaturationResponseData,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.util.List,java.lang.String,int,java.lang.Object)
com.google.zxing.datamatrix.encoder.SymbolShapeHint: com.google.zxing.datamatrix.encoder.SymbolShapeHint valueOf(java.lang.String)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.spikeapi.network.request.BodyFatPercentage: com.spikeapi.network.request.BodyFatPercentageStats component1()
com.moengage.plugin.base.internal.model.AttributeType: com.moengage.plugin.base.internal.model.AttributeType valueOf(java.lang.String)
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setMobileNumber(java.lang.String)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasMultipleSigners(android.content.pm.SigningInfo)
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
com.spikeapi.network.request.StepsRecord: java.lang.String getStartTime()
com.spikeapi.network.response.GlucoseResponseData: java.lang.String getSource()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
kotlin.UnsafeLazyImpl: java.lang.Object writeReplace()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$InvocationKind[] values()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setUserAttribute(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.spikeapi.network.request.WaterPercentageValue: java.lang.Double getValue()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.spikeapi.network.request.GlucoseRawData: java.lang.String getDate()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
androidx.webkit.internal.ApiHelperForO: android.content.pm.PackageInfo getCurrentWebViewPackage()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.facebook.appevents.cloudbridge.OtherEventConstants: com.facebook.appevents.cloudbridge.OtherEventConstants valueOf(java.lang.String)
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeActivitiesSummaryDataType getACTIVITIES_SUMMARY()
androidx.fragment.app.Fragment: void onDetach()
com.spikeapi.network.request.SkinTemperatureValue: boolean equals(java.lang.Object)
com.spikeapi.network.request.GlucoseRawData: GlucoseRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.GlucoseSummary,java.util.List)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
com.spikeapi.network.request.BoneMassValue: java.lang.Double getValue()
com.moengage.widgets.MoERatingBar: void setColor(int)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannels(android.app.NotificationManager,java.util.List)
com.spikeapi.network.request.ActiveCaloriesSummary: java.lang.Integer component2()
com.spikeapi.network.request.SpikeRequest: boolean equals(java.lang.Object)
com.spikeapi.network.response.IntradayGlucoseData: boolean equals(java.lang.Object)
androidx.window.core.Version: int getMajor()
com.spikeapi.network.request.SkinTemperatureStats: java.lang.Double component1()
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment)
com.spikeapi.network.request.CoreTemperatureStats: CoreTemperatureStats(java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.SkinTemperature: int hashCode()
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.spikeapi.network.response.Sample: java.lang.Object component2()
com.spikeapi.network.request.SpikeRequest: com.spikeapi.network.request.SpikeRequest copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.cardview.widget.CardView: float getRadius()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
androidx.window.layout.WindowInfoTracker: void reset()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.moengage.core.internal.model.cryptography.CryptographyAlgorithm: com.moengage.core.internal.model.cryptography.CryptographyAlgorithm valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.core.app.ActivityCompat$Api31Impl: boolean isLaunchedFromBubble(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
com.google.crypto.tink.proto.KeyStatusType: com.google.crypto.tink.proto.KeyStatusType valueOf(java.lang.String)
kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$Origin: kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$Origin[] values()
com.spikeapi.network.request.OxygenSaturationRawData: OxygenSaturationRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.OxygenSaturationSummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.moengage.widgets.MoERatingBar: android.graphics.Bitmap combineBitmaps(android.graphics.Bitmap,android.graphics.Bitmap)
com.moe.pushlibrary.activities.MoEActivity: java.lang.String access$getTag$p(com.moe.pushlibrary.activities.MoEActivity)
androidx.fragment.app.DialogFragment: DialogFragment(int)
com.spikeapi.network.response.DiffFromBaselineTemperatureData: java.lang.String toString()
androidx.fragment.app.FragmentActivity: void init()
com.spikeapi.network.request.OxygenSaturationRecord: java.lang.String getEndTime()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
com.moengage.inapp.internal.model.enums.CampaignSubType: com.moengage.inapp.internal.model.enums.CampaignSubType valueOf(java.lang.String)
androidx.fragment.app.FragmentActivity: void onStop()
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeStepsDataType getSTEPS()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
com.spikeapi.network.request.SessionsRequest: int hashCode()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getTimezoneOffset()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind[] values()
com.spikeapi.network.request.DistanceRawData: com.spikeapi.SpikeRawDataType getType()
com.spikeapi.network.request.BodyFatPercentage: BodyFatPercentage(com.spikeapi.network.request.BodyFatPercentageStats,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
com.spikeapi.model.SpikeWebhookJob: long getPayloadSize()
kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess: kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess[] values()
com.spikeapi.SpikeConnection: com.squareup.moshi.JsonAdapter getConnectionStateAdapter$sdk_release()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.window.embedding.SplitController: void clearRegisteredRules()
com.spikeapi.network.request.SleepSummary: SleepSummary(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Float,java.lang.Integer,java.lang.Double,java.lang.Long,java.lang.Long,java.lang.Float,java.lang.Float,java.lang.Integer)
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeSleepDataType getSLEEP()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.moe.pushlibrary.activities.MoEActivity$onCreate$6: java.lang.Object invoke()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String getDataType()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Modality valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForM: int getErrorCode(android.webkit.WebResourceError)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long component22()
com.spikeapi.network.request.BloodPressureStats: com.spikeapi.network.request.BloodPressureStats copy(java.lang.Double,java.lang.Double,java.lang.Integer)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
com.spikeapi.network.request.SleepSummary: java.lang.Double component8()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getMovingTime()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getAvgWatts()
kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility: kotlin.reflect.jvm.internal.impl.load.java.lazy.types.JavaTypeFlexibility valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.spikeapi.network.request.BoneMass: java.util.List getValues()
com.spikeapi.network.response.BMIData: java.util.List component2()
com.spikeapi.network.response.SleepResponseData: java.lang.String getBedtimeStart()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.webkit.internal.ApiHelperForOMR1: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
androidx.fragment.app.DialogFragment: int getTheme()
androidx.window.embedding.SplitRule: SplitRule()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.spikeapi.network.request.BoneMassValue: int hashCode()
com.spikeapi.network.request.WeightValue: WeightValue(java.lang.String,java.lang.Double)
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getHrLowest()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.spikeapi.network.response.Sample: java.lang.Object getSwimCadenceStrokesPerMinute()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.spikeapi.network.request.CaloriesRawData: com.spikeapi.SpikeRawDataType getType()
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.spikeapi.network.request.SpikeRequest: java.lang.String component3()
com.spikeapi.network.request.DistanceSummary: DistanceSummary()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler getMessagePayload()
androidx.health.platform.client.proto.PermissionProto$AccessType: androidx.health.platform.client.proto.PermissionProto$AccessType valueOf(java.lang.String)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection[] values()
com.spikeapi.network.request.GlucoseSummary: GlucoseSummary(java.lang.Double,java.lang.Integer,java.lang.Double)
com.spikeapi.network.request.CaloriesRawData: java.lang.String component1()
com.spikeapi.network.response.BMIData: java.lang.Double component1()
com.moengage.core.internal.push.pushamp.PushAmpHandler: void setupPushAmpForBackgroundMode(android.content.Context,com.moengage.core.internal.model.SdkInstance)
com.spikeapi.network.request.MuscleMass: java.lang.String toString()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component23()
com.spikeapi.network.response.WeightData: java.lang.String toString()
kotlin.reflect.KVariance: kotlin.reflect.KVariance valueOf(java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
com.spikeapi.network.request.SleepRawData: java.util.List getLevels()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection valueOf(java.lang.String)
com.spikeapi.network.response.StepsResponseData: StepsResponseData(java.lang.String,java.util.List,java.lang.String,java.lang.Integer)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.spikeapi.network.response.Lap: int hashCode()
com.yalantis.ucrop.view.TransformImageView: float getCurrentScale()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
com.spikeapi.network.response.TemperatureTimeSeriesData: int hashCode()
com.moengage.core.internal.push.pushamp.PushAmpHandler: void clearData(android.content.Context,com.moengage.core.internal.model.SdkInstance)
com.spikeapi.SpikeConnection: java.lang.Object getSessionData$sdk_release(java.lang.String,kotlin.coroutines.Continuation)
com.spikeapi.network.request.DistanceRawData: DistanceRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.DistanceSummary,java.util.List)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
com.spikeapi.network.request.SpikeRequest: java.lang.String toString()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.moengage.plugin.base.internal.model.PermissionType: com.moengage.plugin.base.internal.model.PermissionType valueOf(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
io.flutter.plugins.webviewflutter.JavaScriptChannel: void postMessage(java.lang.String)
com.spikeapi.network.response.BreathingIntradayData: java.lang.Integer getValue()
com.spikeapi.network.request.StepsRawData: com.spikeapi.network.request.StepsRawData copy$default(com.spikeapi.network.request.StepsRawData,java.lang.String,java.lang.String,com.spikeapi.network.request.StepsSummary,java.util.List,int,java.lang.Object)
com.spikeapi.network.request.CoreTemperatureStats: boolean equals(java.lang.Object)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.MuscleMass getMuscleMass()
com.spikeapi.network.request.Height: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String getDateTo()
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.spikeapi.network.response.Level: java.lang.Integer component3()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getAvgStressLevel()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.core.os.BundleApi18ImplKt: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String getNotificationId()
com.spikeapi.network.request.BloodPressure: java.lang.String toString()
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$FieldType[] values()
com.spikeapi.network.request.HeartRate: HeartRate(com.spikeapi.network.request.HeartRateSummary,java.util.List)
com.spikeapi.healthconnect.HealthConnectAvailability: com.spikeapi.healthconnect.HealthConnectAvailability valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.util.List component10()
com.spikeapi.network.response.IntradayStepsData: java.lang.Integer component2()
com.spikeapi.network.request.GlucoseSummary: java.lang.Double getAvg()
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.moengage.pushbase.activities.PushClickDialogTracker: void onDateDialogCancelled()
androidx.fragment.app.DialogFragment: int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
com.spikeapi.network.request.StepsRawData: com.spikeapi.SpikeRawDataType getType()
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor[] values()
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.spikeapi.network.request.ActivitiesStreamRawData: java.util.List getLaps()
com.spikeapi.network.response.HrZone: java.lang.Double getMax()
com.yalantis.ucrop.view.TransformImageView: void setScaleType(android.widget.ImageView$ScaleType)
com.spikeapi.network.request.OxygenSaturationRecord: java.lang.String component2()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getDeviceWatts()
com.yalantis.ucrop.view.OverlayView: void setCropGridColumnCount(int)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
com.spikeapi.network.response.SleepResponseData: java.lang.String getDataType()
com.spikeapi.network.request.Lap: Lap(java.lang.Integer,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
com.spikeapi.network.request.ActiveCaloriesRecord: ActiveCaloriesRecord(java.lang.String,java.lang.String,java.lang.Double,java.lang.Integer,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.yalantis.ucrop.view.OverlayView: void setTargetAspectRatio(float)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannelGroup)
com.moengage.pushbase.internal.MoEPushReceiver: void handleNotification(android.content.Context,android.os.Bundle)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.yalantis.ucrop.view.OverlayView: void setCropFrameStrokeWidth(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebAuthnSupport(int)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.window.embedding.SplitController: SplitController()
kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType: kotlin.reflect.jvm.internal.impl.builtins.PrimitiveType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component18()
com.yalantis.ucrop.view.TransformImageView: android.net.Uri getImageInputUri()
com.spikeapi.network.request.BoneMassValue: com.spikeapi.network.request.BoneMassValue copy$default(com.spikeapi.network.request.BoneMassValue,java.lang.String,java.lang.Double,int,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
com.moengage.pushbase.internal.PushBaseHandlerImpl: void navigateToSettings(android.content.Context)
com.spikeapi.network.request.BMIStats: com.spikeapi.network.request.BMIStats copy(java.lang.Double,java.lang.Integer)
com.spikeapi.network.request.StepsSummary: com.spikeapi.network.request.StepsSummary copy(java.lang.Long,java.lang.Integer,java.lang.Long)
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long component10()
com.spikeapi.network.request.Lap: java.lang.Integer component1()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
com.spikeapi.network.request.BodyRawData: com.spikeapi.SpikeRawDataType getType()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider)
com.spikeapi.network.request.BMIStats: BMIStats(java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
com.google.crypto.tink.proto.KeyStatusType: com.google.crypto.tink.proto.KeyStatusType[] values()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
com.moengage.pushbase.internal.fragments.DatePickerFragment: java.lang.String lambda$onDismiss$2()
com.spikeapi.network.request.SleepRawData: java.lang.String toString()
androidx.health.connect.client.units.Length$Type: androidx.health.connect.client.units.Length$Type valueOf(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
com.spikeapi.network.response.DetailedTemperatureData: DetailedTemperatureData(java.lang.Double,java.util.List)
androidx.startup.InitializationProvider: InitializationProvider()
com.spikeapi.network.response.TemperatureTimeSeriesData: com.spikeapi.network.response.TemperatureTimeSeriesData copy$default(com.spikeapi.network.response.TemperatureTimeSeriesData,java.lang.String,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.request.SkinTemperatureValue: java.lang.Double component2()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeHeartRateDataType getHEART_RATE()
com.spikeapi.network.request.BoneMass: java.lang.String toString()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
com.spikeapi.network.request.SleepSummary: com.spikeapi.network.request.SleepSummary copy(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Float,java.lang.Integer,java.lang.Double,java.lang.Long,java.lang.Long,java.lang.Float,java.lang.Float,java.lang.Integer)
androidx.fragment.app.FragmentActivity: void onPause()
com.spikeapi.network.response.IntradayCaloriesData: java.lang.Integer component2()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.response.DistanceResponseData: java.lang.String toString()
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.spikeapi.SpikeConnection: g.b getStorageManager$sdk_release()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Long getMaxHr()
com.spikeapi.network.response.BMIData: boolean equals(java.lang.Object)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getRestingHr()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.facebook.login.LoginBehavior: com.facebook.login.LoginBehavior[] values()
com.facebook.internal.instrument.InstrumentData$Type: com.facebook.internal.instrument.InstrumentData$Type[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.spikeapi.network.response.TemperatureData: boolean equals(java.lang.Object)
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.HeightData component2()
com.spikeapi.network.request.CoreTemperature: int hashCode()
androidx.fragment.app.Fragment: void restoreViewState()
androidx.window.embedding.SplitPairRule: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.CoreTemperature getCoreTemperature()
com.spikeapi.network.response.DiffFromBaselineTemperatureData: com.spikeapi.network.response.DiffFromBaselineTemperatureData copy$default(com.spikeapi.network.response.DiffFromBaselineTemperatureData,java.lang.Double,java.util.List,int,java.lang.Object)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component31()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
com.spikeapi.network.request.RestingHeartRate: com.spikeapi.network.request.RestingHeartRate copy$default(com.spikeapi.network.request.RestingHeartRate,com.spikeapi.network.request.RestingHeartRateSummary,java.util.List,int,java.lang.Object)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
com.spikeapi.network.request.DistanceSummary: java.lang.Double component1()
com.yalantis.ucrop.view.CropImageView: float getMaxScale()
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component8()
com.spikeapi.network.response.IntradayCaloriesData: java.lang.Double getValue()
com.spikeapi.network.response.BodyFatPercentageData: java.util.List getTimeseries()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType: kotlin.reflect.jvm.internal.impl.protobuf.WireFormat$JavaType[] values()
com.moengage.pushbase.internal.CacheStrategy: com.moengage.pushbase.internal.CacheStrategy valueOf(java.lang.String)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy valueOf(java.lang.String)
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void openRichLanding(java.lang.String,java.lang.String)
com.moengage.inapp.internal.model.enums.EvaluationStatusCode: com.moengage.inapp.internal.model.enums.EvaluationStatusCode[] values()
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Integer getHrZones()
com.spikeapi.network.request.HeartRateValue: com.spikeapi.network.request.HeartRateValue copy$default(com.spikeapi.network.request.HeartRateValue,java.lang.String,java.lang.String,java.lang.Long,int,java.lang.Object)
com.spikeapi.network.request.HeartRateVariability: HeartRateVariability(com.spikeapi.network.request.HeartRateVariabilitySummary,java.util.List)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer getAverageWatts()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String getTimeStart()
androidx.fragment.app.Fragment: boolean isHideReplaced()
androidx.fragment.app.Fragment: java.lang.String generateActivityResultKey()
com.spikeapi.network.request.SleepSummary: java.lang.Float getTemperatureDelta()
com.spikeapi.network.request.HeightStats: HeightStats()
androidx.appcompat.widget.SearchView: int getInputType()
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
com.spikeapi.network.request.MuscleMassValue: com.spikeapi.network.request.MuscleMassValue copy(java.lang.String,java.lang.Double)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component6()
com.spikeapi.network.response.BloodPressureData: java.lang.Integer component2()
com.moengage.pushbase.internal.fragments.DatePickerFragment: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void requestNotificationPermission()
kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind: kotlin.reflect.jvm.internal.impl.incremental.components.ScopeKind[] values()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.moengage.core.internal.model.DeviceType: com.moengage.core.internal.model.DeviceType valueOf(java.lang.String)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.spikeapi.network.request.StepsRawData: StepsRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.StepsSummary,java.util.List)
com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior: com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.spikeapi.network.response.BodyFatPercentageData: BodyFatPercentageData(java.lang.Double,java.util.List)
com.google.crypto.tink.shaded.protobuf.FieldType$Collection: com.google.crypto.tink.shaded.protobuf.FieldType$Collection valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForM: android.webkit.WebMessage createWebMessage(androidx.webkit.WebMessageCompat)
com.spikeapi.network.request.WaterPercentage: int hashCode()
com.spikeapi.network.response.SpikeWebhookJobResponse: SpikeWebhookJobResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.String)
com.spikeapi.network.response.IntradayDistanceData: com.spikeapi.network.response.IntradayDistanceData copy$default(com.spikeapi.network.response.IntradayDistanceData,java.lang.String,java.lang.Integer,int,java.lang.Object)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
com.spikeapi.network.request.ActivitiesStreamRawData: com.spikeapi.SpikeRawDataType getType()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.HeartRateVariability component5()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.moengage.pushbase.internal.PushBaseHandlerImpl: PushBaseHandlerImpl()
com.spikeapi.network.response.SleepResponseData: java.lang.Double getTemperatureDelta()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.spikeapi.network.response.ActivitySummaryResponseData: boolean equals(java.lang.Object)
okio.ByteString: void writeObject(java.io.ObjectOutputStream)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannel)
com.spikeapi.network.request.SleepSummary: java.lang.Long getAwake()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.health.connect.client.units.Volume$Type: androidx.health.connect.client.units.Volume$Type[] values()
com.spikeapi.network.request.SkinTemperatureValue: SkinTemperatureValue(java.lang.String,java.lang.Double)
com.spikeapi.model.SpikeBreathingData: SpikeBreathingData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
com.spikeapi.network.request.BoneMassStats: BoneMassStats(java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.response.Lap: Lap(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.spikeapi.network.response.BMIData: BMIData(java.lang.Double,java.util.List)
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.WaterPercentageData getWaterPercentage()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.spikeapi.network.response.BreathingIntradayData: java.lang.String toString()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzci)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.HeartRateVariability getHeartRateVariability()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.fragment.app.Fragment: void performDestroyView()
androidx.fragment.app.Fragment: int getId()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
com.spikeapi.network.request.BloodPressureStats: int hashCode()
com.spikeapi.network.request.StepsRawData: java.lang.String toString()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component18()
androidx.fragment.app.DialogFragment: android.app.Dialog access$000(androidx.fragment.app.DialogFragment)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.window.layout.WindowInfoTracker$Companion: void reset()
com.facebook.LoggingBehavior: com.facebook.LoggingBehavior[] values()
androidx.activity.ComponentActivity: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
com.spikeapi.network.response.Level: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget[] values()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.moengage.core.internal.model.cryptography.CryptographyType: com.moengage.core.internal.model.cryptography.CryptographyType[] values()
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
com.spikeapi.network.request.CoreTemperature: java.lang.String toString()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double getIf()
com.spikeapi.network.response.MuscleMassData: java.util.List component2()
com.spikeapi.network.request.StepsRecord: java.lang.String toString()
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
com.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)
com.spikeapi.network.request.MuscleMassStats: MuscleMassStats()
com.spikeapi.network.response.SpikeSourceWebhook: java.lang.String component1()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setContentType(android.media.AudioAttributes$Builder,int)
com.spikeapi.network.request.ActiveCaloriesSummary: java.lang.Integer getCount()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
com.spikeapi.network.request.GlucoseRawData: java.lang.String toString()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.spikeapi.network.response.Lap: com.spikeapi.network.response.Lap copy$default(com.spikeapi.network.response.Lap,java.lang.String,int,java.lang.Object)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.spikeapi.network.request.DistanceRawData: java.util.List component4()
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
com.moengage.plugin.base.internal.model.events.EventType: com.moengage.plugin.base.internal.model.events.EventType[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void trackDismiss()
com.spikeapi.network.response.WeightData: com.spikeapi.network.response.WeightData copy(java.lang.Double,java.util.List)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
com.spikeapi.network.request.HeartRateSummary: java.lang.Long component3()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
com.spikeapi.network.request.WeightValue: java.lang.Double getValue()
kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier: kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier valueOf(java.lang.String)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component18()
com.yalantis.ucrop.view.CropImageView: void setMaxResultImageSizeX(int)
com.spikeapi.network.request.GlucoseSummary: GlucoseSummary()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
com.spikeapi.network.request.BodyFatPercentageValue: java.lang.String toString()
com.spikeapi.network.response.SpikeSource: java.lang.String component3()
com.spikeapi.network.response.HrZone: java.lang.Double getMin()
kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess: kotlin.reflect.jvm.internal.KDeclarationContainerImpl$MemberBelonginess valueOf(java.lang.String)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.SkinTemperature component9()
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType[] values()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
com.spikeapi.network.response.OxygenSaturationResponseData: java.util.List getIntradayData()
androidx.fragment.app.Fragment: void initState()
com.spikeapi.network.request.DistanceRawData: java.lang.String component2()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
com.spikeapi.network.request.BreathingRawData: com.spikeapi.network.request.BreathingSummary component3()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
com.spikeapi.SpikeRawDataType: com.spikeapi.SpikeRawDataType[] $values()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.spikeapi.network.response.OxygenSaturationIntradayData: int hashCode()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.yalantis.ucrop.view.CropImageView: void setMaxScaleMultiplier(float)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
androidx.health.connect.client.units.Power$Type: androidx.health.connect.client.units.Power$Type[] values()
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$MemberKind valueOf(java.lang.String)
kotlin.collections.builders.ListBuilder: java.lang.Object writeReplace()
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] values()
com.moengage.core.internal.rest.RequestType: com.moengage.core.internal.rest.RequestType[] values()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getStandardizedSleepScore()
com.facebook.appevents.cloudbridge.ConversionsAPICustomEventField: com.facebook.appevents.cloudbridge.ConversionsAPICustomEventField valueOf(java.lang.String)
com.spikeapi.network.request.HeartRate: HeartRate()
com.moe.pushlibrary.activities.MoEActivity$onCreate$1: java.lang.String invoke()
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementSourceNames()
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
com.spikeapi.network.request.WeightValue: java.lang.String toString()
com.spikeapi.network.request.RestingHeartRate: RestingHeartRate(com.spikeapi.network.request.RestingHeartRateSummary,java.util.List)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String component4()
com.spikeapi.network.response.SpikeHRVIntradayData: com.spikeapi.network.response.SpikeHRVIntradayValueData getValue()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
com.spikeapi.network.response.ActivitySummaryResponseData: com.spikeapi.network.response.ActivitySummaryResponseData copy$default(com.spikeapi.network.response.ActivitySummaryResponseData,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,int,java.lang.Object)
androidx.core.content.FileProvider: FileProvider()
com.google.crypto.tink.proto.OutputPrefixType: com.google.crypto.tink.proto.OutputPrefixType[] values()
com.spikeapi.ConnectionState: java.lang.String component3()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.facebook.AccessTokenSource: com.facebook.AccessTokenSource[] values()
com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility: com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility valueOf(java.lang.String)
com.spikeapi.network.request.HeightStats: java.lang.Double getAvg()
com.spikeapi.network.request.OxygenSaturationRawData: java.util.List getValues()
com.spikeapi.model.SpikeBodyData: java.util.List getEntries()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.spikeapi.network.response.BodyResponseData: com.spikeapi.network.response.TemperatureData component4()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannel(android.app.NotificationManager,android.app.NotificationChannel)
androidx.activity.ComponentActivity: void initViewTreeOwners()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.spikeapi.network.request.GlucoseSummary: boolean equals(java.lang.Object)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
com.spikeapi.network.request.SleepRawData: java.lang.String getTimeZoneOffset()
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.window.layout.WindowMetricsCalculator: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
com.spikeapi.network.request.BloodPressureValue: BloodPressureValue(java.lang.String,java.lang.Double,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
com.moengage.inapp.internal.model.enums.EvaluationStatusCode: com.moengage.inapp.internal.model.enums.EvaluationStatusCode valueOf(java.lang.String)
com.moe.pushlibrary.activities.MoEActivity: MoEActivity()
com.spikeapi.network.request.GlucoseRecord: GlucoseRecord(java.lang.String,java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BodyFatPercentageData component4()
com.spikeapi.model.SpikeDistanceDataType: SpikeDistanceDataType()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double getMaxPaceInMinutesPerKilometer()
com.spikeapi.network.response.GlucoseResponseData: java.lang.String toString()
com.spikeapi.network.request.BoneMassValue: java.lang.String getTime()
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.spikeapi.network.response.BreathingResponseData: java.lang.Integer getAvgValue()
com.spikeapi.network.request.BreathingRecord: BreathingRecord()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
com.spikeapi.network.request.BloodPressureValue: java.lang.String toString()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void setFirstName(java.lang.String)
com.spikeapi.network.request.OxygenSaturationRecord: boolean equals(java.lang.Object)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
com.spikeapi.network.request.CaloriesRawData: java.lang.String getTimeZoneOffset()
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.moengage.pushbase.internal.fragments.TimePickerFragment: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzck)
com.spikeapi.network.response.DistanceResponseData: java.lang.Integer component4()
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
dev.spike.flutter_health_connect.model.SpikeLoggingData: java.lang.String toString()
com.spikeapi.network.request.Weight: java.util.List getValues()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.spikeapi.network.request.RestingHeartRateValue: java.lang.String getStartTime()
com.spikeapi.network.request.BMIStats: int hashCode()
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int)
com.spikeapi.network.request.HeartRateValue: java.lang.Long getValue()
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DiffFromBaselineTemperatureData getDiffFromBaselineTemperature()
com.moengage.firebase.internal.FcmHandlerImpl: java.lang.String access$getTag$p(com.moengage.firebase.internal.FcmHandlerImpl)
com.spikeapi.model.SpikeActivitiesSummaryData: java.util.List getEntries()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.spikeapi.network.request.BodyFatPercentage: java.util.List getValues()
com.moengage.pushbase.internal.fragments.LaterDialogFragment: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.spikeapi.network.response.CaloriesResponseData: java.lang.String toString()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double getTrendRate()
com.moengage.inapp.internal.html.HtmlJavaScriptInterface: void customAction(java.lang.String)
com.spikeapi.network.response.SpikeHRVIntradayData: java.lang.String getTime()
com.spikeapi.network.request.Level: Level(java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: byte[] getAsArrayBuffer()
com.spikeapi.network.request.MuscleMassStats: MuscleMassStats(java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.response.TemperatureTimeSeriesData: java.lang.String component1()
com.spikeapi.network.request.BloodPressureStats: java.lang.Double getAvgSystolic()
com.spikeapi.SpikeDataTypes: SpikeDataTypes()
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
androidx.health.platform.client.proto.FieldType: androidx.health.platform.client.proto.FieldType valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: java.lang.String getAsString()
com.spikeapi.network.request.Weight: Weight(com.spikeapi.network.request.WeightStats,java.util.List)
com.moe.pushlibrary.activities.MoEActivity$onCreate$3: java.lang.Object invoke()
io.flutter.plugins.imagepicker.Messages$SourceCamera: io.flutter.plugins.imagepicker.Messages$SourceCamera valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.webkit.internal.ApiHelperForM: androidx.webkit.WebMessageCompat createWebMessageCompat(android.webkit.WebMessage)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
com.spikeapi.network.response.IntradayStepsData: IntradayStepsData(java.lang.String,java.lang.Integer)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BodyFatPercentage getBodyFatPercentage()
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: java.lang.String getTimestamp()
com.facebook.login.Login: Login()
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.spikeapi.network.request.CoreTemperature: com.spikeapi.network.request.CoreTemperature copy(com.spikeapi.network.request.CoreTemperatureStats,java.util.List)
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.moengage.inbox.core.model.enums.ActionType: com.moengage.inbox.core.model.enums.ActionType[] values()
com.facebook.appevents.cloudbridge.ConversionsAPISection: com.facebook.appevents.cloudbridge.ConversionsAPISection[] values()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
com.spikeapi.network.request.DistanceSummary: java.lang.Integer getCount()
com.spikeapi.network.response.SpikeHRVIntradayValueData: java.lang.Double getHf()
androidx.window.core.Bounds: int getBottom()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: java.lang.String getMessage()
com.spikeapi.network.response.TemperatureData: com.spikeapi.network.response.DetailedTemperatureData component1()
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.spikeapi.network.request.TotalCaloriesBurned: com.spikeapi.network.request.TotalCaloriesSummary component1()
com.spikeapi.network.request.WeightValue: WeightValue(java.lang.String,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.Level: int hashCode()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.FirebaseInstanceId getInstance(com.google.firebase.FirebaseApp)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
com.spikeapi.network.request.HeartRate: HeartRate(com.spikeapi.network.request.HeartRateSummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.spikeapi.network.request.DistanceRawData: int hashCode()
com.spikeapi.network.request.TotalCaloriesBurned: int hashCode()
com.spikeapi.network.request.HeartRateVariabilityValue: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result: kotlin.reflect.jvm.internal.impl.resolve.OverridingUtil$OverrideCompatibilityInfo$Result valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Effect$EffectType[] values()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism valueOf(java.lang.String)
com.facebook.internal.CallbackManagerImpl$RequestCodeOffset: com.facebook.internal.CallbackManagerImpl$RequestCodeOffset[] values()
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
com.spikeapi.network.response.GlucoseResponseData: java.util.List getIntradayData()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
dev.spike.flutter_health_connect.model.SpikeLoggingData: int hashCode()
com.spikeapi.model.SpikeActivitiesSummaryDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.activity.ComponentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BloodPressure component11()
com.spikeapi.SpikeLogger: void info(java.lang.String)
com.spikeapi.network.request.BodyFatPercentage: java.util.List component2()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Double getDistance()
com.spikeapi.model.SpikeWebhookJob: java.time.OffsetDateTime component8()
androidx.core.app.NotificationCompatBuilder$Api19Impl: android.app.Notification$Builder setExtras(android.app.Notification$Builder,android.os.Bundle)
com.moengage.core.internal.model.ComplianceType: com.moengage.core.internal.model.ComplianceType valueOf(java.lang.String)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle createBigPictureStyle(android.app.Notification$Builder)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.spikeapi.network.request.CoreTemperatureValue: java.lang.Double getValue()
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.spikeapi.model.SpikeOxygenSaturationData: SpikeOxygenSaturationData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.yalantis.ucrop.view.GestureCropImageView: GestureCropImageView(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.request.TotalCaloriesSummary: java.lang.Double getSum()
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.String getStartTime()
com.spikeapi.network.request.BMIValue: com.spikeapi.network.request.BMIValue copy(java.lang.String,java.lang.Double)
com.spikeapi.network.request.WaterPercentageValue: java.lang.String component1()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
com.spikeapi.network.request.SkinTemperature: com.spikeapi.network.request.SkinTemperature copy(com.spikeapi.network.request.SkinTemperatureStats,java.util.List)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.spikeapi.network.request.MuscleMassStats: com.spikeapi.network.request.MuscleMassStats copy(java.lang.Double,java.lang.Integer)
androidx.fragment.app.DialogFragment: android.app.Dialog getDialog()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component12()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.spikeapi.network.request.SleepSummary: java.lang.Integer component13()
com.spikeapi.network.response.HeightData: com.spikeapi.network.response.HeightData copy(java.lang.Double,java.util.List)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
com.facebook.login.DefaultAudience: com.facebook.login.DefaultAudience[] values()
com.spikeapi.network.request.GlucoseRawData: com.spikeapi.SpikeRawDataType getType()
com.squareup.moshi.internal.Util: java.lang.String getKotlinMetadataClassName()
androidx.health.connect.client.aggregate.AggregateMetric$AggregationType: androidx.health.connect.client.aggregate.AggregateMetric$AggregationType valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
com.spikeapi.model.SpikeGlucoseDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitInfo: float getSplitRatio()
com.spikeapi.network.request.SleepSummary: java.lang.Integer component7()
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
androidx.fragment.app.DialogFragment: void onViewStateRestored(android.os.Bundle)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
com.spikeapi.network.response.DistanceResponseData: java.lang.String getDataType()
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode[] values()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.spikeapi.network.request.DistanceRecord: java.lang.Double getValue()
com.spikeapi.network.response.WeightData: java.lang.Double component1()
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double component3()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedContainerAbiStability: kotlin.reflect.jvm.internal.impl.serialization.deserialization.descriptors.DeserializedContainerAbiStability valueOf(java.lang.String)
com.spikeapi.network.response.BodyResponseData: java.util.List component5()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.moengage.inbox.core.model.enums.MediaType: com.moengage.inbox.core.model.enums.MediaType valueOf(java.lang.String)
com.spikeapi.network.request.HeartRateVariabilityValue: HeartRateVariabilityValue()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getElevHigh()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.spikeapi.network.response.HeightData: java.util.List component2()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType valueOf(java.lang.String)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.spikeapi.network.request.GlucoseSummary: java.lang.Double getSum()
com.yalantis.ucrop.view.CropImageView: CropImageView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.webkit.internal.ApiHelperForM: void setWebMessageCallback(android.webkit.WebMessagePort,androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat,android.os.Handler)
kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationLoader$PropertyRelatedElement: kotlin.reflect.jvm.internal.impl.load.kotlin.AbstractBinaryClassAnnotationLoader$PropertyRelatedElement[] values()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.spikeapi.network.request.BreathingRawData: com.spikeapi.SpikeRawDataType getType()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Expression$ConstantValue valueOf(java.lang.String)
com.moengage.core.internal.model.StorageEncryptionState: com.moengage.core.internal.model.StorageEncryptionState[] values()
com.spikeapi.SpikeExceptions$SpikeInvalidDateRangeException: SpikeExceptions$SpikeInvalidDateRangeException()
androidx.window.core.Bounds: int getRight()
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
com.spikeapi.network.response.BoneMassData: boolean equals(java.lang.Object)
kotlin.jvm.internal.CallableReference: CallableReference()
com.spikeapi.network.request.HeartRateRawData: java.lang.String toString()
androidx.fragment.app.Fragment: void performDestroy()
androidx.fragment.app.Fragment: int getPopEnterAnim()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.fragment.app.Fragment: void onStart()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.spikeapi.network.request.WaterPercentageStats: com.spikeapi.network.request.WaterPercentageStats copy$default(com.spikeapi.network.request.WaterPercentageStats,java.lang.Double,java.lang.Integer,int,java.lang.Object)
com.spikeapi.network.response.Sample: int hashCode()
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.spikeapi.network.response.BodyResponseData: BodyResponseData(java.lang.String,java.lang.Integer,com.spikeapi.network.response.BodyData,com.spikeapi.network.response.TemperatureData,java.util.List)
com.spikeapi.network.request.GlucoseRecord: com.spikeapi.network.request.GlucoseRecord copy$default(com.spikeapi.network.request.GlucoseRecord,java.lang.String,java.lang.String,java.lang.Double,int,java.lang.Object)
kotlin.reflect.jvm.internal.impl.descriptors.ClassKind: kotlin.reflect.jvm.internal.impl.descriptors.ClassKind valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.spikeapi.network.response.BreathingResponseData: java.lang.String getDate()
com.spikeapi.network.response.IntradayGlucoseData: java.lang.Double component7()
com.spikeapi.network.request.SkinTemperatureValue: com.spikeapi.network.request.SkinTemperatureValue copy(java.lang.String,java.lang.Double)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
com.spikeapi.SpikeLogger: boolean isDebugEnabled()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.ParcelFileDescriptor openFile(android.content.ContentProvider,android.net.Uri)
com.spikeapi.network.request.BodyFatPercentageStats: BodyFatPercentageStats(java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
com.spikeapi.network.request.BoneMass: com.spikeapi.network.request.BoneMassStats getStats()
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeDistanceDataType getDISTANCE()
com.spikeapi.network.request.TotalCaloriesSummary: java.lang.Double getAvg()
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Double getMin()
com.spikeapi.network.request.BreathingSummary: boolean equals(java.lang.Object)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long component17()
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.lifecycle.LifecycleCoroutineScope: LifecycleCoroutineScope()
com.spikeapi.network.request.CaloriesRawData: int hashCode()
androidx.fragment.app.FragmentActivity: void onResume()
com.spikeapi.network.response.GlucoseResponseData: com.spikeapi.network.response.GlucoseResponseData copy$default(com.spikeapi.network.response.GlucoseResponseData,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.util.List,int,java.lang.Object)
androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
androidx.fragment.app.Fragment: float getPostOnViewCreatedAlpha()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
com.spikeapi.network.request.RestingHeartRate: java.lang.String toString()
androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
com.yalantis.ucrop.view.GestureCropImageView: void setDoubleTapScaleSteps(int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
com.spikeapi.network.request.StepsRawData: StepsRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.StepsSummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.activity.ComponentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.spikeapi.network.request.HeartRateRawData: HeartRateRawData()
com.spikeapi.network.response.Lap: java.lang.String getTimeStart()
com.moengage.pushbase.internal.fragments.DatePickerFragment: void onCancel(android.content.DialogInterface)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Type$Argument$Projection[] values()
com.yalantis.ucrop.view.GestureCropImageView: void setGestureEnabled(boolean)
com.spikeapi.network.response.SpikeSourceWebhook: java.lang.String toString()
com.facebook.FacebookRequestError$Category: com.facebook.FacebookRequestError$Category[] values()
kotlin.reflect.jvm.internal.impl.types.model.TypeVariance: kotlin.reflect.jvm.internal.impl.types.model.TypeVariance[] values()
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
com.spikeapi.network.request.HeightValue: int hashCode()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$Kind: kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltIns$Kind[] values()
com.spikeapi.network.request.RestingHeartRateValue: RestingHeartRateValue(java.lang.String,java.lang.String,java.lang.Long,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.network.request.WaterPercentageValue: java.lang.String getTime()
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
com.spikeapi.network.request.CoreTemperatureValue: CoreTemperatureValue()
com.spikeapi.network.response.SpikeWebhookJobResponse: com.spikeapi.network.response.SpikeWebhookJobResponse copy$default(com.spikeapi.network.response.SpikeWebhookJobResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String,java.lang.String,int,java.lang.Object)
com.spikeapi.model.SpikeBreathingDataType: SpikeBreathingDataType()
com.spikeapi.network.request.BreathingRecord: boolean equals(java.lang.Object)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.spikeapi.network.request.ActivitiesSummaryRawData: ActivitiesSummaryRawData()
com.spikeapi.network.response.BodyResponseData: com.spikeapi.network.response.TemperatureData getTemperatureData()
com.spikeapi.network.response.SpikeHRVIntradayData: com.spikeapi.network.response.SpikeHRVIntradayData copy$default(com.spikeapi.network.response.SpikeHRVIntradayData,java.lang.String,com.spikeapi.network.response.SpikeHRVIntradayValueData,int,java.lang.Object)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
com.yalantis.ucrop.view.OverlayView: OverlayView(android.content.Context,android.util.AttributeSet)
com.moengage.pushbase.internal.fragments.TimePickerFragment: void setTimeSelectedListener(com.moengage.pushbase.internal.listener.TimeSelectionListener)
com.moengage.core.internal.model.ComplianceType: com.moengage.core.internal.model.ComplianceType[] values()
com.spikeapi.network.request.BMI: com.spikeapi.network.request.BMIStats getStats()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.response.DiffFromBaselineTemperatureData: com.spikeapi.network.response.DiffFromBaselineTemperatureData copy(java.lang.Double,java.util.List)
com.moengage.firebase.internal.FcmHandlerImpl: void initialiseModule(android.content.Context)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.fragment.app.Fragment: java.lang.String toString()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebChromeClient(android.webkit.WebChromeClient)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String component7()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api19Impl: android.os.Bundle getExtras(android.view.accessibility.AccessibilityNodeInfo)
com.spikeapi.network.response.Sample: java.lang.Double getAirTemperature()
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier[] values()
androidx.health.platform.client.proto.WireFormat$JavaType: androidx.health.platform.client.proto.WireFormat$JavaType valueOf(java.lang.String)
com.moengage.pushbase.push.PushMessageListener: PushMessageListener()
com.spikeapi.network.request.BodyRawData: int hashCode()
com.spikeapi.model.SpikeStepsDataType: SpikeStepsDataType()
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
com.spikeapi.network.response.TemperatureData: java.lang.String toString()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
com.spikeapi.network.request.BloodPressure: boolean equals(java.lang.Object)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.spikeapi.network.response.IntradayCaloriesData: java.lang.Integer getMets()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getDataType()
androidx.window.core.Bounds: int getLeft()
com.spikeapi.network.request.GlucoseRawData: com.spikeapi.network.request.GlucoseSummary component3()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.webkit.internal.ApiHelperForOMR1: void showInterstitial(android.webkit.SafeBrowsingResponse,boolean)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
com.spikeapi.network.request.ActiveCaloriesSummary: boolean equals(java.lang.Object)
com.spikeapi.network.response.WaterPercentageData: int hashCode()
com.spikeapi.network.request.MuscleMassStats: boolean equals(java.lang.Object)
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus valueOf(java.lang.String)
com.spikeapi.network.response.BreathingResponseData: com.spikeapi.network.response.BreathingResponseData copy(java.lang.Integer,java.lang.String,java.lang.String,java.util.List)
androidx.fragment.app.Fragment: int getPopExitAnim()
com.spikeapi.network.request.OxygenSaturationRawData: java.lang.String getTimeZoneOffset()
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.spikeapi.network.response.Sample: java.lang.Double component11()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.health.platform.client.proto.JavaType: androidx.health.platform.client.proto.JavaType[] values()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.health.connect.client.aggregate.AggregateMetric$AggregationType: androidx.health.connect.client.aggregate.AggregateMetric$AggregationType[] values()
androidx.health.connect.client.units.Velocity$Type: androidx.health.connect.client.units.Velocity$Type valueOf(java.lang.String)
com.spikeapi.network.request.Level: java.lang.String toString()
com.spikeapi.network.request.StepsSummary: StepsSummary(java.lang.Long,java.lang.Integer,java.lang.Long)
androidx.fragment.app.DialogFragment: void setCancelable(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String component23()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
com.spikeapi.network.request.BodyFatPercentageStats: com.spikeapi.network.request.BodyFatPercentageStats copy(java.lang.Double,java.lang.Integer)
com.spikeapi.network.request.MuscleMassValue: java.lang.String component1()
com.spikeapi.network.request.OxygenSaturationSummary: com.spikeapi.network.request.OxygenSaturationSummary copy$default(com.spikeapi.network.request.OxygenSaturationSummary,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer,int,java.lang.Object)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.spikeapi.network.request.TotalCaloriesSummary: com.spikeapi.network.request.TotalCaloriesSummary copy$default(com.spikeapi.network.request.TotalCaloriesSummary,java.lang.Double,java.lang.Integer,java.lang.Double,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.moengage.core.model.SdkState: com.moengage.core.model.SdkState[] values()
com.spikeapi.network.response.SpikeHRIntradayData: com.spikeapi.network.response.SpikeHRIntradayData copy$default(com.spikeapi.network.response.SpikeHRIntradayData,java.lang.String,java.lang.Double,int,java.lang.Object)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget valueOf(java.lang.String)
com.spikeapi.network.request.HeartRateRawData: com.spikeapi.network.request.RestingHeartRate getRestingHeartRate()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeBreathingDataType getBREATHING()
androidx.core.app.NotificationCompatBuilder$Api17Impl: android.app.Notification$Builder setShowWhen(android.app.Notification$Builder,boolean)
com.moengage.plugin.base.internal.model.SelfHandledInAppCallbackType: com.moengage.plugin.base.internal.model.SelfHandledInAppCallbackType valueOf(java.lang.String)
com.facebook.appevents.codeless.internal.PathComponent$MatchBitmaskType: com.facebook.appevents.codeless.internal.PathComponent$MatchBitmaskType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
androidx.security.crypto.EncryptedSharedPreferences$EncryptedType: androidx.security.crypto.EncryptedSharedPreferences$EncryptedType valueOf(java.lang.String)
com.lyokone.location.FlutterLocationService: FlutterLocationService()
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.String getEndTime()
com.moe.pushlibrary.activities.MoEActivity$onCreate$6: MoEActivity$onCreate$6(com.moe.pushlibrary.activities.MoEActivity)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
com.spikeapi.SpikeExceptions$SpikeException: SpikeExceptions$SpikeException()
kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation: kotlin.reflect.jvm.internal.impl.incremental.components.NoLookupLocation[] values()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setLegacyStreamType(android.media.AudioAttributes$Builder,int)
com.spikeapi.network.response.TimeSeriesData: com.spikeapi.network.response.TimeSeriesData copy(java.lang.String,java.lang.Double)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.activity.ComponentActivity: ComponentActivity(int)
com.spikeapi.network.request.SleepSummary: java.lang.Long component5()
com.spikeapi.network.request.ActivitiesSummaryRawData: boolean equals(java.lang.Object)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String component1()
androidx.webkit.internal.ApiHelperForM: java.lang.CharSequence getDescription(android.webkit.WebResourceError)
com.spikeapi.network.response.HeartRateResponseData: java.lang.Integer component2()
com.google.firebase.iid.Registrar: Registrar()
androidx.window.core.Version: java.lang.String toString()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List component25()
com.facebook.login.DeviceAuthDialog: DeviceAuthDialog()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAlgorithmicDarkeningAllowed(boolean)
com.spikeapi.network.request.OxygenSaturationSummary: OxygenSaturationSummary(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)
dev.spike.flutter_health_connect.SpikeLogLevel: dev.spike.flutter_health_connect.SpikeLogLevel valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.spikeapi.network.response.SpikeHRIntradayData: com.spikeapi.network.response.SpikeHRIntradayData copy(java.lang.String,java.lang.Double)
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.spikeapi.network.request.OxygenSaturationSummary: java.lang.Double component2()
com.spikeapi.network.request.BreathingSummary: java.lang.Double getSum()
com.spikeapi.network.response.SpikeSourceWebhook: boolean isSuccess()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.spikeapi.network.response.BoneMassData: com.spikeapi.network.response.BoneMassData copy$default(com.spikeapi.network.response.BoneMassData,java.lang.Double,java.util.List,int,java.lang.Object)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
com.moe.pushlibrary.activities.MoEActivity$onCreate$1: java.lang.Object invoke()
kotlin.Metadata: java.lang.String[] d1()
com.spikeapi.network.request.DistanceSummary: java.lang.Double getSum()
com.spikeapi.network.request.HeartRateSummary: java.lang.Long component2()
com.moengage.pushbase.internal.CacheStrategy: com.moengage.pushbase.internal.CacheStrategy[] values()
com.spikeapi.network.response.SessionsResponse: com.spikeapi.network.response.SessionsResponse copy$default(com.spikeapi.network.response.SessionsResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,int,java.lang.Object)
com.spikeapi.network.request.StepsRawData: int hashCode()
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.fragment.app.Fragment: Fragment()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
com.spikeapi.network.response.SpikeSourceWebhook: boolean equals(java.lang.Object)
com.spikeapi.network.request.SpikeRequest: java.lang.String component7()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.webkit.WebChromeClient getWebChromeClient()
com.moengage.plugin.base.internal.model.PermissionType: com.moengage.plugin.base.internal.model.PermissionType[] values()
com.spikeapi.network.request.HeartRateSummary: HeartRateSummary()
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.BodyFatPercentageData getBodyFatPercentage()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.Double getMin()
com.spikeapi.network.request.StepsSummary: java.lang.Integer getCount()
com.moengage.core.DataCenter: com.moengage.core.DataCenter[] values()
com.spikeapi.network.response.DistanceResponseData: DistanceResponseData(java.lang.String,java.util.List,java.lang.String,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme: androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility: kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Visibility valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.spikeapi.network.request.StepsRecord: java.lang.String getSource()
com.spikeapi.network.request.StepsRecord: java.lang.String getEndTime()
com.moengage.inapp.internal.model.enums.ScreenOrientation: com.moengage.inapp.internal.model.enums.ScreenOrientation valueOf(java.lang.String)
com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture: com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
com.spikeapi.network.request.TotalCaloriesRecord: java.lang.Double getValue()
com.spikeapi.network.request.BloodPressure: com.spikeapi.network.request.BloodPressure copy(com.spikeapi.network.request.BloodPressureStats,java.util.List)
com.spikeapi.network.request.WeightStats: com.spikeapi.network.request.WeightStats copy$default(com.spikeapi.network.request.WeightStats,java.lang.Double,java.lang.Integer,int,java.lang.Object)
com.spikeapi.network.request.BoneMassValue: com.spikeapi.network.request.BoneMassValue copy(java.lang.String,java.lang.Double)
com.spikeapi.network.request.HeartRateVariability: boolean equals(java.lang.Object)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
androidx.window.core.Bounds: Bounds(int,int,int,int)
com.spikeapi.network.response.SessionsResponse: java.lang.String toString()
com.spikeapi.network.response.IntradayCaloriesData: java.lang.String toString()
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component9()
com.spikeapi.network.request.GlucoseRecord: java.lang.String component2()
com.spikeapi.network.request.BodyFatPercentageValue: boolean equals(java.lang.Object)
com.spikeapi.network.request.BloodPressure: java.util.List getValues()
androidx.window.core.Version: Version(int,int,int,java.lang.String)
com.spikeapi.SpikeExceptions$SpikeServerException: SpikeExceptions$SpikeServerException(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.Fragment: void performPause()
com.spikeapi.network.response.TimeSeriesData: boolean equals(java.lang.Object)
com.spikeapi.network.request.ActivitiesSummaryRawData: ActivitiesSummaryRawData(java.lang.String,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String)
com.moengage.pushbase.internal.fragments.TimePickerFragment: java.lang.String lambda$onCancel$1()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component16()
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double getCoverage()
kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability: kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability[] values()
com.spikeapi.network.response.MuscleMassData: java.util.List getTimeseries()
com.spikeapi.network.response.OxygenSaturationResponseData: java.lang.String getSource()
com.spikeapi.network.response.SessionsResponse: java.lang.String component1()
androidx.fragment.app.DialogFragment: void dismiss()
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BodyRawData copy$default(com.spikeapi.network.request.BodyRawData,java.lang.String,com.spikeapi.network.request.Weight,com.spikeapi.network.request.Height,com.spikeapi.network.request.BMI,com.spikeapi.network.request.BodyFatPercentage,com.spikeapi.network.request.BoneMass,com.spikeapi.network.request.MuscleMass,com.spikeapi.network.request.WaterPercentage,com.spikeapi.network.request.SkinTemperature,com.spikeapi.network.request.CoreTemperature,com.spikeapi.network.request.BloodPressure,int,java.lang.Object)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
com.spikeapi.network.response.SpikeResponse: java.util.List component6()
com.moe.pushlibrary.activities.MoEActivity: void onCreate(android.os.Bundle)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget: kotlin.reflect.jvm.internal.impl.descriptors.annotations.AnnotationUseSiteTarget[] values()
dev.spike.flutter_health_connect.model.SpikeOperationResult: SpikeOperationResult(boolean)
com.spikeapi.network.request.BodyFatPercentageStats: int hashCode()
com.spikeapi.network.request.BloodPressureStats: BloodPressureStats(java.lang.Double,java.lang.Double,java.lang.Integer)
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String)
com.moengage.pushbase.internal.PushBaseHandlerImpl: void requestPushPermission(android.content.Context,java.util.Map)
com.moengage.pushbase.internal.MoETimePickerDialog: void setMin(int,int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
com.spikeapi.network.request.BoneMass: java.util.List component2()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.cardview.widget.CardView: float getCardElevation()
com.facebook.HttpMethod: com.facebook.HttpMethod[] values()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.spikeapi.network.response.SpikeSource: com.spikeapi.network.response.SpikeSource copy$default(com.spikeapi.network.response.SpikeSource,java.lang.String,boolean,java.lang.String,int,java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
com.spikeapi.network.request.CoreTemperatureValue: java.lang.Double component2()
com.moengage.core.internal.push.fcm.FcmHandler: void registerForPushToken(android.content.Context)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.spikeapi.model.SpikeActivitiesSummaryDataType: SpikeActivitiesSummaryDataType()
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
com.yalantis.ucrop.view.TransformImageView: void setTransformImageListener(com.yalantis.ucrop.view.TransformImageView$TransformImageListener)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
com.spikeapi.network.response.SpikeResponse: java.lang.String getEndUserId()
com.moengage.core.internal.model.DeviceType: com.moengage.core.internal.model.DeviceType[] values()
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: boolean getHasException()
androidx.cardview.widget.CardView: int getContentPaddingLeft()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
com.spikeapi.network.response.OxygenSaturationIntradayData: com.spikeapi.network.response.OxygenSaturationIntradayData copy(java.lang.String,java.lang.Double)
com.spikeapi.network.request.ActiveCaloriesRecord: java.lang.String getStartTime()
com.spikeapi.network.request.Lap: com.spikeapi.network.request.Lap copy(java.lang.Integer,java.lang.Integer)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.String toString()
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification build(android.app.Notification$Builder)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel valueOf(java.lang.String)
com.spikeapi.network.request.SkinTemperatureStats: java.lang.Double getAvg()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlin.reflect.jvm.internal.impl.load.java.SpecialGenericSignatures$TypeSafeBarrierDescription: kotlin.reflect.jvm.internal.impl.load.java.SpecialGenericSignatures$TypeSafeBarrierDescription[] values()
com.google.android.play.core.common.PlayCoreDialogWrapperActivity: PlayCoreDialogWrapperActivity()
com.spikeapi.network.request.ActivitiesSummaryRawData: int hashCode()
com.spikeapi.network.request.BloodPressureStats: java.lang.Integer component3()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
com.spikeapi.network.request.HeartRateVariabilityValue: com.spikeapi.network.request.HeartRateVariabilityValue copy(java.lang.String,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)
com.spikeapi.network.response.StepsResponseData: java.lang.String component1()
com.spikeapi.SpikeConnection: b.a getHealthConnectManager$sdk_release()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.spikeapi.network.request.Weight: com.spikeapi.network.request.WeightStats getStats()
com.spikeapi.network.request.ActivitiesStreamRawData: com.spikeapi.network.request.ActivitiesStreamRawData copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Double,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.String,java.lang.Long,java.lang.Double,java.lang.Double,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Double,java.lang.Double,java.util.List)
com.google.android.gms.internal.measurement.zzoa: com.google.android.gms.internal.measurement.zzoa[] values()
com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$ServiceResult: com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$ServiceResult valueOf(java.lang.String)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getFloors()
com.moengage.core.model.IntegrationPartner: com.moengage.core.model.IntegrationPartner[] values()
com.spikeapi.model.SpikeHeartRateDataType: SpikeHeartRateDataType()
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String getApplicationId()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
com.moengage.inapp.model.enums.NavigationType: com.moengage.inapp.model.enums.NavigationType[] values()
com.moengage.pushbase.activities.PushClickDialogTracker: void onDateSelected(int,int,int)
com.spikeapi.network.response.BreathingResponseData: java.util.List getIntradayData()
com.facebook.appevents.internal.AppEventsLoggerUtility$GraphAPIActivityType: com.facebook.appevents.internal.AppEventsLoggerUtility$GraphAPIActivityType valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.spikeapi.network.request.TotalCaloriesSummary: java.lang.Integer getCount()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.spikeapi.network.response.IntradayCaloriesData: java.lang.String component3()
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.spikeapi.network.request.RestingHeartRateSummary: RestingHeartRateSummary(java.lang.Long,java.lang.Integer,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
com.spikeapi.network.response.BodyData: boolean equals(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
com.spikeapi.network.request.RestingHeartRateSummary: java.lang.Integer component2()
com.spikeapi.network.response.BodyData: com.spikeapi.network.response.WeightData getWeightKg()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
com.spikeapi.network.response.TemperatureTimeSeriesData: java.lang.Double component2()
com.spikeapi.network.request.StepsRecord: StepsRecord()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component7()
com.spikeapi.network.request.HeightStats: HeightStats(java.lang.Double,java.lang.Integer)
com.spikeapi.network.request.ActiveCaloriesBurned: ActiveCaloriesBurned(com.spikeapi.network.request.ActiveCaloriesSummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
androidx.fragment.app.Fragment: void performLowMemory()
com.spikeapi.SpikeDataTypes: com.spikeapi.model.SpikeOxygenSaturationDataType getOXYGEN_SATURATION()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$CallMode: kotlin.reflect.jvm.internal.calls.AnnotationConstructorCaller$CallMode valueOf(java.lang.String)
com.spikeapi.network.request.HeartRateValue: java.lang.String getStartTime()
com.moengage.pushbase.internal.MoEPushWorker: java.lang.String access$getTag$p(com.moengage.pushbase.internal.MoEPushWorker)
com.spikeapi.network.request.BMIStats: java.lang.String toString()
androidx.activity.ComponentActivity: void onActivityResult(int,int,android.content.Intent)
com.spikeapi.network.request.HeightStats: java.lang.String toString()
com.facebook.HttpMethod: com.facebook.HttpMethod valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.window.java.R: R()
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
com.moengage.inbox.core.model.enums.NavigationType: com.moengage.inbox.core.model.enums.NavigationType[] values()
com.facebook.appevents.codeless.internal.PathComponent$MatchBitmaskType: com.facebook.appevents.codeless.internal.PathComponent$MatchBitmaskType[] values()
com.spikeapi.network.request.HeightValue: HeightValue(java.lang.String,java.lang.Double)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.spikeapi.network.response.IntradayStepsData: int hashCode()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
com.yalantis.ucrop.view.widget.AspectRatioTextView: AspectRatioTextView(android.content.Context,android.util.AttributeSet)
com.spikeapi.SpikeLogger: void debug(java.lang.String)
com.spikeapi.network.response.IntradayGlucoseData: java.lang.String component6()
androidx.fragment.app.Fragment: boolean isAdded()
com.spikeapi.model.SpikeSleepData: SpikeSleepData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
com.spikeapi.network.response.HeartRateResponseData: java.lang.String getDate()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
kotlin.Metadata: int[] mv()
com.spikeapi.network.request.SkinTemperatureValue: int hashCode()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component10()
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getMaxSpeed()
com.spikeapi.network.request.HeartRateRawData: HeartRateRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.HeartRate,com.spikeapi.network.request.RestingHeartRate,com.spikeapi.network.request.HeartRateVariability)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$LowerCapturedTypePolicy: kotlin.reflect.jvm.internal.impl.types.TypeCheckerState$LowerCapturedTypePolicy[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.spikeapi.network.request.RestingHeartRateValue: java.lang.String toString()
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
kotlin.collections.EmptyList: java.lang.Object readResolve()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: boolean component3()
com.spikeapi.network.request.RestingHeartRateValue: java.lang.String component1()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
com.spikeapi.network.request.HeartRateVariabilitySummary: int hashCode()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
com.moengage.inapp.internal.model.enums.StateUpdateType: com.moengage.inapp.internal.model.enums.StateUpdateType[] values()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
com.spikeapi.network.request.Height: com.spikeapi.network.request.Height copy(com.spikeapi.network.request.HeightStats,java.util.List)
com.moengage.pushbase.internal.fragments.LaterDialogFragment: void setItemSelected(com.moengage.pushbase.internal.listener.OptionSelectionListener)
com.spikeapi.network.response.BoneMassData: java.util.List component2()
androidx.health.connect.client.units.Mass$Type: androidx.health.connect.client.units.Mass$Type[] values()
com.spikeapi.SpikeConnection: com.squareup.moshi.Moshi getMoshi$sdk_release()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component28()
androidx.health.connect.client.units.Temperature$Type: androidx.health.connect.client.units.Temperature$Type[] values()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component5()
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar: com.google.firebase.dynamiclinks.FirebaseDynamicLinks lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
com.spikeapi.model.SpikeBodyDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double component10()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
com.spikeapi.SpikeConnection: java.lang.Object extractData$default(com.spikeapi.SpikeConnection,com.spikeapi.model.SpikeDataType,java.time.OffsetDateTime,java.time.OffsetDateTime,kotlin.coroutines.Continuation,int,java.lang.Object)
com.spikeapi.network.request.BreathingSummary: BreathingSummary()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.vernost.BounzAppUAT.BounzApplication: BounzApplication()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getCaloriesActive()
com.spikeapi.network.request.BoneMassStats: java.lang.String toString()
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.spikeapi.network.request.MuscleMassStats: java.lang.Double getAvg()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.moengage.core.internal.model.cryptography.CryptographyAlgorithm: com.moengage.core.internal.model.cryptography.CryptographyAlgorithm[] values()
com.baseflow.geolocator.GeolocatorLocationService: GeolocatorLocationService()
com.spikeapi.network.request.GlucoseRawData: java.lang.String component1()
com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$ServiceResult: com.facebook.appevents.ondeviceprocessing.RemoteServiceWrapper$ServiceResult[] values()
com.spikeapi.network.request.CaloriesRawData: java.lang.String component2()
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.activity.ComponentActivity: void onNewIntent(android.content.Intent)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.DialogFragment: void onDetach()
com.moengage.pushbase.internal.fragments.LaterDialogFragment: com.moengage.pushbase.internal.listener.OptionSelectionListener access$000(com.moengage.pushbase.internal.fragments.LaterDialogFragment)
androidx.core.app.ActivityCompat$Api21Impl: void finishAfterTransition(android.app.Activity)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.moengage.pushbase.activities.PushClickDialogTracker: void onItemSelected(long)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.String getActivityName()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
com.google.firebase.iid.Registrar: java.util.List getComponents()
com.spikeapi.SpikeConnection: com.spikeapi.healthconnect.HealthConnectAvailability getHealthConnectAvailability()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor,boolean)
com.moengage.pushbase.internal.MoETimePickerDialog: void updateDialogTitle(android.widget.TimePicker,int,int)
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Integer component8()
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getElevation()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
com.spikeapi.network.response.HeightData: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.spikeapi.network.response.HeartRateResponseData: java.lang.Double component6()
androidx.datastore.preferences.protobuf.ByteString$BoundedByteString: void readObject(java.io.ObjectInputStream)
com.spikeapi.network.response.DetailedTemperatureData: java.lang.String toString()
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
com.spikeapi.network.request.SleepRawData: java.lang.String component2()
androidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
com.spikeapi.network.response.BloodPressureData: java.lang.Integer getSystolicBloodPressure()
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
com.spikeapi.network.request.OxygenSaturationRawData: OxygenSaturationRawData()
com.spikeapi.network.request.CoreTemperatureStats: CoreTemperatureStats(java.lang.Double,java.lang.Integer)
kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind: kotlin.reflect.jvm.internal.impl.load.java.structure.LightClassOriginKind valueOf(java.lang.String)
com.moengage.pushbase.model.PushService: com.moengage.pushbase.model.PushService[] values()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double component11()
com.spikeapi.SpikeConnection$Companion: java.lang.Object createConnection(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.spikeapi.SpikeEnvironment,com.spikeapi.SpikeLogger,kotlin.coroutines.Continuation)
com.spikeapi.network.response.StepsResponseData: java.util.List getIntradayData()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer getMaxStressLevel()
com.yalantis.ucrop.view.OverlayView: void setCropGridStrokeWidth(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.spikeapi.network.request.BMI: BMI()
com.facebook.common.Common: Common()
kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability: kotlin.reflect.jvm.internal.impl.types.checker.TypeIntersector$ResultNullability valueOf(java.lang.String)
com.spikeapi.model.SpikeBreathingDataType: java.lang.Object postData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
com.spikeapi.network.request.CoreTemperatureValue: boolean equals(java.lang.Object)
com.spikeapi.network.response.HeartRateResponseData: com.spikeapi.network.response.SpikeHRVData component8()
com.spikeapi.network.request.HeartRateVariabilityValue: java.lang.Double component4()
com.spikeapi.network.response.DistanceResponseData: java.util.List getIntradayData()
com.spikeapi.network.request.RestingHeartRateValue: java.lang.String getEndTime()
com.spikeapi.model.SpikeWebhookJob: int hashCode()
com.spikeapi.network.response.SessionsResponse: java.lang.String component3()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
dev.spike.flutter_health_connect.model.SpikeLoggingData: java.lang.String getMessage()
com.spikeapi.model.SpikeCaloriesDataType: java.lang.Object getData$sdk_release(b.a,e.a,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,a.b,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
com.spikeapi.network.request.BloodPressureStats: boolean equals(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
com.spikeapi.network.response.Sample: java.lang.Object getPowerInWatts()
com.spikeapi.network.request.WaterPercentage: com.spikeapi.network.request.WaterPercentageStats getStats()
com.spikeapi.network.response.TimeSeriesData: java.lang.String getTimestamp()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Double getElevHigh()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
com.moengage.core.internal.push.pushkit.PushKitHandler: void onAppOpen(android.content.Context)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
com.spikeapi.network.request.BreathingRecord: java.lang.String getEndTime()
kotlin.collections.EmptySet: java.lang.Object readResolve()
com.moengage.pushbase.internal.MoETimePickerDialog: MoETimePickerDialog(android.content.Context,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder createBuilder()
com.spikeapi.network.response.SleepResponseData: java.lang.String component3()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.activity.ComponentActivity: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
dev.spike.flutter_health_connect.model.SpikeLoggingData: boolean equals(java.lang.Object)
com.spikeapi.network.response.DetailedTemperatureData: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.util.List getOriginalSource()
com.spikeapi.network.request.BreathingRecord: java.lang.String component1()
com.spikeapi.network.request.SkinTemperatureStats: com.spikeapi.network.request.SkinTemperatureStats copy(java.lang.Double,java.lang.Integer)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String component2()
com.spikeapi.network.response.BodyResponseData: com.spikeapi.network.response.BodyData component3()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.spikeapi.network.request.Height: java.lang.String toString()
androidx.window.layout.WindowInfoTracker: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
dev.spike.flutter_health_connect.model.SpikeOperationResult: java.lang.String toString()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsCustomizer$JDKMemberStatus: kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsCustomizer$JDKMemberStatus valueOf(java.lang.String)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component20()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.spikeapi.network.request.DistanceRecord: java.lang.String component2()
com.spikeapi.network.response.SleepResponseData: java.lang.Double component13()
com.spikeapi.network.request.BMIValue: BMIValue()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.spikeapi.network.request.HeightValue: java.lang.String getTime()
com.facebook.internal.SmartLoginOption: com.facebook.internal.SmartLoginOption valueOf(java.lang.String)
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType[] values()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
com.spikeapi.network.request.HeartRateVariability: int hashCode()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.spikeapi.network.request.MuscleMass: java.util.List component2()
com.spikeapi.network.response.DiffFromBaselineTemperatureTimeSeriesData: java.lang.Double getDiffTemperatureCelsius()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle bigText(android.app.Notification$BigTextStyle,java.lang.CharSequence)
com.google.crypto.tink.shaded.protobuf.JavaType: com.google.crypto.tink.shaded.protobuf.JavaType[] values()
com.moengage.pushbase.internal.MoETimePickerDialog: void onTimeChanged(android.widget.TimePicker,int,int)
com.spikeapi.network.response.SessionsResponse: java.lang.Boolean component5()
com.spikeapi.network.request.HeartRateVariabilityValue: com.spikeapi.network.request.HeartRateVariabilityValue copy$default(com.spikeapi.network.request.HeartRateVariabilityValue,java.lang.String,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,int,java.lang.Object)
com.spikeapi.network.request.SpikeRequest: com.spikeapi.network.request.SpikeRequest copy$default(com.spikeapi.network.request.SpikeRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,int,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
com.spikeapi.network.request.BMIValue: java.lang.Double getValue()
com.spikeapi.network.request.CoreTemperatureValue: java.lang.String component1()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
com.spikeapi.network.response.SpikeHRVIntradayData: java.lang.String toString()
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.spikeapi.network.request.OxygenSaturationSummary: OxygenSaturationSummary()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.spikeapi.network.request.HeartRate: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.spikeapi.ConnectionState: java.lang.String getAccountId()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String component29()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
com.spikeapi.network.response.BloodPressureData: BloodPressureData(java.lang.String,java.lang.Integer,java.lang.Integer)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.request.SkinTemperature: com.spikeapi.network.request.SkinTemperatureStats getStats()
com.spikeapi.model.SpikeWebhookJob: java.lang.String getNotificationId()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.spikeapi.network.request.RestingHeartRate: RestingHeartRate(com.spikeapi.network.request.RestingHeartRateSummary,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] values()
com.spikeapi.network.request.BMIValue: java.lang.Double component2()
com.moe.pushlibrary.activities.MoEActivity$onCreate$5: java.lang.Object invoke()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder[] values()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.spikeapi.model.SpikeHeartRateData: SpikeHeartRateData(java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List,java.time.OffsetDateTime,java.util.List)
com.spikeapi.network.request.SkinTemperature: java.util.List component2()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf)
androidx.activity.ComponentActivity: void onConfigurationChanged(android.content.res.Configuration)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
com.spikeapi.network.request.BreathingSummary: java.lang.String toString()
com.spikeapi.network.request.RestingHeartRate: com.spikeapi.network.request.RestingHeartRateSummary getSummary()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.health.platform.client.impl.data.ProtoParcelable: ProtoParcelable()
kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier: kotlin.reflect.jvm.internal.impl.load.java.typeEnhancement.NullabilityQualifier valueOf(java.lang.String)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.facebook.internal.GamingAction: com.facebook.internal.GamingAction valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.webkit.internal.ApiHelperForM: void postWebMessage(android.webkit.WebView,android.webkit.WebMessage,android.net.Uri)
com.spikeapi.network.request.TotalCaloriesSummary: boolean equals(java.lang.Object)
com.spikeapi.network.request.SessionsRequest: java.lang.String getOs()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getRem()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.spikeapi.network.response.WeightData: java.util.List component2()
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
dev.spike.flutter_health_connect.model.SpikeOperationResult: dev.spike.flutter_health_connect.model.SpikeOperationResult copy(boolean)
com.spikeapi.model.SpikeActivitiesStreamDataType: SpikeActivitiesStreamDataType()
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long component20()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
com.spikeapi.network.response.TimeSeriesData: java.lang.String toString()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String getDateFrom()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
com.spikeapi.network.request.BreathingRecord: java.lang.Double getValue()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.spikeapi.network.response.SpikeSource: java.lang.String getName()
com.spikeapi.network.request.HeartRate: java.util.List component2()
com.spikeapi.network.request.BMIValue: java.lang.String toString()
androidx.activity.ComponentActivity: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
com.spikeapi.network.response.OxygenSaturationResponseData: com.spikeapi.network.response.OxygenSaturationResponseData copy(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.util.List,java.lang.String)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getElevLow()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
com.spikeapi.network.request.DistanceRecord: DistanceRecord()
com.spikeapi.network.request.BreathingRecord: java.lang.Double component3()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
com.spikeapi.network.request.OxygenSaturationRawData: int hashCode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.yalantis.ucrop.view.GestureCropImageView: int getDoubleTapScaleSteps()
kotlin.reflect.jvm.internal.impl.builtins.UnsignedArrayType: kotlin.reflect.jvm.internal.impl.builtins.UnsignedArrayType[] values()
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
com.spikeapi.network.response.StepsResponseData: java.lang.Integer getValue()
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.window.R$styleable: R$styleable()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
androidx.window.core.Version: int getPatch()
com.spikeapi.network.request.BodyFatPercentage: com.spikeapi.network.request.BodyFatPercentage copy$default(com.spikeapi.network.request.BodyFatPercentage,com.spikeapi.network.request.BodyFatPercentageStats,java.util.List,int,java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerCache$CacheType: io.flutter.plugins.imagepicker.ImagePickerCache$CacheType[] values()
com.google.zxing.datamatrix.encoder.SymbolShapeHint: com.google.zxing.datamatrix.encoder.SymbolShapeHint[] values()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.facebook.appevents.cloudbridge.OtherEventConstants: com.facebook.appevents.cloudbridge.OtherEventConstants[] values()
com.spikeapi.network.response.BloodPressureData: java.lang.Integer component3()
com.moengage.core.model.SdkState: com.moengage.core.model.SdkState valueOf(java.lang.String)
androidx.health.platform.client.proto.ByteString$BoundedByteString: void readObject(java.io.ObjectInputStream)
kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsCustomizer$JDKMemberStatus: kotlin.reflect.jvm.internal.impl.builtins.jvm.JvmBuiltInsCustomizer$JDKMemberStatus[] values()
com.spikeapi.network.request.BreathingSummary: java.lang.Double component3()
com.moengage.core.internal.push.base.PushBaseHandler: void onLogout(android.content.Context,com.moengage.core.internal.model.SdkInstance)
com.spikeapi.network.request.ActivitiesStreamRawData: java.util.List component25()
com.spikeapi.network.request.WaterPercentageStats: int hashCode()
com.spikeapi.network.response.BoneMassData: java.lang.Double component1()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
com.spikeapi.SpikeConnection: com.spikeapi.ConnectionState getConnectionState$sdk_release()
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.window.embedding.ActivityFilter: java.lang.String toString()
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
com.spikeapi.network.request.BloodPressure: int hashCode()
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
com.spikeapi.network.request.HeartRateRawData: int hashCode()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.String getActivityTypeId()
com.moengage.widgets.MoERatingBar: void getXmlAttrs(android.content.Context,android.util.AttributeSet)
com.spikeapi.network.request.Weight: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzob: com.google.android.gms.internal.measurement.zzob[] values()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.spikeapi.network.response.BreathingResponseData: java.lang.String getDataType()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.spikeapi.network.response.SpikeWebhookJobResponse: java.lang.String getAccountId()
com.spikeapi.network.response.MuscleMassData: java.lang.String toString()
androidx.cardview.widget.CardView: void setRadius(float)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
com.spikeapi.network.response.StepsResponseData: java.lang.String getSource()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
dev.spike.flutter_health_connect.model.SpikeLoggingData: void setConnectionId(java.lang.String)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.window.core.Bounds: int getTop()
androidx.fragment.app.Fragment: boolean isMenuVisible()
androidx.window.layout.FoldingFeature: boolean isSeparating()
com.spikeapi.network.request.WeightValue: int hashCode()
com.spikeapi.network.request.ActiveCaloriesSummary: ActiveCaloriesSummary(java.lang.Double,java.lang.Integer,java.lang.Double,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
androidx.health.platform.client.proto.GeneratedMessageLite$MethodToInvoke: androidx.health.platform.client.proto.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
kotlin.reflect.jvm.internal.impl.types.error.ErrorTypeKind: kotlin.reflect.jvm.internal.impl.types.error.ErrorTypeKind valueOf(java.lang.String)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes build(android.media.AudioAttributes$Builder)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.moengage.inapp.internal.model.enums.ScreenOrientation: com.moengage.inapp.internal.model.enums.ScreenOrientation[] values()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
kotlin.reflect.jvm.internal.impl.builtins.UnsignedType: kotlin.reflect.jvm.internal.impl.builtins.UnsignedType[] values()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setApi(io.flutter.plugins.webviewflutter.WebViewFlutterApiImpl)
com.spikeapi.network.request.RestingHeartRateSummary: boolean equals(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String getDate()
com.spikeapi.network.response.IntradayStepsData: java.lang.String toString()
com.spikeapi.network.response.SpikeWebhookJobResponse: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Integer component34()
dev.spike.flutter_health_connect.model.SpikeAndroidExceptionData: void setMessage(java.lang.String)
com.google.crypto.tink.shaded.protobuf.ProtoSyntax: com.google.crypto.tink.shaded.protobuf.ProtoSyntax valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Long component21()
com.moengage.pushbase.internal.fragments.DatePickerFragment: DatePickerFragment()
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double getWeighedAvgWatts()
kotlin.Metadata: java.lang.String pn()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebAuthnSupport()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.spikeapi.SpikeConnection: androidx.activity.result.contract.ActivityResultContract requestReadAuthorization()
com.spikeapi.network.request.ActivitiesSummaryRawData: java.lang.Integer getElevation()
com.spikeapi.network.request.HeartRateVariabilitySummary: java.lang.Double component2()
com.spikeapi.SpikeConnection: java.lang.String getCustomerUserId()
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.moengage.core.internal.model.cryptography.CryptographyType: com.moengage.core.internal.model.cryptography.CryptographyType valueOf(java.lang.String)
com.spikeapi.network.response.BreathingResponseData: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
com.spikeapi.network.response.SpikeResponse: java.lang.String component2()
com.spikeapi.ConnectionState: java.lang.String component5()
com.spikeapi.network.request.StepsSummary: java.lang.String toString()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer component7()
com.spikeapi.network.request.BodyRawData: com.spikeapi.network.request.BodyFatPercentage component5()
com.spikeapi.network.response.ActivitiesStreamResponseData: java.lang.Boolean getDeviceWatts()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType: kotlin.reflect.jvm.internal.impl.resolve.jvm.JvmPrimitiveType valueOf(java.lang.String)
com.spikeapi.network.request.BreathingRawData: int hashCode()
com.spikeapi.network.request.SleepRawData: java.lang.String getBedtimeStart()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.spikeapi.network.request.BodyFatPercentage: BodyFatPercentage(com.spikeapi.network.request.BodyFatPercentageStats,java.util.List)
com.moengage.core.internal.push.base.PushBaseHandler: void requestPushPermission(android.content.Context,java.util.Map)
com.spikeapi.network.request.Lap: int hashCode()
com.spikeapi.network.request.BreathingSummary: int hashCode()
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
com.spikeapi.network.request.BloodPressure: com.spikeapi.network.request.BloodPressureStats component1()
com.spikeapi.network.response.SleepResponseData: java.lang.Integer getHrAverage()
com.spikeapi.network.request.HeightValue: java.lang.Double getValue()
com.spikeapi.network.request.WaterPercentage: WaterPercentage(com.spikeapi.network.request.WaterPercentageStats,java.util.List,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.spikeapi.network.response.HeightData: java.lang.String toString()
com.spikeapi.network.request.TotalCaloriesSummary: java.lang.Integer component2()
com.spikeapi.network.request.SleepRawData: java.lang.String getBedtimeEnd()
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.Integer component11()
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
com.spikeapi.network.request.WeightStats: int hashCode()
com.moengage.core.internal.model.PushTokenType: com.moengage.core.internal.model.PushTokenType valueOf(java.lang.String)
dev.spike.flutter_health_connect.model.SpikeLoggingData: java.lang.String component1()
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
com.spikeapi.network.response.ActivitySummaryResponseData: java.lang.String component25()
com.spikeapi.network.response.SpikeHRIntradayData: java.lang.String toString()
kotlin.reflect.jvm.internal.impl.types.error.ErrorScopeKind: kotlin.reflect.jvm.internal.impl.types.error.ErrorScopeKind[] values()
com.spikeapi.network.request.StepsSummary: int hashCode()
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
com.spikeapi.network.request.CoreTemperature: CoreTemperature(com.spikeapi.network.request.CoreTemperatureStats,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
com.spikeapi.network.response.DetailedTemperatureData: com.spikeapi.network.response.DetailedTemperatureData copy(java.lang.Double,java.util.List)
androidx.activity.ComponentActivity: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object readResolve()
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.internal.FacebookDialogFragment: FacebookDialogFragment()
com.spikeapi.network.request.SkinTemperature: com.spikeapi.network.request.SkinTemperature copy$default(com.spikeapi.network.request.SkinTemperature,com.spikeapi.network.request.SkinTemperatureStats,java.util.List,int,java.lang.Object)
kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier: kotlin.reflect.jvm.internal.impl.renderer.DescriptorRendererModifier[] values()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: java.lang.String getVariationsHeader()
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
com.spikeapi.network.request.HeartRateRawData: HeartRateRawData(java.lang.String,java.lang.String,com.spikeapi.network.request.HeartRate,com.spikeapi.network.request.RestingHeartRate,com.spikeapi.network.request.HeartRateVariability,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.spikeapi.healthconnect.HealthConnectAvailability: com.spikeapi.healthconnect.HealthConnectAvailability[] $values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
com.spikeapi.network.request.BMI: com.spikeapi.network.request.BMI copy$default(com.spikeapi.network.request.BMI,com.spikeapi.network.request.BMIStats,java.util.List,int,java.lang.Object)
com.spikeapi.network.request.ActivitiesStreamRawData: java.lang.Double component11()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
